<?xml version="1.0"?>
<doc>
    <assembly>
        <name>hwinformchart4</name>
    </assembly>
    <members>
        <member name="T:Hippo.WindowsForm4.HippoDesignerVerb">
            <summary>
            HippoDesignerVerb
            </summary> 
        </member>
        <member name="M:Hippo.WindowsForm4.HippoDesignerVerb.Initialize(System.ComponentModel.IComponent)">
            <summary>
            디자이너를 지정된 구성 요소로 초기화합니다.
            </summary>
            <param name="component">디자이너에 연결할 IComponent</param>
        </member>
        <member name="M:Hippo.WindowsForm4.HippoDesignerVerb.OnRefresh(System.Object,System.EventArgs)">
            <summary>
            샘플 그래프 다시 그리기
            </summary>
            <param name="sender"></param>
            <param name="args"></param>
        </member>
        <member name="T:Hippo.WindowsForm4.HippoDesignerVerb2">
            <summary>
            HippoDesignerVerb2
            </summary>
        </member>
        <member name="M:Hippo.WindowsForm4.HippoDesignerVerb2.Initialize(System.ComponentModel.IComponent)">
            <summary>
            디자이너를 지정된 구성 요소로 초기화합니다.
            </summary>
            <param name="component">디자이너에 연결할 IComponent</param>
        </member>
        <member name="M:Hippo.WindowsForm4.HippoDesignerVerb2.OnRefresh(System.Object,System.EventArgs)">
            <summary>
            샘플 그래프 다시 그리기
            </summary>
            <param name="sender"></param>
            <param name="args"></param>
        </member>
        <member name="M:Hippo.WindowsForm4.PropertyEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            GetEditStyle에 표시된 편집기 스타일을 사용하여 지정된 개체의 값을 편집합니다.
            </summary>
            <param name="context"> 추가 컨텍스트 정보를 얻는 데 사용할 수 있는 ITypeDescriptorContext </param>
            <param name="provider"> 이 편집기에서 서비스를 얻는 데 사용할 수 있는 IServiceProvider </param>
            <param name="value"> 편집할 개체 </param>
            <returns> 개체의 새 값 </returns>
        </member>
        <member name="M:Hippo.WindowsForm4.PropertyEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            EditValue 메서드에서 사용하는 편집기 스타일을 가져옵니다 
            </summary>
            <param name="context"> 추가 컨텍스트 정보를 얻는 데 사용할 수 있는 ITypeDescriptorContext </param>
            <returns> 편집기 스타일(Modal, Dropdown, None) </returns>
        </member>
        <member name="T:Hippo.WindowsForm4.ChartDataBindingEventHandler">
            <summary>
            ContextMenuEventHandler 
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Hippo.WindowsForm4.ChartDataBindingEventArgs">
            <summary>
            ChartDataBindingEventArg
            </summary>
        </member>
        <member name="M:Hippo.WindowsForm4.ChartDataBindingEventArgs.#ctor">
            <summary>
            ChartDataBindingEventArg 인스턴스를 생성합니다.
            </summary>
        </member>
        <member name="P:Hippo.WindowsForm4.ChartDataBindingEventArgs.Value">
            <summary>
            Value
            </summary>
        </member>
        <member name="T:Hippo.WindowsForm4.ContextMenuEventHandler">
            <summary>
            ContextMenuEventHandler 
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Hippo.WindowsForm4.ContextMenuEventArgs">
            <summary>
            ContextMenuEventArg
            </summary>
        </member>
        <member name="E:Hippo.WindowsForm4.ContextMenuEventArgs.Click">
            <summary>
            ContextMenu Click Event
            </summary>
        </member>
        <member name="M:Hippo.WindowsForm4.ContextMenuEventArgs.#ctor(Hippo.WindowsForm4.ContextMenuType,System.Windows.Forms.ToolStripItem)">
            <summary>
            ContextMenuEventArg 인스턴스를 생성합니다.
            </summary>
            <param name="contextMenuType"></param>
            <param name="thisItem"></param> 
        </member>
        <member name="M:Hippo.WindowsForm4.ContextMenuEventArgs.OnClick(System.EventArgs)">
            <summary>
            ContextMenu Click Event Handler
            </summary>
            <param name="e"></param>
        </member>
        <member name="P:Hippo.WindowsForm4.ContextMenuEventArgs.Name">
            <summary>
            Name
            </summary>
        </member>
        <member name="P:Hippo.WindowsForm4.ContextMenuEventArgs.Image">
            <summary>
            Icon Image
            </summary>
        </member>
        <member name="P:Hippo.WindowsForm4.ContextMenuEventArgs.Cancel">
            <summary>
            Cancel
            </summary>
        </member>
        <member name="P:Hippo.WindowsForm4.ContextMenuEventArgs.ContextMenuType">
            <summary>
            ContextMenuType
            </summary>
        </member>
        <member name="T:Hippo.WindowsForm4.PropertyEditorForm">
            <summary>
            PropertyEditorForm
            </summary>
        </member>
        <member name="M:Hippo.WindowsForm4.PropertyEditorForm.#ctor(System.Object)">
            <summary>
            PropertyEditorForm 인스턴스를 생성합니다.
            </summary>
            <param name="property"></param>
        </member>
        <member name="M:Hippo.WindowsForm4.PropertyEditorForm.btnOK_Click(System.Object,System.EventArgs)">
            <summary>
            확인
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Hippo.WindowsForm4.PropertyEditorForm.btnCancel_Click(System.Object,System.EventArgs)">
            <summary>
            취소
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="F:Hippo.WindowsForm4.PropertyEditorForm.components">
            <summary>
            필수 디자이너 변수입니다.
            </summary>
        </member>
        <member name="M:Hippo.WindowsForm4.PropertyEditorForm.Dispose(System.Boolean)">
            <summary>
            사용 중인 모든 리소스를 정리합니다.
            </summary>
            <param name="disposing">관리되는 리소스를 삭제해야 하면 true이고, 그렇지 않으면 false입니다.</param>
        </member>
        <member name="M:Hippo.WindowsForm4.PropertyEditorForm.InitializeComponent">
            <summary>
            디자이너 지원에 필요한 메서드입니다.
            이 메서드의 내용을 코드 편집기로 수정하지 마십시오.
            </summary>
        </member>
        <member name="T:Hippo.WindowsForm4.LicenseTypes">
            <summary>
            라이선스 타입
            </summary>
        </member>
        <member name="F:Hippo.WindowsForm4.LicenseTypes.Trial">
            <summary>
            평가판 유저
            </summary>
        </member>
        <member name="F:Hippo.WindowsForm4.LicenseTypes.Error">
            <summary>
            라이선스 문제 발생 (라이선스 파일 불일치)
            </summary>
        </member>
        <member name="F:Hippo.WindowsForm4.LicenseTypes.Goood">
            <summary>
            정식 사용자
            </summary>
        </member>
        <member name="T:Hippo.WindowsForm4.ContextMenuType">
            <summary>
            ContextMenuType - 오른쪽 버튼 기능
            </summary>
        </member>
        <member name="F:Hippo.WindowsForm4.ContextMenuType.Save">
            <summary>
            저장
            </summary>
        </member>
        <member name="F:Hippo.WindowsForm4.ContextMenuType.ChartType">
            <summary>
            차트종류
            </summary>
        </member>
        <member name="F:Hippo.WindowsForm4.ContextMenuType.LegendBox">
            <summary>
            범례
            </summary>
        </member>
        <member name="F:Hippo.WindowsForm4.ContextMenuType.Effect">
            <summary>
            효과
            </summary>
        </member>
        <member name="F:Hippo.WindowsForm4.ContextMenuType.Tools">
            <summary>
            도구
            </summary>
        </member>
        <member name="F:Hippo.WindowsForm4.ContextMenuType.Copy">
            <summary>
            복사
            </summary>
        </member>
        <member name="F:Hippo.WindowsForm4.ContextMenuType.UserMenu1">
            <summary>
            유저메뉴1
            </summary>
        </member>
        <member name="F:Hippo.WindowsForm4.ContextMenuType.UserMenu2">
            <summary>
            유저메뉴2
            </summary>
        </member>
        <member name="F:Hippo.WindowsForm4.ContextMenuType.UserMenu3">
            <summary>
            유저메뉴3
            </summary>
        </member>
        <member name="F:Hippo.WindowsForm4.ContextMenuType.UserMenu4">
            <summary>
            유저메뉴4
            </summary>
        </member>
        <member name="F:Hippo.WindowsForm4.ContextMenuType.UserMenu5">
            <summary>
            유저메뉴5
            </summary>
        </member>
        <!-- "F:Hippo.WindowsForm4.ContextMenuType.UserMenu6" 멤버에 대해 잘못된 형식의 XML 주석은 무시됩니다. -->
        <member name="F:Hippo.WindowsForm4.ContextMenuType.UserMenu7">
            <summary>
            유저메뉴7
            </summary>
        </member>
        <member name="F:Hippo.WindowsForm4.ContextMenuType.UserMenu8">
            <summary>
            유저메뉴8
            </summary>
        </member>
        <member name="F:Hippo.WindowsForm4.ContextMenuType.UserMenu9">
            <summary>
            유저메뉴9
            </summary>
        </member>
        <member name="F:Hippo.WindowsForm4.ContextMenuType.UserMenu10">
            <summary>
            유저메뉴10
            </summary>
        </member>
        <member name="T:Hippo.WindowsForm4.ZoomStatus">
            <summary>
            현재 줌 상태를 나타냅니다.
            </summary>
        </member>
        <member name="T:Hippo.WindowsForm4.hHippoChart">
            <summary>
            히포차트 윈도우즈 폼 컨트롤
            </summary>  
        </member>
        <member name="E:Hippo.WindowsForm4.hHippoChart.ChartSizeChanged">
            <summary>
            차트 사이즈가 변경될때 발생합니다.
            </summary>
            <remarks>히포차트 윈폼 컨트롤을 더블클릭하면 해당 이벤트가 생성되며 기본 메소드의 호출만으로 차트의 새로고침을 구현합니다. </remarks>
            <example>
            <code>
                    hHippochart1.DrawChart(); 
            </code>
            </example>
        </member>
        <member name="E:Hippo.WindowsForm4.hHippoChart.ChartDataBinging">
            <summary>
            이 이벤트를 통해 차트 데이터를 실시간으로 반영할 수 있습니다. (사용 중지된 이벤트)
            </summary>
        </member>
        <member name="E:Hippo.WindowsForm4.hHippoChart.ChartDesignTypeChanged">
            <summary>
            차트 디자인타입이 변경될때 발생합니다.
            </summary>
        </member>
        <member name="E:Hippo.WindowsForm4.hHippoChart.ChartContextMenuCreated">
            <summary>
            차트 컨텍스트메뉴가 생성될 때 발생합니다.
            </summary>
            <remarks>컨텍스트 메뉴가 생성될 때 발생하는 이벤트를 통해 특정 메뉴를 취소할 수 있습니다. </remarks>
            <example>
                <code>
                    private void hHippoChart1_ChartContextMenuCreated(object sender, ContextMenuEventArg e)
                       {
                           if (e.ContextMenuType == Hippo.ChartControl.ContextMenuType.Reset)
                           {
                               e.Cancel = true;
                           }
                        }
                </code>
            </example>
        </member>
        <member name="E:Hippo.WindowsForm4.hHippoChart.ChartClick">
            <summary>
            차트가 클릭될 때 발생합니다. 
            </summary>
        </member>
        <member name="E:Hippo.WindowsForm4.hHippoChart.ChartDoubleClick">
            <summary>
            차트를 더블 클릭될 때 발생합니다. 
            </summary>
        </member>
        <member name="E:Hippo.WindowsForm4.hHippoChart.ChartMouseClick">
            <summary>
            차트에 마우스를 클릭될 때 발생합니다. 
            </summary>
        </member>
        <member name="E:Hippo.WindowsForm4.hHippoChart.ChartMouseDoubleClick">
            <summary>
            차트에 마우스를 더블클릭될 때 발생합니다.
            </summary>
        </member>
        <member name="E:Hippo.WindowsForm4.hHippoChart.ChartMouseDown">
            <summary>
            차트에 마우스가 있을때 마우스 단추를 누를때 발생합니다.
            </summary>
        </member>
        <member name="E:Hippo.WindowsForm4.hHippoChart.ChartMouseUp">
            <summary>
            차트에 마우스가 있을때 마우스 단추를 놓으면 발생합니다.
            </summary>
        </member>
        <member name="E:Hippo.WindowsForm4.hHippoChart.ChartMouseMove">
             <summary>
             차트에 마우스가 있을때 마우스가 움직이면 발생합니다.
             </summary>
             <remarks>해당 이벤트는 가장 많이 사용되는 이벤트 중 하나로 마우스를 특정 막대, 라인에 갖다대었을 때 Balloon 객체와 함께 수치를 보이게 하거나 마우스를 따라 십자 라인을 그려주는 액션 등에 활용됩니다.  
             아래 샘플 코드는 라인 차트에 마우스를 갖다댈 경우 풍선 도움말로 수치를 표시해주는 코드입니다. 
             </remarks>
             <example>
                 <code>
                        private void Form1_Load(object sender, EventArgs e)
                        {
                             this.hHippoChart1.SeriesListDictionary.Clear();
            
                             SeriesList sList = new SeriesList();
                             sList.ChartType = ChartType.Line; 
                             
                             Random r = new Random();
                             
                             for(int i = 0; i[1; i++)
                             {
                                 Series sr = new Series();
                                 sr.Line.LineWidth = 5;
                                 sr.Points.Width = 10; 
                
                                 for(int x = 0; x[ 5; x++)
                                 {
                                     SeriesItem item = new SeriesItem();
                                     item.Name = "item" + x.ToString();
                                     item.YValue = r.Next(900); 
                                     item.Balloon = new Balloon();
                                     item.Balloon.Label.Text = item.YValue.ToString();
                                     item.Balloon.Visible = false;
            
                                     sr.items.Add(item);
                                 }
                                 sList.SeriesCollection.Add(sr);
                             } 
                            this.hHippoChart1.SeriesListDictionary.Add(sList);
                            this.hHippoChart1.DrawChart();
                            }
            
                            private void hHippoChart1_ChartMouseMove(object sender, MouseEventArgs e)
                            {
                                for (int i = 0; i [ this.hHippoChart1.SeriesListDictionary[0].SeriesCollection[0].items.Count; i++)
                                { 
                                    float pwidth = this.hHippoChart1.SeriesListDictionary[0].SeriesCollection[0].items[i].Points.Width; 
                                    PointF firstpoint
                                    = new PointF
                                    (
                                         this.hHippoChart1.SeriesListDictionary[0].SeriesCollection[0].items[i].FigurePoint.X - pwidth,
                                         this.hHippoChart1.SeriesListDictionary[0].SeriesCollection[0].items[i].FigurePoint.Y - pwidth
                                    ); 
                                    
                                    float lastPoX = (float)(firstpoint.X + pwidth);
                                    float lastPoY = (float)(firstpoint.Y + pwidth); 
                                    PointF lastPoint = new PointF(lastPoX, lastPoY); 
                                    if (e.X ]= firstpoint.X and e.X [= lastPoint.X and e.Y ]= firstpoint.Y and e.Y [= lastPoint.Y)
                                    {
                                        this.hHippoChart1.SeriesListDictionary[0].SeriesCollection[0].items[i].Balloon.Visible = true;
                                    }
                                    else
                                    {
                                        this.hHippoChart1.SeriesListDictionary[0].SeriesCollection[0].items[i].Balloon.Visible = false;
                                    }
                                }
            
                                this.hHippoChart1.DrawChart();
                            }
                       }
                 </code>
             </example>
        </member>
        <member name="E:Hippo.WindowsForm4.hHippoChart.ChartMouseHover">
            <summary>
            차트에 마우스가 일정시간 동안 컨트롤의 내부에 있을 때 발생합니다.
            </summary>
        </member>
        <member name="E:Hippo.WindowsForm4.hHippoChart.ChartMouseEnter">
            <summary>
            차트에 마우스가 보이는 부분으로 가져갈 때 발생합니다.
            </summary>
        </member>
        <member name="E:Hippo.WindowsForm4.hHippoChart.ChartMouseLeave">
            <summary>
            차트에 마우스가 보이는 부분에서 벗어날 때 발생합니다.
            </summary>
        </member>
        <member name="E:Hippo.WindowsForm4.hHippoChart.ChartPrinting">
            <summary>
            차트 컨텍스트 메뉴의 도구/인쇄 기능을 클릭할때 발생합니다.
            </summary>
        </member>
        <member name="E:Hippo.WindowsForm4.hHippoChart.ChartMouseDrag">
            <summary>
            차트에 마우스를 드래그 할때 발생합니다. 
            </summary>
        </member>
        <member name="M:Hippo.WindowsForm4.hHippoChart.#ctor">
            <summary>
            hHippoChart 인스턴스를 생성합니다.
            </summary>
        </member>
        <member name="M:Hippo.WindowsForm4.hHippoChart.OnChartSizeChanged(System.EventArgs)">
            <summary>
            OnChartSizeChanged 이벤트
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Hippo.WindowsForm4.hHippoChart.OnChartClick(System.EventArgs)">
            <summary>
            OnChartClick 이벤트
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Hippo.WindowsForm4.hHippoChart.OnChartDoubleClick(System.EventArgs)">
            <summary>
            OnChartDoubleClick 이벤트
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Hippo.WindowsForm4.hHippoChart.OnChartMouseClick(System.Windows.Forms.MouseEventArgs)">
            <summary>
            OnChartMouseClick 이벤트
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Hippo.WindowsForm4.hHippoChart.OnChartMouseDoubleClick(System.Windows.Forms.MouseEventArgs)">
            <summary>
            OnChartMouseDoubleClick
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Hippo.WindowsForm4.hHippoChart.OnChartMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            OnChartMouseDown
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Hippo.WindowsForm4.hHippoChart.OnChartMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            OnChartMouseUp
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Hippo.WindowsForm4.hHippoChart.OnChartMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            OnChartMouseMove
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Hippo.WindowsForm4.hHippoChart.OnChartMouseHover(System.EventArgs)">
            <summary>
            ChartMouseHover
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Hippo.WindowsForm4.hHippoChart.OnChartMouseEnter(System.EventArgs)">
            <summary>
            OnChartMouseEnter
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Hippo.WindowsForm4.hHippoChart.OnChartMouseLeave(System.EventArgs)">
            <summary>
            OnChartMouseLeave
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Hippo.WindowsForm4.hHippoChart.OnDataBinging(System.EventArgs)">
            <summary>
            OnDataBinging 이벤트
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Hippo.WindowsForm4.hHippoChart.pictureBox1_SizeChanged(System.Object,System.EventArgs)">
            <summary>
            pictureBox1_SizeChanged 이벤트
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Hippo.WindowsForm4.hHippoChart.OnChartDesignTypeChanged(System.EventArgs)">
            <summary>
            OnChartDesignTypeChanged 이벤트
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Hippo.WindowsForm4.hHippoChart.OnChartContextMenuAdded(Hippo.WindowsForm4.ContextMenuEventArgs)">
            <summary>
            OnChartContextMenuAdded 이벤트
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Hippo.WindowsForm4.hHippoChart.pictureBox1_Click(System.Object,System.EventArgs)">
            <summary>
            pictureBox1_Click 이벤트 핸들러
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Hippo.WindowsForm4.hHippoChart.pictureBox1_DoubleClick(System.Object,System.EventArgs)">
            <summary>
            pictureBox1_DoubleClick 이벤트 핸들러
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Hippo.WindowsForm4.hHippoChart.pictureBox1_MouseClick(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            pictureBox1_MouseClick 이벤트 핸들러
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Hippo.WindowsForm4.hHippoChart.OnChartMouseDrag(System.EventArgs)">
            <summary>
            OnChartMouseLeave
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Hippo.WindowsForm4.hHippoChart.OnLoad(System.EventArgs)">
            <summary>
            OnLoad 이벤트
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Hippo.WindowsForm4.hHippoChart.ToString">
            <summary>
            HippoChart Beta v3.1 (since 2007.09)
            </summary>
            <returns></returns>
        </member>
        <member name="M:Hippo.WindowsForm4.hHippoChart.InitChart">
            <summary>
            차트 초기화 작업
            </summary>
        </member>
        <member name="M:Hippo.WindowsForm4.hHippoChart.AddContextMenu">
            <summary>
            컨텍스트 메뉴를 사용자 이벤트로 재구성합니다.
            </summary>
        </member>
        <member name="M:Hippo.WindowsForm4.hHippoChart.DrawSampleChart">
            <summary>
            샘플 차트를 그립니다.
            </summary>
        </member>
        <member name="M:Hippo.WindowsForm4.hHippoChart.DrawDefault">
            <summary>
            차트의 기본 모양을 그립니다.(호출 대상이 아닙니다.)
            </summary>
        </member>
        <member name="M:Hippo.WindowsForm4.hHippoChart.DrawChart(System.Data.DataTable,System.String,System.String[])">
            <summary>
            히포 차트를 생성합니다.
            </summary>
            <param name="ChartSource">데이터 소스</param>
            <param name="nameColumn">이름 컬럼(x 축)</param>
            <param name="valueColumns">값 컬럼(y 축)</param>
        </member>
        <member name="M:Hippo.WindowsForm4.hHippoChart.DrawChart(Hippo.SeriesListDictionary)">
            <summary>
            히포 차트를 생성합니다.
            </summary>
            <param name="SeriesListDictionary">시리즈리스트 컬렉션</param>
        </member>
        <member name="M:Hippo.WindowsForm4.hHippoChart.DrawChart(Hippo.SeriesList)">
            <summary>
            히포 차트를 생성합니다.
            </summary>
            <param name="SeriesList">시리즈리스트</param>
        </member>
        <member name="M:Hippo.WindowsForm4.hHippoChart.DrawChart">
            <summary>
            히포 차트를 생성합니다.
            </summary>
            <remarks>히포차트 기본 드로잉 메소드로 기존 설정 사항 그대로 다시 그립니다 (새로고침). 실시간 차트 구현 시 이용하기도 합니다. </remarks>
        </member>
        <member name="M:Hippo.WindowsForm4.hHippoChart.ControlDevelperLIC">
            <summary>
            개발자 라이선스 체크
            </summary>
            <returns></returns>
        </member>
        <member name="M:Hippo.WindowsForm4.hHippoChart.CheckRelease(System.Reflection.Assembly)">
            <summary>
            배포 라이선스 체크
            </summary>
            <param name="guid"></param>
            <returns></returns>
        </member>
        <member name="M:Hippo.WindowsForm4.hHippoChart.CheckRegistry">
            <summary>
            레지스트리 체크
            </summary>
            <returns></returns>
        </member>
        <member name="M:Hippo.WindowsForm4.hHippoChart.ResetRealTimeData">
            <summary>
            실시간 데이터 셋을 초기화합니다.
            </summary>
        </member>
        <member name="M:Hippo.WindowsForm4.hHippoChart.DrawRealTimeChart(System.Double,System.Int32)">
            <summary>
            실시간 데이터를 그립니다.  
            </summary>
            <remarks>
                Timer, Threading 등 을 통해 반복적으로 호출합니다. 첫번재 시리즈 리스트의 첫번째 시리즈에 값을 추가합니다.
            </remarks>
            <param name="data">현재 그릴 값</param>
            <param name="maxDataCount">한 화면에 보여질 데이터 개수</param>
        </member>
        <member name="M:Hippo.WindowsForm4.hHippoChart.DrawRealTimeChart(Hippo.SeriesItem,System.Int32)">
            <summary>
            실시간 데이터를 그립니다.  
            </summary>
            <remarks>
                Timer, Threading 등 을 통해 반복적으로 호출합니다. 첫번재 시리즈 리스트의 첫번째 시리즈에 값을 추가합니다.
            </remarks>
            <param name="data">현재 그릴 값</param>
            <param name="maxDataCount">한 화면에 보여질 데이터 개수</param>
        </member>
        <member name="M:Hippo.WindowsForm4.hHippoChart.DrawRealTimeChart(System.Int32,System.Double[])">
            <summary>
            실시간 데이터를 그립니다.(멀티 시리즈)
            </summary>
            <remarks>
                Timer, Threading 등 을 통해 반복적으로 호출합니다. 멀티 시리즈 실시간 차트로 시리즈 데이터를 순차적 배열로 입력합니다. 
            </remarks>
            <param name="maxDataCount">한 화면에 보여지는 데이터 개수</param>
            <param name="data">데이터 배열</param>
        </member>
        <member name="M:Hippo.WindowsForm4.hHippoChart.DrawRealTimeChart(System.Int32,Hippo.SeriesItem[])">
            <summary>
            실시간 데이터를 그립니다.(멀티 시리즈)
            </summary>
            <remarks>
                Timer, Threading 등 을 통해 반복적으로 호출합니다. 멀티 시리즈 실시간 차트로 시리즈 데이터를 순차적 배열로 입력합니다. 
            </remarks>
            <param name="maxDataCount">한 화면에 보여지는 데이터 개수</param>
            <param name="data">데이터 배열</param>
        </member>
        <member name="M:Hippo.WindowsForm4.hHippoChart.DrawRealTimeChart(System.Double,System.Int32,System.Int32)">
            <summary>
            실시간 데이터를 그립니다. (Timer, Threading 등 을 통해 반복적으로 호출합니다.)
            </summary>
            <param name="data">현재 그릴 값</param>
            <param name="SeriesListIndex">데이터를 추가할 시리즈리스트 인덱스</param>
            <param name="SeriesIndex">데이터를 추가할 시리즈 인덱스</param>
        </member>
        <member name="M:Hippo.WindowsForm4.hHippoChart.DrawRealTimeChart(Hippo.SeriesItem,System.Int32,System.Int32)">
            <summary>
            실시간 데이터를 그립니다. (Timer, Threading 등 을 통해 반복적으로 호출합니다.)
            </summary>
            <param name="data">현재 그릴 값</param>
            <param name="SeriesListIndex">데이터를 추가할 시리즈리스트 인덱스</param>
            <param name="SeriesIndex">데이터를 추가할 시리즈 인덱스</param>
        </member>
        <member name="M:Hippo.WindowsForm4.hHippoChart.DrawRealTimeChart2(System.Int32,System.Double[])">
            <summary>
            실시간 데이터 그리기(멀티 시리즈)
            </summary>
            <param name="SeriesListIndex"></param>
            <param name="data"></param>
        </member>
        <member name="M:Hippo.WindowsForm4.hHippoChart.DrawRealTimeChart2(System.Int32,Hippo.SeriesItem[])">
            <summary>
            실시간 데이터 그리기(멀티 시리즈)
            </summary>
            <param name="SeriesListIndex"></param>
            <param name="data"></param>
        </member>
        <member name="M:Hippo.WindowsForm4.hHippoChart.SaveImage(System.String,System.Drawing.Imaging.ImageFormat)">
            <summary>
            차트 이미지를 저장합니다.
            </summary>
            <param name="ImageName">차트 이미지 전체 경로 (예: C:\My Pictures\hippoChart.png )</param>
            <param name="format">차트 이미지 포맷(예: png, gif, jpg ..)</param>
        </member>
        <member name="M:Hippo.WindowsForm4.hHippoChart.CopyToClipboard">
            <summary>
            클립보드로 차트 이미지를 저장합니다.
            </summary>
        </member>
        <member name="M:Hippo.WindowsForm4.hHippoChart.ChangeChartTypes(Hippo.ChartType)">
            <summary>
            차트 전체의 차트 타입을 변경합니다.
            </summary>
            <param name="type">변경할 차트 타입</param>
        </member>
        <member name="M:Hippo.WindowsForm4.hHippoChart.isbackgridToolStripMenuItem_Click(System.Object,System.EventArgs)">
            <summary>
            배경 디자인을 표시할 것인지 여부
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Hippo.WindowsForm4.hHippoChart.isfigureToolStripMenuItem_Click(System.Object,System.EventArgs)">
            <summary>
            데이터 수치 표현
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Hippo.WindowsForm4.hHippoChart.sumviewToolStripMenuItem_Click(System.Object,System.EventArgs)">
            <summary>
            스택형 데이터 합계 보기
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Hippo.WindowsForm4.hHippoChart.valueToolStripMenuItem_Click(System.Object,System.EventArgs)">
            <summary>
            범례에 value를 추가한다.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Hippo.WindowsForm4.hHippoChart.percentToolStripMenuItem_Click(System.Object,System.EventArgs)">
            <summary>
            범례에 percent를 추가한다.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Hippo.WindowsForm4.hHippoChart.valuepercentToolStripMenuItem_Click(System.Object,System.EventArgs)">
            <summary>
            범례에 value, percent 를 추가한다.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Hippo.WindowsForm4.hHippoChart.defaultToolStripMenuItem2_Click(System.Object,System.EventArgs)">
            <summary>
            수치 표시 위치 : default
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Hippo.WindowsForm4.hHippoChart.bottomToolStripMenuItem1_Click(System.Object,System.EventArgs)">
            <summary>
            수치 표시 위치 : bottom
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Hippo.WindowsForm4.hHippoChart.topToolStripMenuItem1_Click(System.Object,System.EventArgs)">
            <summary>
            수치 표시 위치 : top
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Hippo.WindowsForm4.hHippoChart.leftToolStripMenuItem1_Click(System.Object,System.EventArgs)">
            <summary>
            수치 표시 위치 : left
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Hippo.WindowsForm4.hHippoChart.rightToolStripMenuItem_Click(System.Object,System.EventArgs)">
            <summary>
            수치 표시 위치 : right
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Hippo.WindowsForm4.hHippoChart.excelToolStripMenuItem_Click(System.Object,System.EventArgs)">
            <summary>
            엑셀 내보내기
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Hippo.WindowsForm4.hHippoChart.Print(System.EventArgs)">
            <summary>
            차트 이미지를 인쇄합니다.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Hippo.WindowsForm4.hHippoChart.doc_PrintPage(System.Object,System.Drawing.Printing.PrintPageEventArgs)">
            <summary>
            프린트 이벤트 핸들러 
            </summary>
            <remarks>차트 실행 후 오른쪽 버튼/도구/인쇄 메뉴를 실행합니다.</remarks>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Hippo.WindowsForm4.hHippoChart.ResetAll">
            <summary>
            차트의 모든 설정을 초기화합니다, 
            </summary>
            <remarks>반복적으로 호출할 경우 성능에 좋지 않습니다.</remarks>
        </member>
        <member name="M:Hippo.WindowsForm4.hHippoChart.ResetData">
            <summary>
            차트의 데이터를 초기화 합니다.(시리즈 리스트 초기화)
            </summary>
            <remarks>반복적으로 호출할 경우 성능에 좋지 않습니다.</remarks>
        </member>
        <member name="P:Hippo.WindowsForm4.hHippoChart.DragRectangle">
            <summary>
            차트 드레그시에 사각 눈금 영역의 Rectangle을 반환합니다. 
            </summary>
        </member>
        <member name="P:Hippo.WindowsForm4.hHippoChart.IsDrag">
            <summary>
            마우스 드레그 시 사각 눈금 표시를 사용할 것인지 여부를 설정하고 가져옵니다. 
            </summary> 
        </member>
        <member name="P:Hippo.WindowsForm4.hHippoChart.ProcessorType">
            <summary>
            CPU 플랫폼 타입을 설정하고 가져옵니다. 
            </summary> 
            <remarks>
            32, 64로 표시되는 플랫폼 타입은 공동작업 시 다른 플랫폼으로 인해 '개체참조가 개체 인스턴스로 설정되지 않았습니다' 라는 에러를 도출할 수 있습니다. 
            이럴 경우 디자인모드에서 해당 속성 값을 빈 값으로 지우시면 해결됩니다. 
            </remarks>
        </member>
        <member name="P:Hippo.WindowsForm4.hHippoChart.IsEmptyanalysis">
            <summary>
            공간 분석 프로세스를 수행할 것인지 여부를 설정하고 가져옵니다. 기본값은 true
            </summary>
        </member>
        <member name="P:Hippo.WindowsForm4.hHippoChart.SeriesAreaRate">
            <summary>
            시리즈의 공간을 배분하는 비율을 설정하고 가져옵니다. 기본값은 1 : 1 (예, slist.SeriesAreaRate = "2 : 8"; )
            </summary> 
        </member>
        <member name="P:Hippo.WindowsForm4.hHippoChart.RealTimeList">
            <summary>
            실시간 차트 셋을 설정하고 가져옵니다.
            </summary>
            <remarks>리얼타임리스트는 실시간을 구현하는 시리즈의 개수만큼 Add 를 해주어야합니다. </remarks>
        </member>
        <member name="P:Hippo.WindowsForm4.hHippoChart.ChartID">
            <summary>
            현재 그리고 있는 차트의 아이디를 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.WindowsForm4.hHippoChart.IsUseContextMenu">
            <summary>
            콘텍스트 메뉴 사용 여부를 설정하고 가져옵니다.
            </summary>
            <remarks>디자인모드에서의 설정을 권장합니다. </remarks>
        </member>
        <member name="P:Hippo.WindowsForm4.hHippoChart.Message">
            <summary>
            히포차트에서 발생하는 각종 메세지를 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.WindowsForm4.hHippoChart.ChartFileName">
            <summary>
            차트 이미지 파일 이름을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.WindowsForm4.hHippoChart.ChartImage">
            <summary>
            차트 이미지를 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.WindowsForm4.hHippoChart.ChartGraphic">
            <summary>
            차트 그래픽를 설정하고 가져옵니다.
            </summary>
            <remarks>
                본 속성을 통해 히포차트의 Drawing 이후에 새로운 사용자 정의 Painting을 처리할 수 있습니다.  
            </remarks>
            <example>
                <code>
                    ... 
                    this.hHippoChart1.DrawChart(); 
                    
                    g = Graphics.FromImage(this.hHippoChart1.ChartImage);  
                    
                    if (g != null)
                    {
                        g.DrawString(
                        "테스트 글자",
                        new Font("굴림", 20, FontStyle.Italic),
                        new SolidBrush(Color.Red),
                        new PointF(this.hHippoChart1.SeriesListDictionary[0].AxisFactor.CoordinateRectangle.Left + 50, this.hHippoChart1.SeriesListDictionary[0].AxisFactor.CoordinateRectangle.Top + 40)
                   ); 
                   
                   g.DrawEllipse(Pens.Red, new Rectangle(300, 150, 80, 80)); 
                   
                   this.hHippoChart1.Refresh();
                </code>
            </example>
        </member>
        <member name="P:Hippo.WindowsForm4.hHippoChart.ChartRectangle">
            <summary>
            히포차트 전체 사각형를 설정하고 가져옵니다.
            </summary> 
        </member>
        <member name="P:Hippo.WindowsForm4.hHippoChart.Layout">
            <summary>
            히포차트 디자인을 위한 기반 레이아웃 클래스를 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.WindowsForm4.hHippoChart.DesignType">
            <summary>
            차트 디자인 타입를 설정하고 가져옵니다.
            </summary>
            <remarks>디자인타입은 히포차트 3.x 버전에서 많이 사용하던 속성으로 4.2 이상의 버전일 경우 사용을 권장하지 않습니다. 구 샘플코드를 이용하실 경우 해당 줄을 제거해주셔도 좋습니다.</remarks>
        </member>
        <member name="P:Hippo.WindowsForm4.hHippoChart.Width2">
            <summary>
            차트 가로길이를 설정하고 가져옵니다.
            </summary> 
        </member>
        <member name="P:Hippo.WindowsForm4.hHippoChart.Height2">
            <summary>
            차트 세로 길이를 설정하고 가져옵니다.
            </summary>  
        </member>
        <member name="P:Hippo.WindowsForm4.hHippoChart.Left">
            <summary>
            차트 X 위치를 설정하고 가져옵니다.
            </summary> 
        </member>
        <member name="P:Hippo.WindowsForm4.hHippoChart.Top">
            <summary>
            차트 Y 위치를 설정하고 가져옵니다.
            </summary>  
        </member>
        <member name="P:Hippo.WindowsForm4.hHippoChart.Designer">
            <summary>
            차트 디자이너를 설정하고 가져옵니다.
            </summary>
            <remarks>
                히포차트 바깥쪽 디자인을 담당하는 속성입니다. 전체 배경색을 담당하는 속성은 innerBackColor 입니다. (참고사항)
            </remarks>
        </member>
        <member name="P:Hippo.WindowsForm4.hHippoChart.Titles">
            <summary>
            차트 타이틀를 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.WindowsForm4.hHippoChart.LegendBox">
            <summary>
            범례를 설정하고 가져옵니다.
            </summary>
            <remarks>해당 속성은 시리즈리스트 레벨에도 존재합니다. 본 속성은 차트 바깥에 표시하는 범례이고 시리즈리스트 레벨의 범례는 차트 내부에 표시됩니다. </remarks>
        </member>
        <member name="P:Hippo.WindowsForm4.hHippoChart.Logo">
            <summary>
            로고를 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.WindowsForm4.hHippoChart.SeriesListDictionary">
            <summary>
            시리즈 리스트 컬렉션를 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.WindowsForm4.hHippoChart.Direction">
            <summary>
            그래프 영역의 방향를 설정하고 가져옵니다.
            </summary>
            <remarks>다중 시리즈리스트일 경우에 사용하는 속성으로 시리즈리스트를 수직방향으로 추가, 수평방향으로 추가의 의미로 사용됩니다.</remarks>
        </member>
        <member name="P:Hippo.WindowsForm4.hHippoChart.PaletteType">
            <summary>
            팔레트 종류를 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="M:Hippo.WindowsForm4.hHippoChart.ExportCSV(System.Int32)">
            <summary>
            CSV 내보내기
            </summary>
            <param name="seriesListIndex">시리즈리스트 인덱스</param>
        </member>
        <member name="M:Hippo.WindowsForm4.hHippoChart.ExportExcel">
            <summary>
            엑셀 내보내기
            </summary>
        </member>
        <member name="F:Hippo.WindowsForm4.hHippoChart.components">
            <summary>
            필수 디자이너 변수입니다.
            </summary>
        </member>
        <member name="M:Hippo.WindowsForm4.hHippoChart.Dispose(System.Boolean)">
            <summary>
            사용 중인 모든 리소스를 정리합니다.
            </summary>
            <param name="disposing">관리되는 리소스를 삭제해야 하면 true이고, 그렇지 않으면 false입니다.</param>
        </member>
        <member name="M:Hippo.WindowsForm4.hHippoChart.InitializeComponent">
            <summary>
            디자이너 지원에 필요한 메서드입니다. 
            이 메서드의 내용을 코드 편집기로 수정하지 마십시오.
            </summary>
        </member>
        <member name="T:Hippo.WindowsForm4.HippoRealTimeAttribute">
            <summary>
            HippoRealTimeAttribute
            </summary>
        </member>
        <member name="M:Hippo.WindowsForm4.HippoRealTimeAttribute.#ctor">
            <summary>
            HippoRealTimeAttribute instance
            </summary>
        </member>
        <member name="P:Hippo.WindowsForm4.HippoRealTimeAttribute.Index">
            <summary>
            실시간 데이터 셋의 인덱스 값을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.WindowsForm4.HippoRealTimeAttribute.DataArray">
            <summary>
            실시간 데이터 셋 배열을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.WindowsForm4.HippoRealTimeAttribute.SeriesItemArray">
            <summary>
            실시간 데이터 셋 시리즈아이템을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.WindowsForm4.HippoRealTimeAttribute.RealTimeMaxDataCount">
            <summary>
            실시간 데이터 셋의 최대 보여지는 개수를 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="T:Hippo.WindowsForm4.HippoRealTimeAttributeCollection">
            <summary>
            HippoRealTimeAttributeCollection
            </summary>
        </member>
        <member name="T:Hippo.WindowsForm4.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Hippo.WindowsForm4.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Hippo.WindowsForm4.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Hippo.WindowsForm4.Properties.Resources.gauge1">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Hippo.WindowsForm4.Properties.Resources.gauge2">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Hippo.WindowsForm4.Properties.Resources.gauge3">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Hippo.WindowsForm4.Properties.Resources.gauge4">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Hippo.WindowsForm4.Properties.Resources.gauge5">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Hippo.WindowsForm4.Properties.Resources.gauge6">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Hippo.WindowsForm4.Properties.Resources.pin1">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Hippo.WindowsForm4.Properties.Resources.themeter1">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Hippo.WindowsForm4.Properties.Resources.themeter2">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="T:Hippo.WindowsForm4.sHippoChart">
            <summary>
            히포차트 윈도우즈 폼 스크롤링 컨트롤
            </summary> 
        </member>
        <member name="E:Hippo.WindowsForm4.sHippoChart.ChartSizeChanged">
            <summary>
            차트 사이즈가 변경될때 발생합니다.
            </summary>
        </member>
        <member name="E:Hippo.WindowsForm4.sHippoChart.ChartDataBinging">
            <summary>
            이 이벤트를 통해 차트 데이터를 실시간으로 반영할 수 있습니다.
            </summary>
        </member>
        <member name="E:Hippo.WindowsForm4.sHippoChart.ChartDesignTypeChanged">
            <summary>
            차트 디자인타입이 변경될때 발생합니다.
            </summary>
        </member>
        <member name="E:Hippo.WindowsForm4.sHippoChart.ChartContextMenuCreated">
            <summary>
            차트 컨텍스트메뉴가 생성될 때 발생합니다.
            </summary>
        </member>
        <member name="E:Hippo.WindowsForm4.sHippoChart.ChartClick">
            <summary>
            차트가 클릭될 때 발생합니다. 
            </summary>
        </member>
        <member name="E:Hippo.WindowsForm4.sHippoChart.ChartDoubleClick">
            <summary>
            차트를 더블 클릭될 때 발생합니다. 
            </summary>
        </member>
        <member name="E:Hippo.WindowsForm4.sHippoChart.ChartMouseClick">
            <summary>
            차트에 마우스를 클릭될 때 발생합니다. 
            </summary>
        </member>
        <member name="E:Hippo.WindowsForm4.sHippoChart.ChartMouseDoubleClick">
            <summary>
            차트에 마우스를 더블클릭될 때 발생합니다.
            </summary>
        </member>
        <member name="E:Hippo.WindowsForm4.sHippoChart.ChartMouseDown">
            <summary>
            차트에 마우스가 있을때 마우스 단추를 누를때 발생합니다.
            </summary>
        </member>
        <member name="E:Hippo.WindowsForm4.sHippoChart.ChartMouseUp">
            <summary>
            차트에 마우스가 있을때 마우스 단추를 놓으면 발생합니다.
            </summary>
        </member>
        <member name="E:Hippo.WindowsForm4.sHippoChart.ChartMouseMove">
            <summary>
            차트에 마우스가 있을때 마우스가 움직이면 발생합니다.
            </summary>
        </member>
        <member name="E:Hippo.WindowsForm4.sHippoChart.ChartMouseHover">
            <summary>
            차트에 마우스가 일정시간 동안 컨트롤의 내부에 있을 때 발생합니다.
            </summary>
        </member>
        <member name="E:Hippo.WindowsForm4.sHippoChart.ChartMouseEnter">
            <summary>
            차트에 마우스가 보이는 부분으로 가져갈 때 발생합니다.
            </summary>
        </member>
        <member name="E:Hippo.WindowsForm4.sHippoChart.ChartMouseLeave">
            <summary>
            차트에 마우스가 보이는 부분에서 벗어날 때 발생합니다.
            </summary>
        </member>
        <member name="E:Hippo.WindowsForm4.sHippoChart.ChartPrinting">
            <summary>
            차트 컨텍스트 메뉴의 도구/인쇄 기능을 클릭할때 발생합니다.
            </summary>
        </member>
        <member name="E:Hippo.WindowsForm4.sHippoChart.ChartMouseDrag">
            <summary>
            차트에 마우스를 드래그 할때 발생합니다. 
            </summary>
        </member>
        <member name="M:Hippo.WindowsForm4.sHippoChart.OnChartSizeChanged(System.EventArgs)">
            <summary>
            OnChartSizeChanged 이벤트
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Hippo.WindowsForm4.sHippoChart.OnChartClick(System.EventArgs)">
            <summary>
            OnChartClick 이벤트
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Hippo.WindowsForm4.sHippoChart.OnChartDoubleClick(System.EventArgs)">
            <summary>
            OnChartDoubleClick 이벤트
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Hippo.WindowsForm4.sHippoChart.OnChartMouseClick(System.Windows.Forms.MouseEventArgs)">
            <summary>
            OnChartMouseClick 이벤트
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Hippo.WindowsForm4.sHippoChart.OnChartMouseDoubleClick(System.Windows.Forms.MouseEventArgs)">
            <summary>
            OnChartMouseDoubleClick
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Hippo.WindowsForm4.sHippoChart.OnChartMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            OnChartMouseDown
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Hippo.WindowsForm4.sHippoChart.OnChartMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            OnChartMouseUp
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Hippo.WindowsForm4.sHippoChart.OnChartMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            OnChartMouseMove
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Hippo.WindowsForm4.sHippoChart.OnChartMouseHover(System.EventArgs)">
            <summary>
            ChartMouseHover
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Hippo.WindowsForm4.sHippoChart.OnChartMouseEnter(System.EventArgs)">
            <summary>
            OnChartMouseEnter
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Hippo.WindowsForm4.sHippoChart.OnChartMouseLeave(System.EventArgs)">
            <summary>
            OnChartMouseLeave
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Hippo.WindowsForm4.sHippoChart.OnDataBinging(System.EventArgs)">
            <summary>
            OnDataBinging 이벤트
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Hippo.WindowsForm4.sHippoChart.pictureBox1_SizeChanged(System.Object,System.EventArgs)">
            <summary>
            pictureBox1_SizeChanged 이벤트
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Hippo.WindowsForm4.sHippoChart.OnChartDesignTypeChanged(System.EventArgs)">
            <summary>
            OnChartDesignTypeChanged 이벤트
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Hippo.WindowsForm4.sHippoChart.OnChartContextMenuAdded(Hippo.WindowsForm4.ContextMenuEventArgs)">
            <summary>
            OnChartContextMenuAdded 이벤트
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Hippo.WindowsForm4.sHippoChart.pictureBox1_Click(System.Object,System.EventArgs)">
            <summary>
            pictureBox1_Click 이벤트 핸들러
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Hippo.WindowsForm4.sHippoChart.pictureBox1_DoubleClick(System.Object,System.EventArgs)">
            <summary>
            pictureBox1_DoubleClick 이벤트 핸들러
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Hippo.WindowsForm4.sHippoChart.pictureBox1_MouseClick(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            pictureBox1_MouseClick 이벤트 핸들러
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Hippo.WindowsForm4.sHippoChart.OnChartMouseDrag(System.EventArgs)">
            <summary>
            OnChartMouseLeave
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Hippo.WindowsForm4.sHippoChart.OnLoad(System.EventArgs)">
            <summary>
            OnLoad 이벤트
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Hippo.WindowsForm4.sHippoChart.ToString">
            <summary>
            HippoChart Beta v3.1 (since 2007.09)
            </summary>
            <returns></returns>
        </member>
        <member name="M:Hippo.WindowsForm4.sHippoChart.InitChart">
            <summary>
            차트 초기화 작업
            </summary>
        </member>
        <member name="M:Hippo.WindowsForm4.sHippoChart.#ctor">
            <summary>
            sHippoChart
            </summary>
        </member>
        <member name="M:Hippo.WindowsForm4.sHippoChart.DrawSampleChart">
            <summary>
            샘플 차트를 그립니다.
            </summary>
        </member>
        <member name="M:Hippo.WindowsForm4.sHippoChart.DrawDefault">
            <summary>
            차트의 기본 모양을 그립니다.(호출 대상이 아닙니다.)
            </summary>
        </member>
        <member name="M:Hippo.WindowsForm4.sHippoChart.DrawChart(System.Data.DataTable,System.String,System.String[])">
            <summary>
            히포 차트를 생성합니다.
            </summary>
            <param name="ChartSource">데이터 소스</param>
            <param name="nameColumn">이름 컬럼(x 축)</param>
            <param name="valueColumns">값 컬럼(y 축)</param>
        </member>
        <member name="M:Hippo.WindowsForm4.sHippoChart.DrawChart(Hippo.SeriesListDictionary)">
            <summary>
            히포 차트를 생성합니다.
            </summary>
            <param name="SeriesListDictionary">SeriesListDictionary</param>
        </member>
        <member name="M:Hippo.WindowsForm4.sHippoChart.DrawChart(Hippo.SeriesList)">
            <summary>
            히포 차트를 생성합니다.
            </summary>
            <param name="SeriesList">SeriesList</param>
        </member>
        <member name="M:Hippo.WindowsForm4.sHippoChart.DrawChart">
            <summary>
            히포 차트를 생성합니다.
            </summary>
        </member>
        <member name="M:Hippo.WindowsForm4.sHippoChart.Zoomin(System.Single)">
            <summary>
            줌인을 합니다.
            </summary>
            <param name="size">몇배</param>
        </member>
        <member name="M:Hippo.WindowsForm4.sHippoChart.Zoomin(System.Drawing.RectangleF)">
            <summary>
            줌인을 합니다.
            </summary>
            <param name="zoomRactangle">줌 영역</param>
        </member>
        <member name="M:Hippo.WindowsForm4.sHippoChart.Zoomout">
            <summary>
            줌아웃을 합니다. (원래 크기로)
            </summary>
        </member>
        <member name="M:Hippo.WindowsForm4.sHippoChart.AutoScrolling">
            <summary>
            스크롤 넓이를 재조정합니다.
            </summary>
        </member>
        <member name="M:Hippo.WindowsForm4.sHippoChart.ControlDevelperLIC">
            <summary>
            개발자 라이선스 체크
            </summary>
            <returns></returns>
        </member>
        <member name="M:Hippo.WindowsForm4.sHippoChart.CheckRelease(System.Reflection.Assembly)">
            <summary>
            배포 라이선스 체크
            </summary>
            <param name="guid"></param>
            <returns></returns>
        </member>
        <member name="M:Hippo.WindowsForm4.sHippoChart.CheckRegistry">
            <summary>
            레지스트리 체크
            </summary>
            <returns></returns>
        </member>
        <member name="P:Hippo.WindowsForm4.sHippoChart.ScrollXaxisWidth">
            <summary>
            
            </summary>
        </member>
        <member name="P:Hippo.WindowsForm4.sHippoChart.ZoomStatus">
            <summary>
            현재 줌(Zoom) 상태를 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.WindowsForm4.sHippoChart.Canvas">
            <summary>
            범례와 타이틀, 로그 영역을 뺀 실제 그래프가 그려지는 영역 렉텡글을 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.WindowsForm4.sHippoChart.DragRectangle">
            <summary>
            차트 드레그시에 사각 눈금 영역의 Rectangle을 반환합니다. 
            </summary>
        </member>
        <member name="P:Hippo.WindowsForm4.sHippoChart.IsDrag">
            <summary>
            마우스 드레그 시 사각 눈금 표시를 사용할 것인지 여부를 설정하고 가져옵니다. 
            </summary> 
        </member>
        <member name="P:Hippo.WindowsForm4.sHippoChart.ProcessorType">
            <summary>
            CPU 플랫폼 타입을 사용자가 지정합니다. 
            </summary> 
        </member>
        <member name="P:Hippo.WindowsForm4.sHippoChart.IsEmptyanalysis">
            <summary>
            공간 분석 프로세스를 수행할 것인지 여부를 설정하고 가져옵니다. 기본값은 true
            </summary>
        </member>
        <member name="P:Hippo.WindowsForm4.sHippoChart.IsScroll">
            <summary>
            차트 스크롤을 사용할 것인지 여부를 설정하고 가져옵니다. 
            </summary>
        </member>
        <member name="P:Hippo.WindowsForm4.sHippoChart.SeriesAreaRate">
            <summary>
            시리즈의 공간을 배분하는 비율을 설정하고 가져옵니다. 기본값은 1 : 1 (예, slist.SeriesAreaRate = "2 : 8"; )
            </summary> 
        </member>
        <member name="P:Hippo.WindowsForm4.sHippoChart.RealTimeList">
            <summary>
            실시간 차트 셋을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.WindowsForm4.sHippoChart.ChartID">
            <summary>
            현재 그리고 있는 차트의 아이디를 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.WindowsForm4.sHippoChart.IsUseContextMenu">
            <summary>
            콘텍스트 메뉴 사용 여부를 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.WindowsForm4.sHippoChart.Message">
            <summary>
            히포차트에서 발생하는 각종 메세지를 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.WindowsForm4.sHippoChart.ChartFileName">
            <summary>
            차트 이미지 파일 이름을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.WindowsForm4.sHippoChart.ChartImage">
            <summary>
            차트 이미지를 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.WindowsForm4.sHippoChart.ChartGraphic">
            <summary>
            차트 그래픽를 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.WindowsForm4.sHippoChart.ChartRectangle">
            <summary>
            히포차트 전체 사각형를 설정하고 가져옵니다.
            </summary> 
        </member>
        <member name="P:Hippo.WindowsForm4.sHippoChart.Layout">
            <summary>
            히포차트 디자인을 위한 기반 레이아웃 클래스를 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.WindowsForm4.sHippoChart.DesignType">
            <summary>
            차트 디자인 타입를 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.WindowsForm4.sHippoChart.Width2">
            <summary>
            차트 가로길이를 설정하고 가져옵니다.
            </summary> 
        </member>
        <member name="P:Hippo.WindowsForm4.sHippoChart.Height2">
            <summary>
            차트 세로 길이를 설정하고 가져옵니다.
            </summary>  
        </member>
        <member name="P:Hippo.WindowsForm4.sHippoChart.Left">
            <summary>
            차트 X 위치를 설정하고 가져옵니다.
            </summary> 
        </member>
        <member name="P:Hippo.WindowsForm4.sHippoChart.Top">
            <summary>
            차트 Y 위치를 설정하고 가져옵니다.
            </summary>  
        </member>
        <member name="P:Hippo.WindowsForm4.sHippoChart.Designer">
            <summary>
            차트 디자이너를 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.WindowsForm4.sHippoChart.Titles">
            <summary>
            차트 타이틀를 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.WindowsForm4.sHippoChart.LegendBox">
            <summary>
            범례를 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.WindowsForm4.sHippoChart.Logo">
            <summary>
            로고를 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.WindowsForm4.sHippoChart.SeriesListDictionary">
            <summary>
            시리즈 리스트 컬렉션를 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.WindowsForm4.sHippoChart.Direction">
            <summary>
            그래프 영역의 방향를 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.WindowsForm4.sHippoChart.PaletteType">
            <summary>
            팔레트 종류를 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="F:Hippo.WindowsForm4.sHippoChart.components">
            <summary> 
            필수 디자이너 변수입니다.
            </summary>
        </member>
        <member name="M:Hippo.WindowsForm4.sHippoChart.Dispose(System.Boolean)">
            <summary> 
            사용 중인 모든 리소스를 정리합니다.
            </summary>
            <param name="disposing">관리되는 리소스를 삭제해야 하면 true이고, 그렇지 않으면 false입니다.</param>
        </member>
        <member name="M:Hippo.WindowsForm4.sHippoChart.InitializeComponent">
            <summary> 
            디자이너 지원에 필요한 메서드입니다. 
            이 메서드의 내용을 코드 편집기로 수정하지 마십시오.
            </summary>
        </member>
        <member name="T:Hippo.AnalysisItem">
            <summary>
            통계 분석 아이템 클래스
            </summary>  
            <remarks>
            좌표 축의 반대편에 평균, 총합, 최대값, 최소값, 표준편차, 중앙값, 분산 등을 표시해줍니다.
            </remarks>
            <example>
            <code> 
               SeriesList slist = new SeriesList();
               slist.ChartType = ChartType.Column;  
            
               slist.AxisFactor.YAxis.AnalysisItems[AnalysisCategory.Average].Visible = true;  
            
               Series sr = new Series();   
            
               SeriesItem item1 = new SeriesItem(47);
               item1.Name = "item1";  
               SeriesItem item2 = new SeriesItem(-167);
               item2.Name = "item2";  
               SeriesItem item3 = new SeriesItem(232);
               item3.Name = "item3";  
            
               sr.items.Add(item1);
               sr.items.Add(item2);
               sr.items.Add(item3);  
            
               slist.SeriesCollection.Add(sr); 
               this.hHippoChart1.DrawChart(slist);  
            </code>
            </example>
        </member>
        <member name="M:Hippo.AnalysisItem.#ctor(Hippo.AnalysisCategory)">
            <summary>
            AnalysisItem 객체의 인스턴스를 생성합니다.
            </summary>
            <param name="category"></param>
        </member>
        <member name="P:Hippo.AnalysisItem.Name">
            <summary>
            통계아이템의 이름을 설정하고 가져옵니다. (범례에 표시됩니다)
            </summary>
        </member>
        <member name="P:Hippo.AnalysisItem.AnalysisCategory">
            <summary>
            통계분석 아이템 카테고리를 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.AnalysisItem.Label">
            <summary>
            통계분석아이템 라벨를 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.AnalysisItem.Line">
            <summary>
            통계분석아이템 라인를 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.AnalysisItem.Value">
            <summary>
            통계분석 값를 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.AnalysisItem.DateTimeValue">
            <summary>
            통계 값이 날짜형일 경우의 값을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.AnalysisItem.Visible">
            <summary>
            통계 분석을 표시할 것인가 여부를 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.AnalysisItem.Decimalpoint">
            <summary>
            통계 수치의 표시할 소수점을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.AnalysisItem.LegendVisible">
            <summary>
            범례에 보여줄 것인지 여부를 가져오고 설정합니다.
            </summary>
        </member>
        <member name="T:Hippo.AnalysisItemCollection">
            <summary>
            통계 분석 아이템(<c>AnalysisItem</c>)의 컬렉션을 관리합니다.
            </summary>
        </member>
        <member name="M:Hippo.AnalysisItemCollection.#ctor">
            <summary>
            AnalysisItemCollection 인스턴스를 생성합니다.
            </summary>
        </member>
        <member name="T:Hippo.Axis">
            <summary>
            축을 나타내는 클래스
            </summary>
            <remarks>
            좌표 차트의 축을 나타내며 비좌표 차트(게이지, 방사형)의 축을 나타내기도합니다.
            </remarks>
        </member>
        <member name="M:Hippo.Axis.#ctor(Hippo.AxisType)">
            <summary>
            Axis 인스턴스를 생성합니다.
            </summary>
            <param name="axisType"></param>
        </member>
        <member name="M:Hippo.Axis.SetAxisStep(System.Double,System.Double,System.Double)">
            <summary>
            좌표 축의 단계 수치를 사용자가 임의로 설정할 수 있습니다.
            </summary>
            <param name="minUnitValue"></param>
            <param name="maxUnitValuem"></param>
            <param name="interval"></param>
        </member>
        <member name="M:Hippo.Axis.SetAxisStep(System.DateTime,System.DateTime,System.Double)">
            <summary>
            좌표 축의 단계 수치를 사용자가 임의로 설정할 수 있습니다.
            </summary>
            <param name="minUnitValue"></param>
            <param name="maxUnitValuem"></param>
            <param name="interval"></param>
        </member>
        <member name="P:Hippo.Axis.ColorMaps">
            <summary>
            컬러맵 차트의 속성들을 설정하고 가져옵니다. 
            </summary>
        </member>
        <member name="P:Hippo.Axis.IsShorterFigures">
            <summary>
            축 스케일의 숫자 크기가 너무 클 경우 단축된 형태 200k, 1.5M 과 같은 모습으로 표현할 것인가 여부를 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.Axis.BackColor">
            <summary>
            축 영역의 배경색을 설정하고 가져옵니다. 4.3 버전에서 추가되었습니다. 
            </summary>
        </member>
        <member name="P:Hippo.Axis.DateTimeLabelType">
            <summary>
            날짜형 축의 라벨 형태를 설정하고 가져옵니다. 4.3 버전에서 추가되었습니다.
            </summary>
        </member>
        <member name="P:Hippo.Axis.IsInverseAxis">
            <summary>
            축을 역전 시켜서 표시할 것인지 여부를 설정하고 가져옵니다. 4.3 버전에서 추가되었습니다. 
            </summary>
        </member>
        <member name="P:Hippo.Axis.IsZeroStartScale">
            <summary>
            축 스케일을 무조건 0부터 시작할것인가 여부를 설정하고 가져옵니다. 일부 차트는 강제 적용됩니다(예, AreaLine Chart)
            </summary>
        </member>
        <member name="P:Hippo.Axis.StackedSumLabel">
            <summary>
            스택형 차트의 아이템 합계를 표시하는 텍스트 라벨을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.Axis.IsAxisVerticalRotate">
            <summary>
            축 타이틀 텍스트를 회전시킬것인가 여부를 설정하고 가져옵니다. 
            </summary>
        </member>
        <member name="P:Hippo.Axis.LogBase">
            <summary>
            로그 스케일의 축으로 설정할 경우 그 베이스 값을 설정하고 가져옵니다.(기본값 10)
            </summary>
        </member>
        <member name="P:Hippo.Axis.Logarithmic">
            <summary>
            로그 스케일의 축으로 설정할 것인지 여부를 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.Axis.AxisMagin">
            <summary>
            축이 그려지는 공간의 넓이를 설정하고 가져옵니다. (미설정시에는 자동으로 처리됨)
            </summary>
        </member>
        <member name="P:Hippo.Axis.CultureInfo">
            <summary>
            문화권 정보를 설정하고 가져옵니다.
            </summary> 
        </member>
        <member name="P:Hippo.Axis.Zero">
            <summary>
            축의 제로 포인트를 설정하고 가져온다.
            </summary>
        </member>
        <member name="P:Hippo.Axis.X">
            <summary>
            x축 양의 끝 포인트을 설정하고 가져온다.
            </summary>
        </member>
        <member name="P:Hippo.Axis.Y">
            <summary>
            y축 양의 끝 포인트을 설정하고 가져온다.
            </summary>
        </member>
        <member name="P:Hippo.Axis.XMinus">
            <summary>
            x축 음의 끝 포인트을 설정하고 가져온다.
            </summary>
        </member>
        <member name="P:Hippo.Axis.YMinus">
            <summary>
            y축 음의 끝 포인트을 설정하고 가져온다.
            </summary>
        </member>
        <member name="P:Hippo.Axis.Width">
            <summary>
            축이 그려지는 공간의 넓이(읽기전용)를 설정하고 가져온다.
            </summary>
        </member>
        <member name="P:Hippo.Axis.IsShowTick">
            <summary>
            눈금을 보여줄것인지 여부를 설정하고 가져온다.
            </summary>
        </member>
        <member name="P:Hippo.Axis.AutoScaleBreak">
            <summary>
            스케일 브레이크를 자동으로 설정할 것인지 여부를 설정하고 가져온다.
            </summary>
        </member>
        <member name="P:Hippo.Axis.IsShowUnitText">
            <summary>
            단위 글자를 쓸것인가 여부를 설정하고 가져온다.
            </summary>
        </member>
        <member name="P:Hippo.Axis.Visible">
            <summary>
            축을 보일것인가 여부를 설정하고 가져온다.
            </summary>
        </member>
        <member name="P:Hippo.Axis.AxisUnitText">
            <summary>
            단위를 나타내는 문자열(예: 원, km, $)을 설정하고 가져온다.
            </summary>
        </member>
        <member name="P:Hippo.Axis.Font">
            <summary>
            축 라벨들의 공통 폰트를 설정하고 가져온다.
            </summary>
        </member>
        <member name="P:Hippo.Axis.AnalysisItems">
            <summary>
            통계분석 아이템을 설정하고 가져온다.
            </summary> 
        </member>
        <member name="P:Hippo.Axis.AxisScaleRanges">
            <summary>
            축의 스케일 범위를 조절할 수 있는 ScaleRange 컬렉션을 설정하고 가져온다.
            </summary>
        </member>
        <member name="P:Hippo.Axis.itemCount">
            <summary>
            x 아이템 개수을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.Axis.Markers">
            <summary>
            마커을 설정하고 가져온다.
            </summary> 
        </member>
        <member name="P:Hippo.Axis.Areas">
            <summary>
            영역 마커을 설정하고 가져온다.
            </summary> 
        </member>
        <member name="P:Hippo.Axis.MaxUnitDateTimeValue">
            <summary>
            단위 최대 값(날짜형)을 설정하고 가져온다.
            </summary>
        </member>
        <member name="P:Hippo.Axis.MinUnitDateTimeValue">
            <summary>
            단위 최소값(날짜형)을 설정하고 가져온다.
            </summary>
        </member>
        <member name="P:Hippo.Axis.Decimalpoint">
            <summary>
            Y축 라벨의 수치를 소수점 몇째자리 까지 보여줄 것인가 여부를 설정하고 가져옵니다.
            ex) 2 라고 설정할 경우 소수점 둘째자리까지 표현합니다. 
            </summary>
        </member>
        <member name="P:Hippo.Axis.UnitPixel">
            <summary>
            축 눈금간의 한 단계 길이을 설정하고 가져옵니다.
            </summary>
            <remarks>
                본 속성은 차트내에서의 상대적 크기를 가늠하는 기준이 되는 값으로 다음과 같은 공식을 활용할 수 있습니다. 
                ex) [차트내에서의 상대적 값] = 픽셀값 * (Interval / UnitPixel)  
                한 마디로 표현하자면 현실 세계의 실제 값이 차트내에서 얼마에 표시가 되느냐하는 식인데, 천만이라는 숫자가 차트내로 들어갔을때 몇 픽셀로 표시가 되느냐를 결정하는 공식이라고 할 수 있습니다.
            </remarks>
            <example>
                <code>
                    double zeroY = this.hHippoChart1.SeriesListDictionary[0].AxisFactor.Zero.Y; 
                    
                    float cY = (float)(zeroY - (e.Y));  
                    
                    this.hHippoChart1.SeriesListDictionary[0].AxisFactor.YAxis.ExtraTicks[0].Value = 
                        cY* this.hHippoChart1.SeriesListDictionary[0].AxisFactor.YAxis.Interval / this.hHippoChart1.SeriesListDictionary[0].AxisFactor.YAxis.UnitPixel;
                </code>
            </example>
        </member>
        <member name="P:Hippo.Axis.IsAutoSetting">
            <summary>
            차트 y축을 자동 설정할 것인지 여부를 설정하고 가져옵니다. 최근 코드 경향은 이 속성을 이용하기 보다는 SetAxisStep() 메소드를 사용합니다. 
            </summary>
        </member>
        <member name="P:Hippo.Axis.MaxUnitValue">
            <summary>
            축스케일에서 단위 최대 값을 설정하고 가져온다.
            </summary>
        </member>
        <member name="P:Hippo.Axis.MinUnitValue">
            <summary>
            축스케일에서 단위 최소값을 설정하고 가져온다.
            </summary>
        </member>
        <member name="P:Hippo.Axis.MaxTickCount">
            <summary>
            눈금의 최대 간격 수를 설정하고 가져옵니다. (기본값은 5)
            </summary>
        </member>
        <member name="P:Hippo.Axis.DateTimeFormat">
            <summary>
            축의 라벨에 표시되는 날짜형 데이터의 포맷을 설정하고 가져옵니다. 
            (예, 기본값은 "m" 이며 간트 차트에 사용됩니다.)
            </summary>
        </member>
        <member name="P:Hippo.Axis.TitleLabel">
            <summary>
            축의 타이틀 라벨를 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.Axis.LabelItems">
            <summary>
            축 단계별 수치 라벨를 설정하고 가져옵니다. (호출 대상이 아닙니다)
            </summary>
        </member>
        <member name="P:Hippo.Axis.IsVisibleFigures">
            <summary>
            축의 수치를 표시할것인가를 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.Axis.LabelFormat">
            <summary>
            축 수치 라벨 포맷를 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.Axis.TitleFormat">
            <summary>
            축 타이틀 포맷를 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.Axis.Direction">
            <summary>
            축의 위치(방향)를 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.Axis.AxisType">
            <summary>
            축의 종류를 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.Axis.DataType">
            <summary>
            축 데이터 타입을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.Axis.DateType">
            <summary>
            축이 날짜형일 경우 Date Type을 설정하고 가져옵니다. (기본값 Day)
            </summary>
        </member>
        <member name="P:Hippo.Axis.Line">
            <summary>
            축 라인을 설정하고 가져온다.
            </summary>
        </member>
        <member name="P:Hippo.Axis.ForeColor">
            <summary>
            축의 텍스트 색상을 설정하고 가져온다.
            </summary>
        </member>
        <member name="P:Hippo.Axis.FigureFormat">
            <summary>
            숫자 포맷을 설정하고 가져온다.
            </summary>
        </member>
        <member name="P:Hippo.Axis.Ticks">
            <summary>
            축의 눈금(Tick)을 설정하고 가져온다.
            </summary> 
        </member>
        <member name="P:Hippo.Axis.ExtraTicks">
            <summary>
            축의 추가 눈금을 설정하고 가져온다.
            </summary>
        </member>
        <member name="P:Hippo.Axis.Interval">
            <summary>
            축 눈금 간격을 설정하고 가져온다.
            </summary>
            <remarks>
                본 속성을 활용하는 공식
                ex) [차트내에서의 상대적 값] = 픽셀값 * (Interval / UnitPixel) 
            </remarks>
        </member>
        <member name="P:Hippo.Axis.SmallInterval">
            <summary>
            축 눈금 사이 작은 눈금 간격을 설정하고 가져온다.
            </summary>
        </member>
        <member name="P:Hippo.Axis.Points">
            <summary>
            축의 각 눈금 포인트들을 설정하고 가져온다.
            </summary>
        </member>
        <member name="T:Hippo.AxisList">
            <summary>
            축(<c>Axis</c>) 클래스의 컬렉션을 관리합니다.
            </summary>
            <remarks>
                히포차트에서 지원하는 추가축(멀티축) 들을 관리하는 클래스입니다. 히포차트에는 기본적으로 내장된 Y축과 X축이 있으며 Y축에 n개의 축을 추가하여 사용할 수 있습니다. 
            </remarks>
        </member>
        <member name="T:Hippo.AxisTickPointList">
            <summary>
            축의 각 눈금 포인트를 관리합니다.
            </summary>
        </member>
        <member name="T:Hippo.AxisArea">
             <summary>
             영역 마커 클래스
             </summary>
             <remarks>
             축에 데이터의 간격(영역)을 지정하여 표시할 수 있습니다. 시작 값과 마지막 값을 이용해서 배경색을 줄 수 있고 해당 코멘트를 달수 있습니다. x, y축 모두 지원합니다. 
             (예, 위험 구간)  
             </remarks>
             <example>
             <code>
                    SeriesList slist = new SeriesList();
                    slist.ChartType = ChartType.Column;
            
                    AxisArea area = new AxisArea("Dangerous", 30, 100); 
                    area.TextFormat.Alignment = StringAlignment.Near; 
                    area.BackColor = Color.FromArgb(250, Color.Red);  
                    slist.AxisFactor.Areas.Add(area);  
            
                    Series sr = new Series();
                    sr.SeriesColor = Color.YellowGreen;
            
                    SeriesItem item1 = new SeriesItem(23);
                    item1.Name = "item1"; 
                    SeriesItem item2 = new SeriesItem(77);
                    item2.Name = "item2"; 
                    SeriesItem item3 = new SeriesItem(120);
                    item3.Name = "item3"; 
                    sr.items.Add(item1);
                    sr.items.Add(item2);
                    sr.items.Add(item3);
            
                    slist.SeriesCollection.Add(sr);
                    this.hHippoChart1.DrawChart(slist);
             </code>
             </example>
        </member>
        <member name="M:Hippo.AxisArea.#ctor">
            <summary>
            AxisArea 인스턴스를 생성합니다.(기본 생성자)
            </summary>
        </member>
        <member name="M:Hippo.AxisArea.#ctor(System.String,System.Single,System.Single)">
            <summary>
            AxisArea 인스턴스를 생성합니다.
            </summary>
            <param name="LabelText">텍스트</param>
            <param name="Startvalue">시작값</param>
            <param name="Endvalue">종료값</param>
        </member>
        <member name="M:Hippo.AxisArea.#ctor(System.String,System.DateTime,System.DateTime)">
            <summary>
            AxisArea 인스턴스를 생성합니다.
            </summary>
            <param name="LabelText">텍스트</param>
            <param name="StartDatetimevalue">시작값</param>
            <param name="EndDatetimevalue">종료값</param>
        </member>
        <member name="P:Hippo.AxisArea.Name">
            <summary>
            영역 마커의 이름을 설정하고 가져옵니다. (범례에 표시됩니다)
            </summary>
        </member>
        <member name="P:Hippo.AxisArea.StartValue">
            <summary>
            영역 마커 표시 시작값를 가져오고 설정합니다.
            </summary>
        </member>
        <member name="P:Hippo.AxisArea.EndValue">
            <summary>
            영역 마커 표시 종료값를 가져오고 설정합니다.
            </summary>
        </member>
        <member name="P:Hippo.AxisArea.StartDateTimeValue">
            <summary>
            영역 마커 표시 시작값(날짜형식)을 가져오고 설정합니다.
            </summary>
        </member>
        <member name="P:Hippo.AxisArea.EndDateTimeValue">
            <summary>
            영역 마커 표시 종료값(날짜형식)을 가져오고 설정합니다.
            </summary>
        </member>
        <member name="P:Hippo.AxisArea.Label">
            <summary>
            영역 마커 라벨를 가져오고 설정합니다.
            </summary>
        </member>
        <member name="P:Hippo.AxisArea.Line">
            <summary>
            영역 마커 라인를 가져오고 설정합니다.
            </summary>
        </member>
        <member name="P:Hippo.AxisArea.TextFormat">
            <summary>
            영역 마커 문자열포맷를 가져오고 설정합니다.
            </summary>
        </member>
        <member name="P:Hippo.AxisArea.BringToFront">
            <summary>
            영역 마커를 맨 앞으로 보낼 것인가 여부를 가져오고 설정합니다.
            </summary>
        </member>
        <member name="P:Hippo.AxisArea.BackColor">
            <summary>
            배경색을 가져오고 설정합니다.
            </summary>
        </member>
        <member name="P:Hippo.AxisArea.LegendVisible">
            <summary>
            범례에 보여줄 것인지 여부를 가져오고 설정합니다.
            </summary>
        </member>
        <member name="P:Hippo.AxisArea.IsGradation">
            <summary>
            배경에 그라데이션 효과를 줄 것인지 여부를 가져오고 설장합니다.
            </summary>
        </member>
        <member name="T:Hippo.AxisAreaCollection">
            <summary>
            영역 마커 컬렉션 클래스
            </summary>
        </member>
        <member name="T:Hippo.AxisCalculator">
            <summary>
            좌표에 대한 각종 계산을 수행하는 클래스
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:Hippo.AxisCalculator.AnalysisDataSource(Hippo.SeriesList,Hippo.LegendLocation)">
            <summary>
            데이터 소스 분석  - 최대, 최소, 평균, 중앙값, 분산, 표준편차, YAxis.itemCount를 구한다.
            </summary>
            <param name="serieslist"></param>
            <param name="location"></param>
            <returns></returns>
        </member>
        <member name="M:Hippo.AxisCalculator.AnalysisDateTimeDataSource(Hippo.SeriesList,Hippo.LegendLocation)">
            <summary>
            데이터 소스 분석  - 최대, 최소, 평균, 중앙값, 분산, 표준편차, YAxis.itemCount를 구한다.
            </summary>
            <param name="serieslist"></param>
            <param name="location"></param>
            <returns></returns>
        </member>
        <member name="M:Hippo.AxisCalculator.AnalysisBoxPlotDataSource(Hippo.SeriesList,Hippo.LegendLocation)">
            <summary>
            데이터 소스 분석  - 최대, 최소, 평균, 중앙값, 분산, 표준편차, YAxis.itemCount를 구한다.
            </summary>
            <param name="serieslist"></param>
            <param name="location"></param>
            <returns></returns>
        </member>
        <member name="M:Hippo.AxisCalculator.GetBoxplotFeatures(Hippo.BoxPlots)">
            <summary>
            GetBoxplotFeatures
            </summary>
            <param name="boxPlots"></param>
            <returns></returns>
        </member>
        <member name="M:Hippo.AxisCalculator.GetVarianceAndStandardDeviation(Hippo.SeriesList,Hippo.AxisFactors)">
            <summary>
            GetVarianceAndStandardDeviation - 분산, 표준편차
            </summary>
            <param name="serieslist"></param>
            <param name="factors"></param>
            <returns></returns>
        </member>
        <member name="M:Hippo.AxisCalculator.GetMedian(Hippo.SeriesList,Hippo.AxisFactors)">
            <summary>
            GetMedian - 중앙값
            </summary>
            <param name="serieslist"></param>
            <param name="factors"></param>
            <returns></returns>
        </member>
        <member name="M:Hippo.AxisCalculator.GetUnitValue(Hippo.SeriesList,Hippo.Axis,Hippo.LegendLocation,System.Boolean)">
            <summary>
            GetUnitValue - 눈금의 기준값을 구한다. (MaxUnitValue, MinUnitValue, YInterVal)
            </summary>
            <param name="seriesList"></param>
            <param name="axis"></param>
            <param name="legendLocation"></param>
            <param name="IsAddedAxis"></param>
        </member>
        <member name="M:Hippo.AxisCalculator.GetUnitDateTimeValue(Hippo.SeriesList,Hippo.Axis,Hippo.LegendLocation,System.Boolean)">
            <summary>
            GetUnitDateTimeValue
            </summary>
            <param name="seriesList"></param>
            <param name="axis"></param>
            <param name="legendLocation"></param>
            <param name="IsAddedAxis"></param>
        </member>
        <member name="M:Hippo.AxisCalculator.GetTotalxitemCount(Hippo.SeriesList,System.Int32)">
            <summary>
            전체 데이터 개수를 구합니다.
            </summary>
            <param name="serieslist"></param>
            <returns></returns>
        </member>
        <member name="M:Hippo.AxisCalculator.GetMaxXitemCount(Hippo.SeriesList)">
            <summary>
            시리즈중 가장 많은 아이템 개수를 구합니다.
            </summary>
            <param name="serieslist"></param>
            <returns></returns>
        </member>
        <member name="M:Hippo.AxisCalculator.GetMaxxitemSeriesIndex(Hippo.SeriesList)">
            <summary>
            GetMaxxitemSeriesIndex -  시리즈 중 가장 많은 항목을 가지고 있는 것의 인덱스넘버를 리턴한다.
            </summary>
            <param name="serieslist"></param>
            <returns></returns>
        </member>
        <member name="M:Hippo.AxisCalculator.SetAxises(Hippo.SeriesList)">
            <summary>
            X축 라벨리스트를 구합니다.
            </summary>
            <param name="serieslist"></param>
        </member>
        <member name="M:Hippo.AxisCalculator.SetAxisesForBoxplot(Hippo.SeriesList)">
            <summary>
            SetAxisesForBoxplot
            </summary>
            <param name="serieslist">serieslist</param>
        </member>
        <member name="M:Hippo.AxisCalculator.AddYAxisLabelList(Hippo.Axis,Hippo.SeriesList)">
            <summary>
            y 타입의 축 라벨리스트를 생성합니다.
            </summary>
            <param name="axis2"></param>
            <param name="serieslist"></param>
            <returns></returns>
        </member>
        <member name="T:Hippo.AxisDrawer">
            <summary>
            좌표를 그리는 클래스입니다.
            </summary>
            <remarks>호출 대상이 아닙니다.</remarks>
        </member>
        <member name="M:Hippo.AxisDrawer.#ctor(System.Drawing.Graphics)">
            <summary>
            AxisDrawer 인스턴스를 생성합니다.
            </summary>
            <param name="graphic"></param>
        </member>
        <member name="M:Hippo.AxisDrawer.DrawStartChart(Hippo.SeriesList,Hippo.LegendLocation,Hippo.PaletteType)">
            <summary>
            [Template] DrawCoordinatePlate - 좌표 평면을 그립니다.
            </summary>
            <param name="seriesList"></param>
            <param name="location"></param>
            <param name="paletteType"></param>
            <returns></returns>
        </member>
        <member name="M:Hippo.AxisDrawer.DrawAxisAndPlate(Hippo.StackType,System.Int32,Hippo.ChartType,Hippo.AxisDataType,System.Int32)">
            <summary>
            [Core Logic] 축과 평면을 그립니다.
            </summary>
            <param name="stackedType"></param>
            <param name="SeariesTotalCount"></param>
            <param name="chartType"></param>
            <param name="datatype"></param>
            <param name="StackedEmptyRate"></param>
        </member>
        <member name="M:Hippo.AxisDrawer.SetAxisOrientation">
            <summary>
            축 방향 설정
            </summary>
        </member>
        <member name="M:Hippo.AxisDrawer.CalXInterval">
            <summary>
            x축 인터벌을 계산합니다.
            </summary>
        </member>
        <member name="M:Hippo.AxisDrawer.DrawXAxis">
            <summary>
            DrawXAxis2
            </summary>
        </member>
        <member name="M:Hippo.AxisDrawer.DrawYAxis(Hippo.AxisDataType,Hippo.Axis,System.Drawing.RectangleF,System.Boolean)">
            <summary>
            DrawYAxis2
            </summary>
        </member>
        <member name="M:Hippo.AxisDrawer.DrawInnerLegendBox">
            <summary>
            이너 레전드를 그립니다.
            </summary>
        </member>
        <member name="M:Hippo.AxisDrawer.DrawAddedAxis">
            <summary>
            추가된 축을 그립니다.
            </summary>
        </member>
        <member name="M:Hippo.AxisDrawer.DrawDescription">
            <summary>
            디스크립션 글자를 그립니다.
            </summary>
        </member>
        <member name="M:Hippo.AxisDrawer.DrawEndChart(Hippo.SeriesList)">
            <summary>
            DrawEndChart
            </summary>
            <param name="seriesList"></param> 
            <returns></returns>
        </member>
        <member name="M:Hippo.AxisDrawer.SetaxisEmptys(Hippo.Axis,System.Single)">
            <summary>
            좌표평편을 그리기 위한 상3, 하2, 좌0, 우1 축 그려질 공간 배열을 세팅합니다.
            </summary>
            <param name="axis"></param>
            <param name="values"></param>
        </member>
        <member name="M:Hippo.AxisDrawer.CalcYEmptyWidth(Hippo.Axis,System.Boolean)">
            <summary>
            Y축 숫자쓰여지는 공간의 넓이를 구합니다.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Hippo.AxisDrawer.CalxXEmptyHeight">
            <summary>
            X축 숫자(글자)쓰여지는 공간의 높이를 구합니다.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Hippo.AxisDrawer.CalcYEmptyWidth2">
            <summary>
            바차트, 간트 차트 일 경우 Y축의 넓이를 구한다
            </summary>
            <returns></returns>
        </member>
        <member name="M:Hippo.AxisDrawer.CalxXEmptyHeight2(Hippo.Axis,System.Boolean)">
            <summary>
            바차트, 간트 차트 일 경우 x축의 높이를 구한다.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Hippo.AxisDrawer.CalcMain5Points(System.Drawing.RectangleF)">
            <summary>
            CalcMain5Points - 5개 핵심 포인트를 구합니다. AddedWidthFor3D를 구한 다음 호출해야한다.
            </summary>
            <param name="CenteralRectangle">좌표 평면</param>
        </member>
        <member name="M:Hippo.AxisDrawer.CalcMain5Points(System.Drawing.RectangleF,Hippo.Axis)">
            <summary>
            해당 축의 5가지 포인트를 설정합니다.
            </summary>
            <param name="CenteralRectangle"></param>
            <param name="axis"></param>
        </member>
        <member name="M:Hippo.AxisDrawer.DrawMarker(Hippo.Axis,System.Boolean,System.String,Hippo.AxisDataType)">
            <summary>
            마커를 그립니다.
            </summary>
            <param name="axis"></param>
            <param name="adBringToFront"></param>
            <param name="flag"></param>
            <param name="datatype"></param>
        </member>
        <member name="M:Hippo.AxisDrawer.DrawMarkerXAxis(Hippo.AxisMarkerCollection,System.Boolean,System.String,Hippo.AxisDataType)">
            <summary>
            x축 마커를 그립니다.
            </summary>
            <param name="markers"></param>
            <param name="adBringToFront"></param>
            <param name="flag"></param>
            <param name="datatype"></param>
        </member>
        <member name="M:Hippo.AxisDrawer.DrawArea(Hippo.Axis,System.Boolean,Hippo.AxisDataType)">
            <summary>
            영역 마커를 그립니다.
            </summary>
            <param name="axis"></param>
            <param name="adBringToFront"></param>
            <param name="datatype"></param>
        </member>
        <member name="M:Hippo.AxisDrawer.DrawAreaXAxis(Hippo.AxisAreaCollection,System.Boolean,Hippo.AxisDataType)">
            <summary>
            DrawAreaXAxis
            </summary>
            <param name="areas"></param>
            <param name="adBringToFront"></param>
            <param name="datatype"></param>
        </member>
        <member name="M:Hippo.AxisDrawer.DrawAnalisysItems(Hippo.Axis,Hippo.ChartType)">
            <summary>
            통계분석아이템을 그립니다.
            </summary>
            <param name="axis"></param>
            <param name="type"></param>
        </member>
        <member name="M:Hippo.AxisDrawer.GetAddAnalysisItemWidth">
            <summary>
            GetAddAnalysisItemWidth - 통계 아이템이 있는지 체크해서 그 공간 넓이를 리턴한다.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Hippo.AxisDrawer.GetAddFigureFormatWidth(Hippo.Axis)">
            <summary>
            GetAddFigureFormatWidth - 숫자포맷이 있을 경우 조금 넓혀준다.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Hippo.AxisDrawer.DrawGraphArea(System.Drawing.RectangleF,System.Drawing.Color,System.Drawing.Color,System.String)">
            <summary>
            그래프 영역 그리기
            2015.4.28 일 그리드 라인을 덮어 버리는 관계로 hippochart 에서 여기로 옮김
            </summary>
            <param name="GraphZone"></param>
            <param name="backcolor"></param>
            <param name="backlinecolor"></param>
            <param name="backImages"></param>
        </member>
        <member name="M:Hippo.AxisDrawer.Dispose">
            <summary>
            리소스 헤제
            </summary>
        </member>
        <member name="P:Hippo.AxisDrawer.Factor">
            <summary>
            좌표요소 - 그리면서 설정된 부분을 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.AxisDrawer.DebugString">
            <summary>
            디버그를 위한 문자열
            </summary>
        </member>
        <member name="T:Hippo.AxisFactors">
            <summary>
            좌표가 가져야할 요소들을 정의하는 클래스
            </summary>
            <remarks>
            좌표 차트(라인, 컬럼, 스플라인 등) 의 중요 속성을 관리하는 클래스입니다. x축, y축 설정과 축 방향 등을 정의할 수 있습니다. 
            </remarks>
        </member>
        <member name="M:Hippo.AxisFactors.#ctor">
            <summary>
            AxisFactors 생성자
            </summary>
        </member>
        <member name="P:Hippo.AxisFactors.BackColor">
            <summary>
            좌표 영역의 배경색을 설정하고 가져온다. 
            </summary> 
        </member>
        <member name="P:Hippo.AxisFactors.XAxis">
            <summary>
            x축 을 설정하고 가져온다.
            </summary>
        </member>
        <member name="P:Hippo.AxisFactors.YAxis">
            <summary>
            y축 을 설정하고 가져온다.
            </summary>
        </member>
        <member name="P:Hippo.AxisFactors.Zero">
            <summary>
            제로 포인트을 설정하고 가져온다.
            </summary>
            <remarks>제로 포인트는 차트의 (0, 0)의 위치를 표시합니다. 이 값을 활용해 차트 내의 세부 객체들로 엑세스할 수 있습니다. </remarks>
            <example>
                <code>
                    double zeroY = this.hHippoChart1.SeriesListDictionary[0].AxisFactor.Zero.Y; 
                    
                    float cY = (float)(zeroY - (e.Y));
                </code>
            </example>
        </member>
        <member name="P:Hippo.AxisFactors.X">
            <summary>
            x축 양의 끝 포인트을 설정하고 가져온다.
            </summary>
        </member>
        <member name="P:Hippo.AxisFactors.Y">
            <summary>
            y축 양의 끝 포인트을 설정하고 가져온다.
            </summary>
        </member>
        <member name="P:Hippo.AxisFactors.XMinus">
            <summary>
            x축 음의 끝 포인트을 설정하고 가져온다.
            </summary>
        </member>
        <member name="P:Hippo.AxisFactors.YMinus">
            <summary>
            y축 음의 끝 포인트을 설정하고 가져온다.
            </summary>
        </member>
        <member name="P:Hippo.AxisFactors.Orientation">
            <summary>
            축의 방향을 설정하고 가져온다. (본 속성은 4.3 버전 이후로 사용되지 않습니다. Direction 객체로 대체되었습니다)
            </summary>
        </member>
        <member name="P:Hippo.AxisFactors.DisplayItemType">
            <summary>
            수치표시시 표시되는 내용을 설정하고 가져온다.(수치, 이름, 수치+이름)
            </summary>
        </member>
        <member name="P:Hippo.AxisFactors.AxisItems">
            <summary>
            축 리스트을 설정하고 가져온다.
            </summary>
        </member>
        <member name="P:Hippo.AxisFactors.ThreeDstepDepth">
            <summary>
            입체일 경우 한 아이템당 넓이을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.AxisFactors.CoordinateRectangle">
            <summary>
            실질적인 좌표 그래프가 그려지는 렉텡글을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="T:Hippo.AxisMarker">
             <summary>
             축 마커 클래스
             </summary>
             <remarks>
             축에 해당 값에 대한 라인 표시를 할 수 있고 그에 대한 간단한 코멘트 등록이 가능합니다. x, y축 모두 지원합니다. 
             (예, 상한선, 하한선)
             </remarks>
             <example>
             <code>
                    SeriesList slist = new SeriesList();
                    slist.ChartType = ChartType.Column;
            
                    AxisMarker mk = new AxisMarker("하한선", 34);
                    mk.Line.LineColor = Color.Blue;
                    mk.Label.ForeColor = Color.Blue;
                    mk.TextFormat.Alignment = StringAlignment.Near;
            
                    AxisMarker mk2 = new AxisMarker("상한선", 178);
                    mk2.TextFormat.Alignment = StringAlignment.Near;  
            
                    slist.AxisFactor.Markers.Add(mk);
                    slist.AxisFactor.Markers.Add(mk2); 
            
                    Series sr = new Series();
                    sr.SeriesColor = Color.YellowGreen;
            
                    SeriesItem item1 = new SeriesItem(23);
                    item1.Name = "item1"; 
                    SeriesItem item2 = new SeriesItem(77);
                    item2.Name = "item2"; 
                    SeriesItem item3 = new SeriesItem(120);
                    item3.Name = "item3"; 
                    sr.items.Add(item1);
                    sr.items.Add(item2);
                    sr.items.Add(item3);
            
                    slist.SeriesCollection.Add(sr);
                    this.hHippoChart1.DrawChart(slist);
             </code>
             </example>
        </member>
        <member name="M:Hippo.AxisMarker.#ctor">
            <summary>
            AxisMarker 인스턴스를 생성합니다.(기본 생성자)
            </summary>
        </member>
        <member name="M:Hippo.AxisMarker.#ctor(System.String,System.Single)">
            <summary>
            AxisMarker 인스턴스를 생성합니다.
            </summary>
            <param name="LabelText">마커 라벨 텍스트</param>
            <param name="value">마커 수치값</param>
        </member>
        <member name="M:Hippo.AxisMarker.#ctor(System.String,System.DateTime)">
            <summary>
            AxisMarker 인스턴스를 생성합니다.
            </summary>
            <param name="LabelText">마커 라벨 텍스트</param>
            <param name="value">마커 수치값</param>
        </member>
        <member name="M:Hippo.AxisMarker.#ctor(System.String,System.Drawing.PointF)">
            <summary>
            AxisMarker 인스턴스를 생성합니다.
            </summary>
            <param name="LabelText">마커 라벨 텍스트</param>
            <param name="points">마커 포인트 위치값</param>
        </member>
        <member name="P:Hippo.AxisMarker.Visible">
            <summary>
            객체의 보이기/안보이기 를 설정하고 가져옵니다. 
            </summary>
        </member>
        <member name="P:Hippo.AxisMarker.MarkerPoint">
            <summary>
            마커의 실제 포인트 값을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.AxisMarker.Name">
            <summary>
            마커의 이름을 설정하고 가져옵니다. (범례에 표시됩니다)
            </summary>
        </member>
        <member name="P:Hippo.AxisMarker.Value">
            <summary>
            마커 표시 값를 가져오고 설정합니다.
            </summary>
        </member>
        <member name="P:Hippo.AxisMarker.DateTimeValue">
            <summary>
            마커 표시 날짜 형식 값을 가져오고 설정합니다. (간트차트 등에 시용됩니다)
            </summary>
        </member>
        <member name="P:Hippo.AxisMarker.Label">
            <summary>
            좌표마커 라벨를 가져오고 설정합니다.
            </summary>
        </member>
        <member name="P:Hippo.AxisMarker.Line">
            <summary>
            좌표마커 라인를 가져오고 설정합니다.
            </summary>
        </member>
        <member name="P:Hippo.AxisMarker.TextFormat">
            <summary>
            마커 문자열포맷를 가져오고 설정합니다.
            </summary>
        </member>
        <member name="P:Hippo.AxisMarker.BringToFront">
            <summary>
            마커를 맨 앞으로 보낼 것인가 여부를 가져오고 설정합니다.
            </summary>
        </member>
        <member name="P:Hippo.AxisMarker.LegendVisible">
            <summary>
            범례에 보여줄 것인지 여부를 가져오고 설정합니다.
            </summary>
        </member>
        <member name="T:Hippo.AxisMarkerCollection">
            <summary>
            차트 마커 컬렉션을 관리합니다.
            </summary>
        </member>
        <member name="T:Hippo.AxisScaleRange">
            <summary>
            축 Scale Range 클래스
            </summary>
            <remarks>
            값의 격차가 심한 데이터로 차트를 그릴 경우 축의 범위를 조절하므로써 보다 원활하게 차트를 그릴 수 있습니다.   
            </remarks>
            <example>
            <code>
                  sList.AxisFactor.AxisScaleRanges.Add(new AxisScaleRange(200, 950));
                  sList.AxisFactor.AxisScaleRanges.Add(new AxisScaleRange(1100, 11950));
            </code>
            </example>
        </member>
        <member name="M:Hippo.AxisScaleRange.#ctor(System.Double,System.Double)">
            <summary>
            AxisScaleRange 인스턴스를 생성합니다.
            </summary>
            <param name="rangestart"></param>
            <param name="rangeend"></param>
        </member>
        <member name="P:Hippo.AxisScaleRange.RangeStart">
            <summary>
            스케일 범위 시작 지점을 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.AxisScaleRange.RangeEnd">
            <summary>
            스케일 범위 끝 지점을 가져옵니다.
            </summary>
        </member>
        <member name="T:Hippo.AxisScaleRangeCollection">
            <summary>
            축 Scale Range 컬렉션 클래스
            </summary>
        </member>
        <member name="T:Hippo.AxisTick">
             <summary>
             축의 눈금을 생성하는 클래스
             </summary>
             <remarks>
             축에 표시된 눈금의 디자인 및 글자를 변경할 수 있고 해당 그리드 라인을 그릴 수 있는 클래스입니다. x, y축 모두 지원합니다.
             (예를 들어, 100, 200, 300 ... 이라는 단위 눈금들이 표시되어 있을 때 200이라는 눈금을 "위험한 단계" 또는 200이라고 쓰되 글자 폰트나 폰트사이즈 등을 조절하여 강조효과를 줄 수 있습니다.)
             </remarks>
             <example>
             <code>
                    SeriesList slist = new SeriesList();
                    slist.ChartType = ChartType.Column;
            
                    AxisTick tick4 = new AxisTick("$1,000,000");
                    tick4.Label.Text = "100만$";
                    tick4.Label.Font = new Font("HippoFont", 11, FontStyle.Bold);
                    tick4.Label.ForeColor = Color.Orange;
            
                    slist.AxisFactor.YAxis.Ticks.Add(tick4); 
            
                    Series sr = new Series();
                    sr.SeriesColor = Color.YellowGreen;
            
                    SeriesItem item1 = new SeriesItem(470000);
                    item1.Name = "item1"; 
                    SeriesItem item2 = new SeriesItem(2300000);
                    item2.Name = "item2"; 
                    SeriesItem item3 = new SeriesItem(1120000);
                    item3.Name = "item3"; 
                    sr.items.Add(item1);
                    sr.items.Add(item2);
                    sr.items.Add(item3);
            
                    slist.SeriesCollection.Add(sr);
                    this.hHippoChart1.DrawChart(slist);
             </code>
             </example>
        </member>
        <member name="M:Hippo.AxisTick.#ctor">
            <summary>
            Tick 기본 인스턴스를 생성합니다.
            </summary>
        </member>
        <member name="M:Hippo.AxisTick.#ctor(System.String)">
            <summary>
            Tick 인스턴스를 생성합니다.
            </summary>
            <param name="Item">아이템 이름</param>
        </member>
        <member name="M:Hippo.AxisTick.#ctor(System.Double)">
            <summary>
            Tick 인스턴스를 생성합니다. 
            </summary>
            <param name="value">Tick 값</param>
        </member>
        <member name="M:Hippo.AxisTick.#ctor(System.DateTime)">
            <summary>
             Tick 인스턴스를 생성합니다. 
            </summary>
            <param name="datetimeValue">Tick 날짜 값</param>
        </member>
        <member name="M:Hippo.AxisTick.#ctor(System.String,System.String)">
            <summary>
            Tick 인스턴스를 생성합니다. 
            </summary>
            <param name="Item">아이템 이름</param>
            <param name="DisplayText">표시 글자</param>
        </member>
        <member name="M:Hippo.AxisTick.#ctor(System.Double,System.String)">
            <summary>
            Tick 인스턴스를 생성합니다. 
            </summary>
            <param name="value">Tick 값</param>
            <param name="DisplayText">표시 글자</param>
        </member>
        <member name="M:Hippo.AxisTick.#ctor(System.DateTime,System.String)">
            <summary>
            Tick 인스턴스를 생성합니다.
            </summary>
            <param name="datetimeValue">Tick 날짜값</param>
            <param name="DisplayText">표시 글자</param>
        </member>
        <member name="M:Hippo.AxisTick.#ctor(System.Drawing.PointF)">
            <summary>
            Tick 인스턴스를 생성합니다. 
            </summary>
            <param name="points">눈금의 실제 포인트 값</param>
        </member>
        <member name="M:Hippo.AxisTick.#ctor(System.Drawing.PointF,System.String)">
            <summary>
            Tick 인스턴스를 생성합니다. 
            </summary>
            <param name="points">눈금의 실제 포인트 값</param>
            <param name="DisplayText">표시 글자</param>
        </member>
        <member name="P:Hippo.AxisTick.Visible">
            <summary>
            Tick 객체의 보이기/안보이기 를 설정하고 가져옵니다. 
            </summary>
        </member>
        <member name="P:Hippo.AxisTick.TickPoint">
            <summary>
            Tick의 실제 PointF 값을 설정하고 가져옵니다. 
            </summary>
        </member>
        <member name="P:Hippo.AxisTick.BackColor">
            <summary>
            Tick의 배경색을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.AxisTick.Label">
            <summary>
            Tick 라벨을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.AxisTick.GridLine">
            <summary>
            Tick 라인을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.AxisTick.IconPath">
            <summary>
            Tick 이미지 경로을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.AxisTick.ItemName">
            <summary>
            Tick 값을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.AxisTick.IsShowGridLine">
            <summary>
            그리드 라인을 표시할 것인지 여부을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.AxisTick.Value">
            <summary>
            눈금 실제값을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.AxisTick.DateTimeValue">
            <summary>
            눈금 실제 날짜형 값을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="T:Hippo.AxisTickCollection">
            <summary>
            차트 Tick 컬렉션을 관리합니다.
            </summary>
        </member>
        <member name="T:Hippo.BaseChart">
            <summary>
            히포차트의 추상 클래스 - 차트가 반드시 가져야할 기본적인 기능과 속성을 정의합니다.
            </summary>
        </member>
        <member name="F:Hippo.BaseChart.Tension">
            <summary>
            배경 라운드 처리를 위한 장렬
            </summary>
        </member>
        <member name="F:Hippo.BaseChart.InnerRecPaddings">
            <summary>
            내부 사각형 패딩값 - 좌우위아래 , 3번째는 유동적
            </summary>
        </member>
        <member name="M:Hippo.BaseChart.#ctor">
            <summary>
            BaseChart 인스턴스를 셍성합니다.
            </summary>
        </member>
        <member name="M:Hippo.BaseChart.DrawDefault">
            <summary>
            DrawDefault
            </summary>
        </member>
        <member name="M:Hippo.BaseChart.DrawChart">
            <summary>
            DrawChart
            </summary>
        </member>
        <member name="M:Hippo.BaseChart.DrawChart(Hippo.SeriesList)">
            <summary>
            DrawChart
            </summary>
            <param name="SeriesList"></param>
        </member>
        <member name="M:Hippo.BaseChart.DrawChart(Hippo.SeriesListDictionary)">
            <summary>
            DrawChart
            </summary>
            <param name="SeriesList"></param>
        </member>
        <member name="P:Hippo.BaseChart.SeriesAreaRate">
            <summary>
            시리즈의 공간을 배분하는 비율을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.BaseChart.ChartID">
            <summary>
            현재 그리고 있는 차트의 아이디를 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.BaseChart.BaseImage">
            <summary>
            차트 기본 바탕 이미지를 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.BaseChart.ChartImage">
            <summary>
            차트 이미지를 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.BaseChart.BaseGraphic">
            <summary>
            차트 기본 그래픽을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.BaseChart.ChartGraphic">
            <summary>
            차트 그래픽를 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.BaseChart.ChartRectangle">
            <summary>
            히포차트 전체 사각형를 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.BaseChart.Layout">
            <summary>
            히포차트 디자인을 위한 기반 레이아웃 클래스를 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.BaseChart.DesignType">
            <summary>
            차트 디자인 타입를 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.BaseChart.PaletteType">
            <summary>
            팔레트 종류를 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.BaseChart.Width2">
            <summary>
            차트 가로길이를 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.BaseChart.Height2">
            <summary>
            차트 세로 길이를 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.BaseChart.Left">
            <summary>
            차트 X 위치를 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.BaseChart.Top">
            <summary>
            차트 Y 위치를 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.BaseChart.Designer">
            <summary>
            차트 디자이너를 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.BaseChart.Titles">
            <summary>
            차트 타이틀를 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.BaseChart.LegendBox">
            <summary>
            범례를 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.BaseChart.Logo">
            <summary>
            로고를 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.BaseChart.SeriesListDictionary">
            <summary>
            시리즈 리스트 컬렉션를 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.BaseChart.Direction">
            <summary>
            그래프 영역의 방향를 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="T:Hippo.BaseGraph">
            <summary>
            히포차트의 그래프 추상 클래스 - 라인, 컬럼 등의 그래프의 기본적인 기능과 속성을 정의합니다.
            </summary>
        </member>
        <member name="M:Hippo.BaseGraph.DrawGraph(System.Drawing.Graphics,Hippo.SeriesList,Hippo.Series,Hippo.PaletteType)">
            <summary>
            DrawGraph
            </summary>
            <param name="graphic"></param>
            <param name="seriesList"></param>
            <param name="series"></param>
            <param name="paletteType"></param>
        </member>
        <member name="M:Hippo.BaseGraph.DrawGraph(System.Drawing.Graphics,Hippo.SeriesList,Hippo.Series,Hippo.PaletteType,System.Single[]@,System.Single[]@,System.Single[]@)">
            <summary>
            DrawGraph
            </summary>
            <param name="graphic"></param>
            <param name="seriesList"></param>
            <param name="series"></param>
            <param name="paletteType"></param>
            <param name="StackedMaxArr"></param>
            <param name="StackedMaxArr2"></param>
            <param name="StackedMaxArr3"></param>
        </member>
        <member name="M:Hippo.BaseGraph.DrawGraph(System.Drawing.Graphics,Hippo.SeriesList,Hippo.Series,Hippo.PaletteType,System.Single[]@,System.Single[]@,System.Single[]@,System.Double[]@)">
            <summary>
            DrawGraph
            </summary>
            <param name="graphic"></param>
            <param name="seriesList"></param>
            <param name="series"></param>
            <param name="paletteType"></param>
            <param name="StackedMaxArr"></param>
            <param name="StackedMaxArr2"></param>
            <param name="StackedMaxArr3"></param>
        </member>
        <member name="M:Hippo.charts.AreaLineGraph.GetCoordinateType">
            <summary>
            GetCoordinateType
            </summary>
            <returns></returns>
        </member>
        <member name="M:Hippo.charts.AreaLineGraph.GetCoordinateDirection">
            <summary>
            GetCoordinateDirection
            </summary>
            <returns></returns>
        </member>
        <member name="M:Hippo.charts.AreaLineGraph.DrawGraph(System.Int32,System.Int32)">
            <summary>
            DrawGraph
            </summary>
            <param name="ColumnIndex"></param>
            <param name="SameColumnIndex"></param>
            <returns></returns>
        </member>
        <member name="M:Hippo.charts.AreaLineGraph.Dispose">
            <summary>
            리소스를 헤제합니다.
            </summary>
        </member>
        <member name="M:Hippo.charts.BarGraph.GetCoordinateType">
            <summary>
            GetCoordinateType
            </summary>
            <returns></returns>
        </member>
        <member name="M:Hippo.charts.BarGraph.GetCoordinateDirection">
            <summary>
            GetCoordinateDirection
            </summary>
            <returns></returns>
        </member>
        <member name="M:Hippo.charts.BarGraph.DrawGraph(System.Int32,System.Int32)">
            <summary>
            DrawGraph
            </summary>
            <param name="ColumnIndex"></param>
            <param name="SameColumnIndex"></param>
            <returns></returns>
        </member>
        <member name="M:Hippo.charts.BarGraph.GetVarWidth(System.Int32,Hippo.SeriesItem)">
            <summary>
            GetVarWidth -  컬럼 차트 류의 컬럼 굵기를 결정한다. 
            </summary>
            <param name="valCount"></param>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:Hippo.charts.BarGraph.Dispose">
            <summary>
            리소스를 헤제합니다.
            </summary>
        </member>
        <member name="M:Hippo.charts.BarLineGraph.GetCoordinateType">
            <summary>
            GetCoordinateType
            </summary>
            <returns></returns>
        </member>
        <member name="M:Hippo.charts.BarLineGraph.GetCoordinateDirection">
            <summary>
            GetCoordinateDirection
            </summary>
            <returns></returns>
        </member>
        <member name="M:Hippo.charts.BarLineGraph.DrawGraph(System.Int32,System.Int32)">
            <summary>
            DrawGraph
            </summary>
            <param name="ColumnIndex"></param>
            <param name="SameColumnIndex"></param>
            <returns></returns>
        </member>
        <member name="M:Hippo.charts.BarLineGraph.Dispose">
            <summary>
            리소스를 헤제합니다.
            </summary>
        </member>
        <member name="T:Hippo.charts.CircularGraph">
            <summary>
            CircularGraph
            </summary>
        </member>
        <member name="M:Hippo.charts.CircularGraph.GetCoordinateType">
            <summary>
            GetCoordinateType
            </summary>
            <returns></returns>
        </member>
        <member name="M:Hippo.charts.CircularGraph.GetCoordinateDirection">
            <summary>
            GetCoordinateDirection
            </summary>
            <returns></returns>
        </member>
        <member name="M:Hippo.charts.CircularGraph.DrawGraph(System.Int32,System.Int32)">
            <summary>
            DrawGraph
            </summary>
            <param name="ColumnIndex"></param>
            <param name="SameColumnIndex"></param>
            <returns></returns>
        </member>
        <member name="M:Hippo.charts.CircularGraph.GetVarWidth(System.Int32)">
            <summary>
            GetVarWidth -  컬럼 차트 류의 컬럼 굵기를 결정한다. 
            </summary>
            <param name="valCount"></param>
            <returns></returns>
        </member>
        <member name="M:Hippo.charts.CircularGraph.Dispose">
            <summary>
            Dispose
            </summary>
        </member>
        <member name="T:Hippo.charts.ColumnGraph">
            <summary>
            ColumnGraph
            </summary>
        </member>
        <member name="M:Hippo.charts.ColumnGraph.GetCoordinateType">
            <summary>
            GetCoordinateType
            </summary>
            <returns></returns>
        </member>
        <member name="M:Hippo.charts.ColumnGraph.GetCoordinateDirection">
            <summary>
            GetCoordinateDirection
            </summary>
            <returns></returns>
        </member>
        <member name="M:Hippo.charts.ColumnGraph.DrawGraph(System.Int32,System.Int32)">
            <summary>
            DrawGraph
            </summary>
            <param name="ColumnIndex"></param>
            <param name="SameColumnIndex"></param>
            <returns></returns>
        </member>
        <member name="M:Hippo.charts.ColumnGraph.Dispose">
            <summary>
            리소스를 헤제합니다.
            </summary>
        </member>
        <member name="T:Hippo.charts.ConeGraph">
            <summary>
            ConeGraph
            </summary>
        </member>
        <member name="M:Hippo.charts.ConeGraph.GetCoordinateType">
            <summary>
            GetCoordinateType
            </summary>
            <returns></returns>
        </member>
        <member name="M:Hippo.charts.ConeGraph.GetCoordinateDirection">
            <summary>
            GetCoordinateDirection
            </summary>
            <returns></returns>
        </member>
        <member name="M:Hippo.charts.ConeGraph.DrawGraph(System.Int32,System.Int32)">
            <summary>
            DrawGraph
            </summary>
            <param name="ColumnIndex"></param>
            <param name="SameColumnIndex"></param>
            <returns></returns>
        </member>
        <member name="M:Hippo.charts.ConeGraph.GetVarWidth(System.Int32)">
            <summary>
            GetVarWidth -  컬럼 차트 류의 컬럼 굵기를 결정한다. 
            </summary>
            <param name="valCount"></param>
            <returns></returns>
        </member>
        <member name="M:Hippo.charts.ConeGraph.Dispose">
            <summary>
            Dispose
            </summary>
        </member>
        <member name="M:Hippo.charts.DonutGraph.GetCoordinateType">
            <summary>
            GetCoordinateType
            </summary>
            <returns></returns>
        </member>
        <member name="M:Hippo.charts.DonutGraph.GetCoordinateDirection">
            <summary>
            GetCoordinateDirection
            </summary>
            <returns></returns>
        </member>
        <member name="M:Hippo.charts.DonutGraph.DrawGraph(System.Int32,System.Int32)">
            <summary>
            DrawGraph
            </summary>
            <param name="ColumnIndex"></param>
            <param name="SameColumnIndex"></param>
            <returns></returns>
        </member>
        <member name="M:Hippo.charts.DonutGraph.GetDynamicRectangle(System.Drawing.RectangleF,System.Int32,System.Single,System.Single)">
            <summary>
            GetDynamicRectangle
            </summary>
            <param name="InnerRectangle"></param>
            <param name="depth"></param>
            <param name="size"></param>
            <param name="angle"></param>
            <returns></returns>
        </member>
        <member name="M:Hippo.charts.DonutGraph.SetRecommendSize(System.Drawing.RectangleF)">
            <summary>
            SetRecommendSize
            </summary>
        </member>
        <member name="M:Hippo.charts.DonutGraph.DrawStringFigures(System.Drawing.RectangleF,System.Single,System.Single,System.Int32,System.Drawing.Graphics,System.Boolean,System.Drawing.Color,System.Drawing.Color)">
            <summary>
            DrawStringFigures
            </summary>
            <param name="graArea"></param>
            <param name="AngleSum"></param>
            <param name="Angle"></param>
            <param name="adx"></param>
            <param name="ChartGraphic"></param>
            <param name="isUse3D"></param>
            <param name="forecolor"></param>
            <param name="linecolor"></param>
            <returns></returns>
        </member>
        <member name="M:Hippo.charts.DonutGraph.DrawTextOuter(System.Drawing.Graphics,System.String,System.Int32,System.Drawing.PointF,System.Single,System.Drawing.Color,System.Drawing.Color)">
            <summary>
            DrawTextOuter - 파이 수치 글자를 바깥에 라인과 함께 그린다.
            </summary>
            <param name="ChartGraphic"></param>
            <param name="displayname"></param>
            <param name="adx"></param>
            <param name="CurCoodi"></param>
            <param name="strAngle"></param>
            <param name="foreColor"></param>
            <param name="linecolor"></param>
        </member>
        <member name="T:Hippo.charts.ErrorBarGraph">
            <summary>
            ErrorBarGraph
            </summary>
        </member>
        <member name="M:Hippo.charts.ErrorBarGraph.GetCoordinateType">
            <summary>
            GetCoordinateType
            </summary>
            <returns></returns>
        </member>
        <member name="M:Hippo.charts.ErrorBarGraph.GetCoordinateDirection">
            <summary>
            GetCoordinateDirection
            </summary>
            <returns></returns>
        </member>
        <member name="M:Hippo.charts.ErrorBarGraph.DrawGraph(System.Int32,System.Int32)">
            <summary>
            DrawGraph
            </summary>
            <param name="ColumnIndex"></param>
            <param name="SameColumnIndex"></param>
            <returns></returns>
        </member>
        <member name="M:Hippo.charts.ErrorBarGraph.GetVarWidth(System.Int32,Hippo.SeriesItem)">
            <summary>
            GetVarWidth
            </summary>
            <param name="valCount"></param>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:Hippo.charts.ErrorBarGraph.Dispose">
            <summary>
            리소스를 헤제합니다.
            </summary>
        </member>
        <member name="M:Hippo.charts.FunnelGraph.GetCoordinateType">
            <summary>
            GetCoordinateType
            </summary>
            <returns></returns>
        </member>
        <member name="M:Hippo.charts.FunnelGraph.GetCoordinateDirection">
            <summary>
            GetCoordinateDirection
            </summary>
            <returns></returns>
        </member>
        <member name="M:Hippo.charts.FunnelGraph.DrawGraph(System.Int32,System.Int32)">
            <summary>
            DrawGraph
            </summary>
            <param name="ColumnIndex"></param>
            <param name="SameColumnIndex"></param>
            <returns></returns>
        </member>
        <member name="M:Hippo.charts.FunnelGraph.DarwTextInner(System.String,System.Drawing.Color,System.Drawing.RectangleF,System.Int32,System.Single,System.Single)">
            <summary>
            DarwTextInner
            </summary>
            <param name="displayname"></param>
            <param name="Forecolor"></param>
            <param name="TextRec"></param>
            <param name="CurColorIdx"></param>
            <param name="width"></param>
            <param name="height"></param>
        </member>
        <member name="M:Hippo.charts.FunnelGraph.DarwTextOuter(System.String,System.Drawing.Color,System.Drawing.RectangleF,System.Int32,System.Single,System.Single,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF)">
            <summary>
            DarwTextOuter
            </summary>
            <param name="displayname"></param>
            <param name="Forecolor"></param>
            <param name="TextRec"></param>
            <param name="CurColorIdx"></param>
            <param name="width"></param>
            <param name="height"></param>
            <param name="po1"></param>
            <param name="po2"></param>
            <param name="po3"></param>
            <param name="po4"></param>
        </member>
        <member name="M:Hippo.charts.FunnelGraph.HelpFunctions(System.Single[])">
            <summary>
            HelpFunctions
            </summary>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:Hippo.charts.FunnelGraph.GetFunctionValP(System.Double)">
            <summary>
            GetFunctionValP   
            - 예)  y= 2x  (y1)
            </summary>
            <param name="xVal"></param>
            <returns></returns>
        </member>
        <member name="M:Hippo.charts.FunnelGraph.GetFunctionValM(System.Double)">
            <summary>
            GetFunctionValM 
            - 예)  y= -2x + 4  (y2)
            </summary>
            <param name="xVal"></param>
            <returns></returns>
        </member>
        <member name="M:Hippo.charts.FunnelGraph.GetFunctionVal3DMiddle(System.Double)">
            <summary>
            GetFunctionVal3DMiddle (y3)
            </summary>
            <param name="xVal"></param>
            <returns></returns>
        </member>
        <member name="M:Hippo.charts.FunnelGraph.GetDisplayName(System.Int32)">
            <summary>
            피라미드 수치 표현 내용을 생성해서 리턴합니다.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Hippo.charts.FunnelGraph.DrawText(System.String,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Boolean,System.Drawing.Font,System.Drawing.Color,System.Int32)">
            <summary>
            입체 피라미드 수치
            </summary>
            <param name="Figurestr"></param>
            <param name="strPosition0"></param>
            <param name="strPosition"></param>
            <param name="strPosition2"></param>
            <param name="IsDisplayFigures"></param>
            <param name="font"></param>
            <param name="forecolor"></param>
            <param name="index"></param>
        </member>
        <member name="M:Hippo.charts.FunnelGraph.GetDynamicRectangle(System.Int32,System.Single)">
            <summary>
            GetDynamicRectangle
            </summary>
            <param name="depth"></param>
            <param name="SumAngle"></param>
            <returns></returns>
        </member>
        <member name="M:Hippo.charts.FunnelGraph.SetRecommendSize(System.Drawing.RectangleF)">
            <summary>
            SetRecommendSize
            </summary>
            <param name="InnerRectangle"></param>
        </member>
        <member name="M:Hippo.charts.FunnelGraph.Dispose">
            <summary>
            Dispose
            </summary>
        </member>
        <member name="T:Hippo.charts.ImageBarGraph">
            <summary>
            ImageBarGraph
            </summary>
        </member>
        <member name="M:Hippo.charts.ImageBarGraph.GetCoordinateType">
            <summary>
            GetCoordinateType
            </summary>
            <returns></returns>
        </member>
        <member name="M:Hippo.charts.ImageBarGraph.GetCoordinateDirection">
            <summary>
            GetCoordinateDirection
            </summary>
            <returns></returns>
        </member>
        <member name="M:Hippo.charts.ImageBarGraph.DrawGraph(System.Int32,System.Int32)">
            <summary>
            DrawGraph
            </summary>
            <param name="ColumnIndex"></param>
            <param name="SameColumnIndex"></param>
            <returns></returns>
        </member>
        <member name="M:Hippo.charts.ImageBarGraph.GetVarWidth(System.Int32,Hippo.SeriesItem)">
            <summary>
            GetVarWidth -  컬럼 차트 류의 컬럼 굵기를 결정한다. 
            </summary>
            <param name="valCount"></param>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:Hippo.charts.ImageBarGraph.Dispose">
            <summary>
            리소스를 헤제합니다.
            </summary>
        </member>
        <member name="M:Hippo.charts.KagiGraph.GetCoordinateType">
            <summary>
            GetCoordinateType
            </summary>
            <returns></returns>
        </member>
        <member name="M:Hippo.charts.KagiGraph.GetCoordinateDirection">
            <summary>
            GetCoordinateDirection
            </summary>
            <returns></returns>
        </member>
        <member name="M:Hippo.charts.KagiGraph.DrawGraph(System.Int32,System.Int32)">
            <summary>
            DrawGraph
            </summary>
            <param name="ColumnIndex"></param>
            <param name="SameColumnIndex"></param>
            <returns></returns>
        </member>
        <member name="T:Hippo.charts.LineGraph">
            <summary>
            LineGraph
            </summary>
        </member>
        <member name="M:Hippo.charts.LineGraph.GetCoordinateType">
            <summary>
            GetCoordinateType
            </summary>
            <returns></returns>
        </member>
        <member name="M:Hippo.charts.LineGraph.GetCoordinateDirection">
            <summary>
            GetCoordinateDirection
            </summary>
            <returns></returns>
        </member>
        <member name="M:Hippo.charts.LineGraph.DrawGraph(System.Int32,System.Int32)">
            <summary>
            DrawGraph
            </summary>
            <param name="ColumnIndex"></param>
            <param name="SameColumnIndex"></param>
            <returns></returns>
        </member>
        <member name="M:Hippo.charts.LineGraph.Dispose">
            <summary>
            리소스를 헤제합니다.
            </summary>
        </member>
        <member name="M:Hippo.charts.PieGraph.GetCoordinateType">
            <summary>
            GetCoordinateType
            </summary>
            <returns></returns>
        </member>
        <member name="M:Hippo.charts.PieGraph.GetCoordinateDirection">
            <summary>
            GetCoordinateDirection
            </summary>
            <returns></returns>
        </member>
        <member name="M:Hippo.charts.PieGraph.DrawGraph(System.Int32,System.Int32)">
            <summary>
            DrawGraph
            </summary>
            <param name="ColumnIndex"></param>
            <param name="SameColumnIndex"></param>
            <returns></returns>
        </member>
        <member name="M:Hippo.charts.PieGraph.GetDynamicRectangle(System.Drawing.RectangleF,System.Int32,System.Single,System.Single)">
            <summary>
            GetDynamicRectangle
            </summary>
            <param name="InnerRectangle"></param>
            <param name="depth"></param>
            <param name="size"></param>
            <param name="angle"></param>
            <returns></returns>
        </member>
        <member name="M:Hippo.charts.PieGraph.SetRecommendSize(System.Drawing.RectangleF)">
            <summary>
            SetRecommendSize
            </summary>
        </member>
        <member name="M:Hippo.charts.PieGraph.DrawStringFigures(System.Drawing.RectangleF,System.Single,System.Single,System.Int32,System.Drawing.Graphics,System.Boolean,System.Drawing.Color,System.Drawing.Color)">
            <summary>
            DrawStringFigures
            </summary>
            <param name="graArea"></param>
            <param name="AngleSum"></param>
            <param name="Angle"></param>
            <param name="adx"></param>
            <param name="ChartGraphic"></param>
            <param name="isUse3D"></param>
            <param name="forecolor"></param>
            <param name="linecolor"></param>
            <returns></returns>
        </member>
        <member name="M:Hippo.charts.PieGraph.DrawTextOuter(System.Drawing.Graphics,System.String,System.Int32,System.Drawing.PointF,System.Single,System.Drawing.Color,System.Drawing.Color,System.Boolean)">
            <summary>
            DrawTextOuter - 파이 수치 글자를 바깥에 라인과 함께 그린다.
            </summary>
            <param name="ChartGraphic"></param>
            <param name="displayname"></param>
            <param name="adx"></param>
            <param name="CurCoodi"></param>
            <param name="strAngle"></param>
            <param name="foreColor"></param>
            <param name="linecolor"></param>
            <param name="isGood">지그재그로 좀 더 잘보이도록 라인을 그릴 것인가</param>
        </member>
        <member name="T:Hippo.charts.PylamidColumnGraph">
            <summary>
            PylamidColumnGraph
            </summary>
        </member>
        <member name="M:Hippo.charts.PylamidColumnGraph.GetCoordinateType">
            <summary>
            GetCoordinateType
            </summary>
            <returns></returns>
        </member>
        <member name="M:Hippo.charts.PylamidColumnGraph.GetCoordinateDirection">
            <summary>
            GetCoordinateDirection
            </summary>
            <returns></returns>
        </member>
        <member name="M:Hippo.charts.PylamidColumnGraph.DrawGraph(System.Int32,System.Int32)">
            <summary>
            DrawGraph
            </summary>
            <param name="ColumnIndex"></param>
            <param name="SameColumnIndex"></param>
            <returns></returns>
        </member>
        <member name="M:Hippo.charts.PylamidColumnGraph.GetVarWidth(System.Int32,Hippo.SeriesItem)">
            <summary>
            GetVarWidth -  컬럼 차트 류의 컬럼 굵기를 결정한다. 
            </summary>
            <param name="valCount"></param>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:Hippo.charts.PylamidColumnGraph.Dispose">
            <summary>
            리소스를 헤제합니다.
            </summary>
        </member>
        <member name="M:Hippo.charts.PylamidGraph.GetCoordinateType">
            <summary>
            GetCoordinateType
            </summary>
            <returns></returns>
        </member>
        <member name="M:Hippo.charts.PylamidGraph.GetCoordinateDirection">
            <summary>
            GetCoordinateDirection
            </summary>
            <returns></returns>
        </member>
        <member name="M:Hippo.charts.PylamidGraph.DrawGraph(System.Int32,System.Int32)">
            <summary>
            DrawGraph
            </summary>
            <param name="ColumnIndex"></param>
            <param name="SameColumnIndex"></param>
            <returns></returns>
        </member>
        <member name="M:Hippo.charts.PylamidGraph.DarwTextInner(System.String,System.Drawing.Color,System.Drawing.RectangleF,System.Int32,System.Single,System.Single)">
            <summary>
            DarwTextInner
            </summary>
            <param name="displayname"></param>
            <param name="Forecolor"></param>
            <param name="TextRec"></param>
            <param name="CurColorIdx"></param>
            <param name="width"></param>
            <param name="height"></param>
        </member>
        <member name="M:Hippo.charts.PylamidGraph.DarwTextOuter(System.String,System.Drawing.Color,System.Drawing.RectangleF,System.Int32,System.Single,System.Single,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF)">
            <summary>
            DarwTextOuter
            </summary>
            <param name="displayname"></param>
            <param name="Forecolor"></param>
            <param name="TextRec"></param>
            <param name="CurColorIdx"></param>
            <param name="width"></param>
            <param name="height"></param>
            <param name="po1"></param>
            <param name="po2"></param>
            <param name="po3"></param>
            <param name="po4"></param>
        </member>
        <member name="M:Hippo.charts.PylamidGraph.HelpFunctions(System.Single[])">
            <summary>
            HelpFunctions
            </summary>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:Hippo.charts.PylamidGraph.GetFunctionValP(System.Double)">
            <summary>
            GetFunctionValP   
            - 예)  y= 2x  (y1)
            </summary>
            <param name="xVal"></param>
            <returns></returns>
        </member>
        <member name="M:Hippo.charts.PylamidGraph.GetFunctionValM(System.Double)">
            <summary>
            GetFunctionValM 
            - 예)  y= -2x + 4  (y2)
            </summary>
            <param name="xVal"></param>
            <returns></returns>
        </member>
        <member name="M:Hippo.charts.PylamidGraph.GetFunctionVal3DMiddle(System.Double)">
            <summary>
            GetFunctionVal3DMiddle (y3)
            </summary>
            <param name="xVal"></param>
            <returns></returns>
        </member>
        <member name="M:Hippo.charts.PylamidGraph.GetDisplayName(System.Int32)">
            <summary>
            피라미드 수치 표현 내용을 생성해서 리턴합니다.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Hippo.charts.PylamidGraph.DrawText(System.String,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Boolean,System.Drawing.Font,System.Drawing.Color,System.Int32)">
            <summary>
            입체 피라미드 수치
            </summary>
            <param name="Figurestr"></param>
            <param name="strPosition0"></param>
            <param name="strPosition"></param>
            <param name="strPosition2"></param>
            <param name="IsDisplayFigures"></param>
            <param name="font"></param>
            <param name="forecolor"></param>
            <param name="index"></param>
        </member>
        <member name="M:Hippo.charts.PylamidGraph.GetDynamicRectangle(System.Int32,System.Single)">
            <summary>
            GetDynamicRectangle
            </summary>
            <param name="depth"></param>
            <param name="SumAngle"></param>
            <returns></returns>
        </member>
        <member name="M:Hippo.charts.PylamidGraph.SetRecommendSize(System.Drawing.RectangleF)">
            <summary>
            SetRecommendSize
            </summary>
            <param name="InnerRectangle"></param>
        </member>
        <member name="M:Hippo.charts.PylamidGraph.Dispose">
            <summary>
            Dispose
            </summary>
        </member>
        <member name="T:Hippo.charts.RadarGraph">
            <summary>
            RadialGraph
            </summary>
        </member>
        <member name="M:Hippo.charts.RadarGraph.GetCoordinateDirection">
            <summary>
            GetCoordinateDirection
            </summary>
            <returns></returns>
        </member>
        <member name="M:Hippo.charts.RadarGraph.DrawGraph(System.Int32,System.Int32)">
            <summary>
            DrawGraph
            </summary>
            <param name="ColumnIndex"></param>
            <param name="SameColumnIndex"></param>
            <returns></returns>
        </member>
        <member name="M:Hippo.charts.RadarGraph.DrawDefaultRadar">
            <summary>
            DrawDefaultRadar
            </summary>
        </member>
        <member name="T:Hippo.charts.ScatterGraph">
            <summary>
            ScatterGraph
            </summary>
        </member>
        <member name="M:Hippo.charts.ScatterGraph.GetCoordinateType">
            <summary>
            GetCoordinateType
            </summary>
            <returns></returns>
        </member>
        <member name="M:Hippo.charts.ScatterGraph.GetCoordinateDirection">
            <summary>
            GetCoordinateDirection
            </summary>
            <returns></returns>
        </member>
        <member name="M:Hippo.charts.ScatterGraph.DrawGraph(System.Int32,System.Int32)">
            <summary>
            DrawGraph
            </summary>
            <param name="ColumnIndex"></param>
            <param name="SameColumnIndex"></param>
            <returns></returns>
        </member>
        <member name="M:Hippo.charts.SplineGraph.GetCoordinateType">
            <summary>
            GetCoordinateType
            </summary>
            <returns></returns>
        </member>
        <member name="M:Hippo.charts.SplineGraph.GetCoordinateDirection">
            <summary>
            GetCoordinateDirection
            </summary>
            <returns></returns>
        </member>
        <member name="M:Hippo.charts.SplineGraph.DrawGraph(System.Int32,System.Int32)">
            <summary>
            DrawGraph
            </summary>
            <param name="ColumnIndex">컬럼 인덱스</param>
            <param name="SameColumnIndex">동일 부류 컬럼 인덱스</param>
            <returns></returns>
        </member>
        <member name="M:Hippo.charts.SplineGraph.Dispose">
            <summary>
            리소스를 헤제합니다.
            </summary>
        </member>
        <member name="M:Hippo.charts.StackedBarGraph.GetCoordinateType">
            <summary>
            GetCoordinateType
            </summary>
            <returns></returns>
        </member>
        <member name="M:Hippo.charts.StackedBarGraph.GetCoordinateDirection">
            <summary>
            GetCoordinateDirection
            </summary>
            <returns></returns>
        </member>
        <member name="M:Hippo.charts.StackedBarGraph.DrawGraph(System.Int32,System.Int32)">
            <summary>
            DrawGraph
            </summary>
            <param name="ColumnIndex"></param>
            <param name="SameColumnIndex"></param>
            <returns></returns>
        </member>
        <member name="M:Hippo.charts.StackedBarGraph.DrawGraph2(System.Int32,System.Int32,Hippo.Axis)">
            <summary>
            DrawGraph2
            </summary>
            <param name="count"></param>
            <param name="seriesCount"></param>
            <param name="thisAxis"></param>
        </member>
        <member name="M:Hippo.charts.StackedBarGraph.GetVarWidth2(Hippo.SeriesItem)">
            <summary>
            GetVarWidth -  컬럼 차트 류의 컬럼 굵기를 결정한다. 
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:Hippo.charts.StackedBarGraph.GetVarWidth(System.Int32,Hippo.SeriesItem)">
            <summary>
            GetVarWidth -  컬럼 차트 류의 컬럼 굵기를 결정한다. 
            </summary>
            <param name="valCount"></param>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:Hippo.charts.StackedBarGraph.Dispose">
            <summary>
            리소스를 헤제합니다.
            </summary>
        </member>
        <member name="M:Hippo.charts.StackedCircularGraph.GetCoordinateType">
            <summary>
            GetCoordinateType
            </summary>
            <returns></returns>
        </member>
        <member name="M:Hippo.charts.StackedCircularGraph.GetCoordinateDirection">
            <summary>
            GetCoordinateDirection
            </summary>
            <returns></returns>
        </member>
        <member name="M:Hippo.charts.StackedCircularGraph.DrawGraph(System.Int32,System.Int32)">
            <summary>
            DrawGraph
            </summary>
            <param name="ColumnIndex"></param>
            <param name="SameColumnIndex"></param>
            <returns></returns>
        </member>
        <member name="M:Hippo.charts.StackedCircularGraph.GetVarWidth(System.Int32)">
            <summary>
            GetVarWidth -  컬럼 차트 류의 컬럼 굵기를 결정한다. 
            </summary>
            <param name="valCount"></param>
            <returns></returns>
        </member>
        <member name="M:Hippo.charts.StackedCircularGraph.Dispose">
            <summary>
            리소스를 헤제합니다.
            </summary>
        </member>
        <member name="M:Hippo.charts.StackedColumnGraph.GetCoordinateType">
            <summary>
            GetCoordinateType
            </summary>
            <returns></returns>
        </member>
        <member name="M:Hippo.charts.StackedColumnGraph.GetCoordinateDirection">
            <summary>
            GetCoordinateDirection
            </summary>
            <returns></returns>
        </member>
        <member name="M:Hippo.charts.StackedColumnGraph.DrawGraph(System.Int32,System.Int32)">
            <summary>
            DrawGraph
            </summary>
            <param name="ColumnIndex"></param>
            <param name="SameColumnIndex"></param>
            <returns></returns>
        </member>
        <member name="M:Hippo.charts.StackedColumnGraph.DrawGraph2(System.Int32,System.Int32)">
            <summary>
            DrawGraph2
            </summary>
            <param name="count"></param>
            <param name="seriesCount"></param>
        </member>
        <member name="M:Hippo.charts.StackedColumnGraph.GetVarWidth(System.Int32,Hippo.SeriesItem)">
            <summary>
            GetVarWidth -  컬럼 차트 류의 컬럼 굵기를 결정한다. 
            </summary>
            <param name="valCount"></param>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:Hippo.charts.StackedColumnGraph.Dispose">
            <summary>
            리소스를 헤제합니다.
            </summary>
        </member>
        <member name="M:Hippo.charts.StackedLineGraph.GetCoordinateType">
            <summary>
            GetCoordinateType
            </summary>
            <returns></returns>
        </member>
        <member name="M:Hippo.charts.StackedLineGraph.GetCoordinateDirection">
            <summary>
            GetCoordinateDirection
            </summary>
            <returns></returns>
        </member>
        <member name="M:Hippo.charts.StackedLineGraph.DrawGraph(System.Int32,System.Int32)">
            <summary>
            DrawGraph
            </summary>
            <param name="ColumnIndex"></param>
            <param name="SameColumnIndex"></param>
            <returns></returns>
        </member>
        <member name="M:Hippo.charts.StackedLineGraph.Dispose">
            <summary>
            리소스를 헤제합니다.
            </summary>
        </member>
        <member name="M:Hippo.charts.StackedSplineGraph.GetCoordinateType">
            <summary>
            GetCoordinateType
            </summary>
            <returns></returns>
        </member>
        <member name="M:Hippo.charts.StackedSplineGraph.GetCoordinateDirection">
            <summary>
            GetCoordinateDirection
            </summary>
            <returns></returns>
        </member>
        <member name="M:Hippo.charts.StackedSplineGraph.DrawGraph(System.Int32,System.Int32)">
            <summary>
            DrawGraph
            </summary>
            <param name="ColumnIndex"></param>
            <param name="SameColumnIndex"></param>
            <returns></returns>
        </member>
        <member name="M:Hippo.charts.StackedSplineGraph.Dispose">
            <summary>
            리소스를 헤제합니다.
            </summary>
        </member>
        <member name="T:Hippo.ColorHsl">
            <summary>Represents an AHSL color.</summary>
        </member>
        <member name="M:Hippo.ColorHsl.#ctor(System.Double,System.Double,System.Double,System.Double)">
            <summary>Initializes a new instance of the <see cref="T:LukeSw.Drawing.ColorHsl"/> structure
            from the specified double values.</summary>
            <param name="alpha">The alpha component value. Valid values are 0 through 1.</param>
            <param name="hue">The hue component value. Valid values are 0 through 360.</param>
            <param name="saturation">The saturation component value. Valid values are 0 through 1.</param>
            <param name="lightness">The lightness component value. Valid values are 0 through 1.</param>
        </member>
        <member name="M:Hippo.ColorHsl.#ctor(System.Double,System.Double,System.Double)">
            <summary>Initializes a new instance of the <see cref="T:LukeSw.Drawing.ColorHsl"/> structure
            from the specified double values. The alpha value is implicitly 1 (fully opaque).</summary>
            <param name="hue">The hue component value. Valid values are 0 through 360.</param>
            <param name="saturation">The saturation component value. Valid values are 0 through 1.</param>
            <param name="lightness">The lightness component value. Valid values are 0 through 1.</param>
        </member>
        <member name="F:Hippo.ColorHsl.A">
            <summary>Gets the alpha component value.</summary>
        </member>
        <member name="F:Hippo.ColorHsl.H">
            <summary>Gets the hue component value.</summary>
        </member>
        <member name="F:Hippo.ColorHsl.S">
            <summary>Gets the saturation component value.</summary>
        </member>
        <member name="F:Hippo.ColorHsl.L">
            <summary>Gets the lightness component value.</summary>
        </member>
        <member name="M:Hippo.ColorHsl.ToString">
            <summary>Converts this <see cref="T:LukeSw.Drawing.ColorHsl" /> structure to a human-readable string.</summary>
            <returns>String that consists of the AHSL component names and their values.</returns>
        </member>
        <member name="T:Hippo.ColorHsv">
            <summary>Represents an AHSV color.</summary>
        </member>
        <member name="M:Hippo.ColorHsv.#ctor(System.Double,System.Double,System.Double,System.Double)">
            <summary>Initializes a new instance of the <see cref="T:LukeSw.Drawing.ColorHsv"/> structure
            from the specified double values.</summary>
            <param name="alpha">The alpha component value. Valid values are 0 through 1.</param>
            <param name="hue">The hue component value. Valid values are 0 through 360.</param>
            <param name="saturation">The saturation component value. Valid values are 0 through 1.</param>
            <param name="value">The value component value. Valid values are 0 through 1.</param>
        </member>
        <member name="M:Hippo.ColorHsv.#ctor(System.Double,System.Double,System.Double)">
            <summary>Initializes a new instance of the <see cref="T:LukeSw.Drawing.ColorHsv"/> structure
            from the specified double values. The alpha value is implicitly 1 (fully opaque).</summary>
            <param name="hue">The hue component value. Valid values are 0 through 360.</param>
            <param name="saturation">The saturation component value. Valid values are 0 through 1.</param>
            <param name="value">The value component value. Valid values are 0 through 1.</param>
        </member>
        <member name="F:Hippo.ColorHsv.A">
            <summary>Gets the alpha component value.</summary>
        </member>
        <member name="F:Hippo.ColorHsv.H">
            <summary>Gets the hue component value.</summary>
        </member>
        <member name="F:Hippo.ColorHsv.S">
            <summary>Gets the saturation component value.</summary>
        </member>
        <member name="F:Hippo.ColorHsv.V">
            <summary>Gets the value component value.</summary>
        </member>
        <member name="M:Hippo.ColorHsv.ToString">
            <summary>Converts this <see cref="T:LukeSw.Drawing.ColorHsv" /> structure to a human-readable string.</summary>
            <returns>String that consists of the AHSV component names and their values.</returns>
        </member>
        <member name="T:Hippo.ColorRgb">
            <summary>Represents an ARGB color.</summary>
        </member>
        <member name="M:Hippo.ColorRgb.#ctor(System.Double,System.Double,System.Double,System.Double)">
            <summary>Initializes a new instance of the <see cref="T:LukeSw.Drawing.ColorRgb"/> structure
            from the specified double values.</summary>
            <param name="alpha">The alpha component value. Valid values are 0 through 1.</param>
            <param name="red">The red component value. Valid values are 0 through 1.</param>
            <param name="green">The green component value. Valid values are 0 through 1.</param>
            <param name="blue">The blue component value. Valid values are 0 through 1.</param>
        </member>
        <member name="M:Hippo.ColorRgb.#ctor(System.Double,System.Double,System.Double)">
            <summary>Initializes a new instance of the <see cref="T:LukeSw.Drawing.ColorRgb"/> structure
            from the specified double values. The alpha value is implicitly 1 (fully opaque).</summary>
            <param name="red">The red component value. Valid values are 0 through 1.</param>
            <param name="green">The green component value. Valid values are 0 through 1.</param>
            <param name="blue">The blue component value. Valid values are 0 through 1.</param>
        </member>
        <member name="F:Hippo.ColorRgb.A">
            <summary>Gets the alpha component value.</summary>
        </member>
        <member name="F:Hippo.ColorRgb.R">
            <summary>Gets the red component value.</summary>
        </member>
        <member name="F:Hippo.ColorRgb.G">
            <summary>Gets the green component value.</summary>
        </member>
        <member name="F:Hippo.ColorRgb.B">
            <summary>Gets the blue component value.</summary>
        </member>
        <member name="M:Hippo.ColorRgb.ToString">
            <summary>Converts this <see cref="T:LukeSw.Drawing.ColorRgb" /> structure to a human-readable string.</summary>
            <returns>String that consists of the ARGB component names and their values.</returns>
        </member>
        <member name="M:Hippo.ColorRgb.ToColor">
            <summary>Returns a <see cref="T:System.Drawing.Color" /> reprezentation of current instance.</summary>
            <returns>A <see cref="T:System.Drawing.Color" /> reprezentation of current instance</returns>
        </member>
        <member name="M:Hippo.ColorRgb.ToColorHsv">
            <summary>Returns a <see cref="T:LukeSw.Drawing.ColorHsv" /> reprezentation of current instance.</summary>
            <returns>A <see cref="T:LukeSw.Drawing.ColorHsv" /> reprezentation of current instance</returns>
        </member>
        <member name="M:Hippo.ColorRgb.ToColorHsl">
            <summary>Returns a <see cref="T:LukeSw.Drawing.ColorHsl" /> reprezentation of current instance.</summary>
            <returns>A <see cref="T:LukeSw.Drawing.ColorHsl" /> reprezentation of current instance</returns>
        </member>
        <member name="T:Hippo.ColorSystem">
            <summary>
            ColorSystem - 그래프의 컬러를 결정합니다.
            </summary>
        </member>
        <member name="M:Hippo.ColorSystem.GetGraphColor(Hippo.GraphColorType,System.Drawing.Color,System.Int32)">
            <summary>
            GetGraphColor
            </summary>
            <param name="colorType"></param>
            <param name="MainColor"></param>
            <param name="Transparency"></param>
            <returns></returns>
        </member>
        <member name="M:Hippo.ColorSystem.GetGraphColor(Hippo.GraphColorType,Hippo.PaletteType,System.Drawing.Color,System.Int32,System.Int32)">
            <summary>
            GetGraphColor
            </summary>
            <param name="colorType"></param>
            <param name="paletteType"></param>
            <param name="MainColor"></param>
            <param name="Transparency"></param>
            <param name="ColorIndex"></param>
            <returns></returns>
        </member>
        <member name="M:Hippo.ColorSystem.GetAutoColor(System.Int32)">
            <summary>
            GetAutoColor
            </summary>
            <returns></returns>
        </member>
        <member name="M:Hippo.ColorSystem.GetGraphColor2(Hippo.GraphColorType,System.Drawing.Color,System.Int32)">
            <summary>
            GetGraphColor2
            </summary>
            <param name="colorType"></param>
            <param name="MainColor"></param>
            <param name="Transparency"></param>
            <returns></returns>
        </member>
        <member name="T:Hippo.FunctionCompiler">
            <summary>Compiles functions as runtime. This class cannot be inherited.</summary>
        </member>
        <member name="M:Hippo.FunctionCompiler.Compile(System.Int32,System.String)">
            <summary>Compiles function at runtime.</summary>
            <param name="parametersCount">Number of input parameters.</param>
            <param name="functionBody">Function body.</param>
            <returns>Compiled function.</returns>
            <exception cref="!:LukeSw.Runtime.FunctionNotCompiledException">Thrown when function was not compiled because of some errors in functions body.</exception>
            <example>This sample shows how to call the Compile method.
            <code>
            CompiledFunction cf = FunctionCompiler.Compile(3, "y = x1 + x2 + x3;");
            double y = cf(2, 4, 7);
            </code>
            </example>
        </member>
        <member name="T:Hippo.FunctionNotCompiledException">
            <summary>The exception is thrown when function was not compiled.</summary>
        </member>
        <member name="M:Hippo.FunctionNotCompiledException.#ctor">
            <summary>Initializes a new instance of the <see cref="T:LukeSw.Runtime.FunctionNotCompiledException" /> class.</summary>
        </member>
        <member name="M:Hippo.FunctionNotCompiledException.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:LukeSw.Runtime.FunctionNotCompiledException" /> class with a specified error message.</summary>
            <param name="message">A message that describes the error.</param>
        </member>
        <member name="M:Hippo.FunctionNotCompiledException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance of the <see cref="T:LukeSw.Runtime.FunctionNotCompiledException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.</summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception. If the innerException parameter is not a null reference, the current exception is raised in a catch block that handles the inner exception.</param>
        </member>
        <member name="M:Hippo.FunctionNotCompiledException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance of the <see cref="T:LukeSw.Runtime.FunctionNotCompiledException" /> class with serialized data.</summary>
            <param name="context">The contextual information about the source or destination.</param>
            <param name="info">The object that holds the serialized object data.</param>
        </member>
        <member name="T:Hippo.CompiledFunction">
            <summary>Represents a function that was compiled at runtime.</summary>
            <param name="x">Function input parameter.</param>
            <returns>Result value of function.</returns>
        </member>
        <member name="T:Hippo.GraphColor">
            <summary>
            그래프 칼라를 자동으로 생성해주는 클래스(내부 클래스)
            </summary>
        </member>
        <member name="M:Hippo.GraphColor.#ctor(System.Drawing.Color,System.Int32,Hippo.PaletteType)">
            <summary>
            GraphColor 인스턴스를 생성합니다.
            </summary>
            <param name="MainColor"></param>
            <param name="ColorIndex"></param>
        </member>
        <member name="M:Hippo.GraphColor.#ctor(System.Drawing.Color,System.Int32,System.Int32,Hippo.PaletteType)">
            <summary>
            GraphColor 인스턴스를 생성합니다.
            </summary>
            <param name="MainColor"></param>
            <param name="Transparency"></param>
            <param name="ColorIndex"></param>
        </member>
        <member name="M:Hippo.GraphColor.Init(System.Drawing.Color,System.Int32,System.Int32,Hippo.PaletteType)">
            <summary>
            초기화
            </summary>
            <param name="MainColor"></param>
            <param name="Transparency"></param>
            <param name="ColorIndex"></param>
            <param name="paletteType"></param>
        </member>
        <member name="P:Hippo.GraphColor.GraphColorItems">
            <summary>
            그래프 아이템 리스트를 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="T:Hippo.GraphColorItem">
            <summary>
            그래프 칼라 아이템 클래스
            </summary>
        </member>
        <member name="P:Hippo.GraphColorItem.MainColor">
            <summary>
            그래프 메인 색상를 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.GraphColorItem.ShadowColor">
            <summary>
            그림자 색상를 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.GraphColorItem.OutLineColor">
            <summary>
            외곽 라인 색상를 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="T:Hippo.AnalysisStatistics">
            <summary>
            통계분석 코어로직
            </summary>
        </member>
        <member name="T:Hippo.ChartUtility">
            <summary>
            유틸리티 클래스
            </summary>
        </member>
        <member name="M:Hippo.ChartUtility.CheckDataValidation(System.String)">
            <summary>
            차트를 그리는 데이터의 값을 분석하여 올바른(그리기에 적당한) 데이터로 반환합니다. 
             - 숫자가 맞는지?
             - 기타 등등
            </summary>
            <param name="chartdata"></param>
            <returns></returns>
        </member>
        <member name="M:Hippo.ChartUtility.CheckDataValidation3(System.String,System.Boolean,System.Int32)">
            <summary>
            CheckDataValidation3
            </summary>
            <param name="chartdata"></param>
            <param name="IsLog"></param>
            <param name="LogBase"></param>
            <returns></returns>
        </member>
        <member name="M:Hippo.ChartUtility.CheckDataValidation2(System.String)">
            <summary>
            CheckDataValidation2
            </summary>
            <param name="chartdata"></param>
            <returns></returns>
        </member>
        <member name="M:Hippo.ChartUtility.CheckDataValidation4(System.String,System.Boolean,System.Int32)">
            <summary>
            CheckDataValidation4
            </summary>
            <param name="chartdata"></param>
            <param name="IsLog"></param>
            <param name="LogBase"></param>
            <returns></returns>
        </member>
        <!-- "M:Hippo.ChartUtility.GetColorByFigues(System.Int32,System.Int32,System.Int32)" 멤버에 대해 잘못된 형식의 XML 주석은 무시됩니다. -->
        <member name="M:Hippo.ChartUtility.GetColorByFiguesByArray(System.Int32,System.Int32)">
            <summary>
            GetColorByFigues
            </summary>
            <param name="maxUnitValue"></param>
            <param name="minUnitValue"></param>
            <returns></returns>
        </member>
        <member name="M:Hippo.ChartUtility.GetColorByFigues2(System.Int32,System.Int32)">
            <summary>
            색상 수치 값을 받아서 특정 색을 반환하는 메소드
            </summary>
            <param name="maxUnitValue"></param>
            <param name="minUnitValue"></param>
            <returns></returns>
        </member>
        <member name="M:Hippo.ChartUtility.CheckDateTimeDataValidation(System.String)">
            <summary>
            데이터가 데이트형식인지를 체크한다.
            </summary>
            <param name="chartdata"></param>
            <returns></returns>
        </member>
        <member name="M:Hippo.ChartUtility.GetRound(System.Double,System.Int32)">
            <summary>
            GetRound
            </summary>
            <param name="Figure"></param>
            <param name="RoundFigure"></param>
            <returns></returns>
        </member>
        <member name="M:Hippo.ChartUtility.GetFigureFormatString(Hippo.FigureFormat)">
            <summary>
            GetFigureFormatString - 숫자 포맷 설정을 위한 문자를 리턴합니다.
            </summary>
            <param name="format"></param>
            <returns></returns>
        </member>
        <member name="T:Hippo.EventLogHelper">
            <summary>
            이벤트로그 등록 클래스
            </summary>
        </member>
        <member name="M:Hippo.EventLogHelper.RegisterEventLog(System.String,System.String,System.String,System.Diagnostics.EventLogEntryType)">
            <summary>
            이벤트 로그를 등록합니다.
            </summary>
            <param name="logname">로그이름</param>
            <param name="sourceName">소스이름</param>
            <param name="message">내용</param>
            <param name="type">EventLogEntryType</param>
        </member>
        <member name="P:Hippo.EventLogHelper.EventLogMessage">
            <summary>
            이벤트 로그 메세지
            </summary>
        </member>
        <member name="T:Hippo.Figures">
            <summary>
            중요 고정값 관리 클래스
            </summary>
        </member>
        <member name="F:Hippo.Figures.DefalutWidth">
            <summary>
            차트 기본 가로길이
            </summary>
        </member>
        <member name="F:Hippo.Figures.DefaultHeight">
            <summary>
            차트 기본 세로길이
            </summary>
        </member>
        <member name="F:Hippo.Figures.DefaultLimitWidthUncoordinate">
            <summary>
            그래프를 그리는 최소한의 공간(비좌표)
            </summary>
        </member>
        <member name="F:Hippo.Figures.DefaultLimitWidthCoordinate">
            <summary>
            그래프를 그리는 최소한의 공간(좌표)
            </summary>
        </member>
        <member name="F:Hippo.Figures.DefaultLimitWidthUncoordinateGauge">
            <summary>
            그래프를 그리는 최소한의 공간(게이지)
            </summary>
        </member>
        <member name="F:Hippo.Figures.InnerPadding">
            <summary>
            가장 바깥 큰 사각형의 바로 안쪽 패딩
            </summary>
        </member>
        <member name="F:Hippo.Figures.TitleSpareEmpty">
            <summary>
            타이틀 부분의 약간의 여유 공간
            </summary>
        </member>
        <member name="F:Hippo.Figures.LogoSpareEmpty">
            <summary>
            맨 하단 로고 없을시 최종 남아있을 공간
            </summary>
        </member>
        <member name="F:Hippo.Figures.MaximumMargins">
            <summary>
            차트 최대 마진 값
            </summary>
        </member>
        <member name="F:Hippo.Figures.xTitlebHeight">
            <summary>
            x 축...
            </summary>
        </member>
        <member name="F:Hippo.Figures.LegendBoxWidth">
            <summary>
            범례 가로 길이 고정
            </summary>
        </member>
        <member name="F:Hippo.Figures.LegendBoxHeight">
            <summary>
            범례 아이템 한칸 높이
            </summary>
        </member>
        <member name="F:Hippo.Figures.LegendHeaderHeight">
            <summary>
            범례 헤더 높이
            </summary>
        </member>
        <member name="F:Hippo.Figures.DefaultLineWidth">
            <summary>
            좌표 타입 그래프 x, y 축 라인과 대표값 굵기
            </summary>
        </member>
        <member name="F:Hippo.Figures.DefaultCoordinateWidth">
            <summary>
            좌표 타입 그래프 모눈 라인 넓이
            </summary>
        </member>
        <member name="F:Hippo.Figures.CoordinateRecRightEmpty">
            <summary>
            좌표 타입 그래프의 오른쪽 고정 여백
            </summary>
        </member>
        <member name="F:Hippo.Figures.CoordinateRecTopEmpty">
            <summary>
            좌표 타입 그래프의 위 고정 여백
            </summary>
        </member>
        <member name="F:Hippo.Figures.CoordinateXtextLimitEmpty">
            <summary>
            x 좌표 부분 텍스트 들어가는 공간의 최소값
            </summary>
        </member>
        <member name="F:Hippo.Figures.CoordinateXtextMaxEmpty">
            <summary>
            x 좌표 부분 텍스트 들어가는 공간의 최대값
            </summary>
        </member>
        <member name="F:Hippo.Figures.CoordinateYnameMinEmpty">
            <summary>
            y 좌표 제목 부분이 공백일경우 넓이
            </summary>
        </member>
        <member name="F:Hippo.Figures.CoordinateYnameEmpty">
            <summary>
            y 좌표 제목 부분 가로 넓이
            </summary>
        </member>
        <member name="F:Hippo.Figures.Coordinate3DWidth">
            <summary>
            좌표 타입 그래프의 3D 를 위해 루프를 도는 수
            </summary>
        </member>
        <member name="F:Hippo.Figures.XunitLimitPixel">
            <summary>
            그래프 그릴 시 x 아이템이 너무 많을 경우를 지칭하는 값
            </summary>
        </member>
        <member name="F:Hippo.Figures.LineChartDefaultTention">
            <summary>
            라인 그래프 직선일 경우 장력(너무 직선으로 그리면 뽀죡해지는 문제 발생)
            </summary>
        </member>
        <member name="F:Hippo.Figures.SplineChartDefaultTention">
            <summary>
            스플라인 차트 장력 기본값
            </summary>
        </member>
        <member name="F:Hippo.Figures.LineChartCurvedTention">
            <summary>
            라인 그래프 곡선일 경우 장력
            </summary>
        </member>
        <member name="F:Hippo.Figures.Pie3DWidth">
            <summary>
            파이 그래프 3D 를 위해 루프를 도는 수. 4.3 버전에서 28 ==> 15 로 본경되었습니다.
            </summary>
        </member>
        <member name="F:Hippo.Figures.PieMargins">
            <summary>
            파이 그래프의 여백(마진)
            </summary>
        </member>
        <member name="F:Hippo.Figures.PiePercentLineDisplayvalue">
            <summary>
            수치글자를 자동으로 표시할 경우 라인이 그려지는 퍼센트 한계값을 설정하고 가져옵니다.(기본값 :5%)
            </summary>
        </member>
        <member name="F:Hippo.Figures.PieForTextArea">
            <summary>
            파이 그래프 소수 % 텍스트를 쓰기 위한 공간을 위해
            </summary>
        </member>
        <member name="F:Hippo.Figures.ColumnValueRecWidth">
            <summary>
            컬럼 차트에서 벨류렉텡글의 넓이 한계값
            </summary>
        </member>
        <member name="F:Hippo.Figures.StockColumnValueRecWidth">
            <summary>
            w주식 차트에서 벨류렉텡글의 넓이 한계값
            </summary>
        </member>
        <member name="F:Hippo.Figures.StarChartItemTextLimitLength">
            <summary>
            방사형 차트 항목 이름 제한 길이
            </summary>
        </member>
        <member name="F:Hippo.Figures.StarChartEmpty">
            <summary>
            방사형 차트 항목 이름 공간
            </summary>
        </member>
        <member name="F:Hippo.Figures.StarItemViewLimitCount">
            <summary>
            방사형 차트 항목 이름 그리는 개수는 36개, 그 이상 그리면 너무 복잡해지므로 다른 조치취함.
            </summary>
        </member>
        <member name="F:Hippo.Figures.StarChartInnerCircleAlpha">
            <summary>
            방사형 차트 내부 영역 투명도
            </summary>
        </member>
        <member name="F:Hippo.Figures.PylamidMinPercent">
            <summary>
            피라미드 차트 라인 빼기 위한 최소 퍼센트값
            </summary>
        </member>
        <member name="F:Hippo.Figures.PylamidMinTextHeight">
            <summary>
            피라미드 차트 라인 빼기 위한 최소 렉텡글 높이
            </summary>
        </member>
        <member name="F:Hippo.Figures.PylamidMinTextwidth">
            <summary>
            피라미드 차트 라인 빼기 위한 최소 넓이
            </summary>
        </member>
        <member name="F:Hippo.Figures.PylamidEmptyArea">
            <summary>
            피라미드 공백
            </summary>
        </member>
        <member name="F:Hippo.Figures.HippoFontFamily">
            <summary>
            히포차트 대표 폰트 패밀리
            </summary>
        </member>
        <member name="F:Hippo.Figures.MaxLineWidth">
            <summary>
            Line 객체의 최대 굵기
            </summary>
        </member>
        <member name="F:Hippo.Figures.InnerVSGraphAreaSpan">
            <summary>
            InnerRectangle 과 내부 그래프 영역과의 공간
            </summary>
        </member>
        <member name="F:Hippo.Figures.GaugeMaxiumHeight">
            <summary>
            게이지 짧은 쪽 넓이 최대값
            </summary>
        </member>
        <member name="F:Hippo.Figures.GaugeMinimumHeight">
            <summary>
            게이지 짧은 쪽 넓이 최소값
            </summary>
        </member>
        <member name="F:Hippo.Figures.ScrollDefaultWidth">
            <summary>
            스크롤 차트인 경우 X축 간격 기본 값
            </summary>
        </member>
        <member name="T:Hippo.FileSystemLogHelper">
            <summary>
            파일 시스템 로그를 생성해 주는 클래스
            </summary>
        </member>
        <member name="M:Hippo.FileSystemLogHelper.#ctor">
            <summary>
            FileSystemLogHelper 인스턴스를 생성합니다.
            </summary>
        </member>
        <member name="M:Hippo.FileSystemLogHelper.WriteLog(System.String,System.String,System.String,System.String)">
            <summary>
            파일 시스템에 로그를 기록합니다.
            </summary>
            <param name="logTitle">로그 제목</param>
            <param name="message">로그 내용</param>
            <param name="line">발생 위치</param>
            <param name="id">차트 아이디</param>
        </member>
        <member name="P:Hippo.FileSystemLogHelper.ErrorMessage">
            <summary>
            에러 메세지를 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.FileSystemLogHelper.LogFilePath">
            <summary>
            로그파일경로
            </summary>
        </member>
        <member name="T:Hippo.HippoCollectionBase`1">
            <summary>
            히포차트 기본 컬렉션 베이스 클래스
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:Hippo.HippoCollectionBase2`2">
            <summary>
            히포차트 기본 컬렉션 베이스 클래스 두가지 타입 버전
            </summary>
            <typeparam name="E"></typeparam>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:Hippo.Palette">
            <summary>
            Palette 클래스
            </summary>
        </member>
        <member name="P:Hippo.Palette.DefaultTitleColor">
            <summary>
            타이틀 글자색을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.Palette.DefaultLogoColor">
            <summary>
            로고 글자색을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.Palette.DefaultLegendItemForeColor">
            <summary>
            범례 아이템 글자 색상을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.Palette.DefaultBackColor">
            <summary>
            차트 배경색을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.Palette.DefaultInnerBackColor">
            <summary>
            내부 사각형 색을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.Palette.DefualtBackLineColor">
            <summary>
            배경라인색을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.Palette.DefaultCoodinateColor">
            <summary>
            그래프 눈금색을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.Palette.DefaultPenColor">
            <summary>
            기본 펜 색상을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.Palette.DefaultLineColor">
            <summary>
            그래프 대표 눈금색을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.Palette.DefaultZeroLineColor">
            <summary>
            좌표 평면그래프일 경우 제로 라인 색상을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.Palette.DefaultColor1">
            <summary>
            차트 기본색 1을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.Palette.DefaultColor2">
            <summary>
            차트 기본색 2을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.Palette.DefaultColor3">
            <summary>
            차트 기본색 3을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.Palette.DefaultColor4">
            <summary>
            차트 기본색 4을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.Palette.DefaultColor5">
            <summary>
            차트 기본색 5을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.Palette.DefaultColor6">
            <summary>
            차트 기본색 6을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.Palette.DefaultColor7">
            <summary>
            차트 기본색 7을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.Palette.DefaultColor8">
            <summary>
            차트 기본색 8을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.Palette.DefaultColor9">
            <summary>
            차트 기본색 9을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.Palette.DefaultColor10">
            <summary>
            차트 기본색 10을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.Palette.DefaultColor11">
            <summary>
            차트 기본색 11을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.Palette.DefaultColor12">
            <summary>
            차트 기본색 12을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.Palette.DefaultColor13">
            <summary>
            차트 기본색 13을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.Palette.DefaultColor14">
            <summary>
            차트 기본색 14을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.Palette.DefaultColor15">
            <summary>
            차트 기본색 15을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.Palette.DefaultColor16">
            <summary>
            차트 기본색 16을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.Palette.DefaultColor17">
            <summary>
            차트 기본색 17을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.Palette.DefaultColor18">
            <summary>
            차트 기본색 18을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.Palette.DefaultColor19">
            <summary>
            차트 기본색 19을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.Palette.DefaultColor20">
            <summary>
            차트 기본색 20을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.Palette.DefaultColor21">
            <summary>
            차트 기본색 21을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="T:Hippo.Palette2">
            <summary>
            Palette2 클래스
            </summary>
        </member>
        <member name="P:Hippo.Palette2.DefaultColor1">
            <summary>
            차트 기본색 1을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.Palette2.DefaultColor2">
            <summary>
            차트 기본색 2을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.Palette2.DefaultColor3">
            <summary>
            차트 기본색 3을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.Palette2.DefaultColor4">
            <summary>
            차트 기본색 4을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.Palette2.DefaultColor5">
            <summary>
            차트 기본색 5을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="T:Hippo.Palette3">
            <summary>
            Palette3 클래스
            </summary>
        </member>
        <member name="P:Hippo.Palette3.DefaultColor1">
            <summary>
            차트 기본색 1을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.Palette3.DefaultColor2">
            <summary>
            차트 기본색 2을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.Palette3.DefaultColor3">
            <summary>
            차트 기본색 3을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.Palette3.DefaultColor4">
            <summary>
            차트 기본색 4을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.Palette3.DefaultColor5">
            <summary>
            차트 기본색 5을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="T:Hippo.Palette4">
            <summary>
            Palette4 클래스
            </summary>
        </member>
        <member name="P:Hippo.Palette4.DefaultColor1">
            <summary>
            차트 기본색 1을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.Palette4.DefaultColor2">
            <summary>
            차트 기본색 2을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.Palette4.DefaultColor3">
            <summary>
            차트 기본색 3을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.Palette4.DefaultColor4">
            <summary>
            차트 기본색 4을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.Palette4.DefaultColor5">
            <summary>
            차트 기본색 5을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="T:Hippo.Palette5">
            <summary>
            Palette5 클래스
            </summary>
        </member>
        <member name="P:Hippo.Palette5.DefaultColor1">
            <summary>
            차트 기본색 1을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.Palette5.DefaultColor2">
            <summary>
            차트 기본색 2을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.Palette5.DefaultColor3">
            <summary>
            차트 기본색 3을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.Palette5.DefaultColor4">
            <summary>
            차트 기본색 4을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.Palette5.DefaultColor5">
            <summary>
            차트 기본색 5을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="T:Hippo.Palette6">
            <summary>
            Palette6 클래스
            </summary>
        </member>
        <member name="P:Hippo.Palette6.DefaultColor1">
            <summary>
            차트 기본색 1을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.Palette6.DefaultColor2">
            <summary>
            차트 기본색 2을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.Palette6.DefaultColor3">
            <summary>
            차트 기본색 3을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.Palette6.DefaultColor4">
            <summary>
            차트 기본색 4을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.Palette6.DefaultColor5">
            <summary>
            차트 기본색 5을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="T:Hippo.Palette7">
            <summary>
            Palette7 클래스
            </summary>
        </member>
        <member name="P:Hippo.Palette7.DefaultColor1">
            <summary>
            차트 기본색 1을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.Palette7.DefaultColor2">
            <summary>
            차트 기본색 2을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.Palette7.DefaultColor3">
            <summary>
            차트 기본색 3을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.Palette7.DefaultColor4">
            <summary>
            차트 기본색 4을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.Palette7.DefaultColor5">
            <summary>
            차트 기본색 5을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="T:Hippo.Palette8">
            <summary>
            Palette8 클래스
            </summary>
        </member>
        <member name="P:Hippo.Palette8.DefaultColor1">
            <summary>
            차트 기본색 1을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.Palette8.DefaultColor2">
            <summary>
            차트 기본색 2을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.Palette8.DefaultColor3">
            <summary>
            차트 기본색 3을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.Palette8.DefaultColor4">
            <summary>
            차트 기본색 4을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.Palette8.DefaultColor5">
            <summary>
            차트 기본색 5을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="T:Hippo.Palette9">
            <summary>
            Palette9 클래스
            </summary>
        </member>
        <member name="P:Hippo.Palette9.DefaultColor1">
            <summary>
            차트 기본색 1을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.Palette9.DefaultColor2">
            <summary>
            차트 기본색 2을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.Palette9.DefaultColor3">
            <summary>
            차트 기본색 3을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.Palette9.DefaultColor4">
            <summary>
            차트 기본색 4을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.Palette9.DefaultColor5">
            <summary>
            차트 기본색 5을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="T:Hippo.Palette10">
            <summary>
            Palette10 클래스
            </summary>
        </member>
        <member name="P:Hippo.Palette10.DefaultColor1">
            <summary>
            차트 기본색 1을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.Palette10.DefaultColor2">
            <summary>
            차트 기본색 2을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.Palette10.DefaultColor3">
            <summary>
            차트 기본색 3을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.Palette10.DefaultColor4">
            <summary>
            차트 기본색 4을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.Palette10.DefaultColor5">
            <summary>
            차트 기본색 5을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="T:Hippo.Palette11">
            <summary>
            Palette11 클래스
            </summary>
        </member>
        <member name="P:Hippo.Palette11.DefaultColor1">
            <summary>
            차트 기본색 1을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.Palette11.DefaultColor2">
            <summary>
            차트 기본색 2을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.Palette11.DefaultColor3">
            <summary>
            차트 기본색 3을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.Palette11.DefaultColor4">
            <summary>
            차트 기본색 4을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.Palette11.DefaultColor5">
            <summary>
            차트 기본색 5을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="T:Hippo.Palette12">
            <summary>
            Palette12 클래스
            </summary>
        </member>
        <member name="P:Hippo.Palette12.DefaultColor1">
            <summary>
            차트 기본색 1을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.Palette12.DefaultColor2">
            <summary>
            차트 기본색 2을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.Palette12.DefaultColor3">
            <summary>
            차트 기본색 3을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.Palette12.DefaultColor4">
            <summary>
            차트 기본색 4을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.Palette12.DefaultColor5">
            <summary>
            차트 기본색 5을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="T:Hippo.Theme">
            <summary>
            Theme
            </summary>
        </member>
        <member name="M:Hippo.SereisItemConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            ConvertTo
            </summary>
            <param name="context"></param>
            <param name="culture"></param>
            <param name="value"></param>
            <param name="destinationType"></param>
            <returns></returns>
        </member>
        <member name="M:Hippo.PropertyEditorCore.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            GetEditStyle에 표시된 편집기 스타일을 사용하여 지정된 개체의 값을 편집합니다.
            </summary>
            <param name="context"> 추가 컨텍스트 정보를 얻는 데 사용할 수 있는 ITypeDescriptorContext </param>
            <param name="provider"> 이 편집기에서 서비스를 얻는 데 사용할 수 있는 IServiceProvider </param>
            <param name="value"> 편집할 개체 </param>
            <returns> 개체의 새 값 </returns>
        </member>
        <member name="M:Hippo.PropertyEditorCore.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            EditValue 메서드에서 사용하는 편집기 스타일을 가져옵니다 
            </summary>
            <param name="context"> 추가 컨텍스트 정보를 얻는 데 사용할 수 있는 ITypeDescriptorContext </param>
            <returns> 편집기 스타일(Modal, Dropdown, None) </returns>
        </member>
        <member name="T:Hippo.SeriesCollectionEditor">
            <summary>
            SeriesCollectionEditor
            </summary>
        </member>
        <member name="M:Hippo.SeriesCollectionEditor.#ctor(System.Type)">
            <summary>
            SeriesCollectionEditor
            </summary>
            <param name="type"></param>
        </member>
        <member name="M:Hippo.SeriesCollectionEditor.CreateCollectionItemType">
            <summary>
            CreateCollectionItemType
            </summary>
            <returns></returns>
        </member>
        <member name="M:Hippo.SeriesCollectionEditor.CreateNewItemTypes">
            <summary>
            CreateNewItemTypes
            </summary>
            <returns></returns>
        </member>
        <member name="T:Hippo.DataSourceType">
            <summary>
            히포엔진에 사용할 데이터소스 종류
            </summary>
        </member>
        <member name="F:Hippo.DataSourceType.Default">
            <summary>
            기본값(MS SQL)
            </summary>
        </member>
        <member name="F:Hippo.DataSourceType.Access">
            <summary>
            Office Access
            </summary>
        </member>
        <member name="F:Hippo.DataSourceType.Excel">
            <summary>
            Office Excel
            </summary>
        </member>
        <member name="F:Hippo.DataSourceType.Xml">
            <summary>
            Xml
            </summary>
        </member>
        <member name="F:Hippo.DataSourceType.Oracle">
            <summary>
            오라클 
            </summary>
        </member>
        <member name="F:Hippo.DataSourceType.MySql">
            <summary>
            MySql
            </summary>
        </member>
        <member name="T:Hippo.HippoEngine">
            <summary>
            데이터베이스와 히포차트를 연동해주는 데이터 소스 엔진 클래스입니다.
            </summary>
            <remarks>
            MS-SQL, Oracle, MySql와 같은 데이터 베이스와 Access, Excel, xml 을 지원합니다. 
            </remarks>
        </member>
        <member name="M:Hippo.HippoEngine.#ctor">
            <summary>
            HippoEngine 생성자
            </summary>
        </member>
        <member name="M:Hippo.HippoEngine.#ctor(System.String)">
            <summary>
            HippoEngine 생성자
            </summary>
            <param name="connectionString">연결문자열</param>
        </member>
        <member name="M:Hippo.HippoEngine.ExcuteDataTable">
            <summary>
            데이터베이스에 쿼리합니다.
            </summary>
            <returns>결과데이터집합</returns>
        </member>
        <member name="M:Hippo.HippoEngine.ExcuteOracleDataTable">
            <summary>
            데이터베이스에 쿼리합니다.(오라클)
            </summary>
            <returns></returns>
        </member>
        <member name="M:Hippo.HippoEngine.ExcuteMySqlDataTable">
            <summary>
            데이터베이스에 쿼리합니다.(MySql)
            
            System.Data.Odbc
            </summary>
            <returns></returns>
        </member>
        <member name="M:Hippo.HippoEngine.ExcuteExcelDataTable">
            <summary>
            엑셀에 쿼리합니다.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Hippo.HippoEngine.ExcuteAccessDataTable">
            <summary>
            엑세스에 쿼리합니다. 
            </summary>
            <returns></returns>
        </member>
        <member name="M:Hippo.HippoEngine.ExcuteXmlDataTable">
            <summary>
            Xml 데이터를 가져옵니다.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Hippo.HippoEngine.ExcuteQuery(Hippo.DataSourceType)">
            <summary>
            ExcuteQuery 
            </summary>
            <param name="dataType"></param>
            <returns></returns>
        </member>
        <member name="M:Hippo.HippoEngine.GetSeriesList(System.String,System.String[])">
            <summary>
            시리즈 리스트를 구합니다.
            </summary>
            <param name="name">x축을 나타내는 컬럼 이름</param>
            <param name="values">y축을 나타내는 컬럼 이름</param>
            <returns></returns>
        </member>
        <member name="M:Hippo.HippoEngine.GetSeriesList(Hippo.AxisDataType,System.String,System.String[])">
            <summary>
            시리즈 리스트를 구합니다.
            </summary>
            <param name="datatype">x축 데이터 타입</param>
            <param name="name">x축을 나타내는 컬럼 이름</param>
            <param name="values">y축을 나타내는 컬럼 이름</param>
            <returns></returns>
        </member>
        <member name="M:Hippo.HippoEngine.GetSeriesList(System.Boolean,System.String,System.String[])">
            <summary>
            시리즈 리스트를 구합니다.
            </summary>
            <param name="IsShowFigures">수치표시 여부</param>
            <param name="name">x축을 나타내는 컬럼 이름</param>
            <param name="values">y축을 나타내는 컬럼 이름</param>
            <returns></returns>
        </member>
        <member name="M:Hippo.HippoEngine.GetSeriesList(Hippo.AxisDataType,System.Boolean,System.String,System.String[])">
            <summary>
            시리즈 리스트를 구합니다.
            </summary>
            <param name="datatype">x축 데이터 타입</param>
            <param name="IsShowFigures">수치표시 여부</param>
            <param name="name">x축을 나타내는 컬럼 이름</param>
            <param name="values">y축을 나타내는 컬럼 이름</param>
            <returns></returns>
        </member>
        <member name="M:Hippo.HippoEngine.GetSeriesList(Hippo.DataSourceType,System.String,System.String[])">
            <summary>
            시리즈 리스트를 구합니다.
            </summary>
            <param name="dataType">데이터 소스 타입</param>
            <param name="name">x축을 나타내는 컬럼 이름</param>
            <param name="values">y축을 나타내는 컬럼 이름</param>
            <returns></returns>
        </member>
        <member name="M:Hippo.HippoEngine.GetSeriesList(Hippo.DataSourceType,System.Boolean,System.String,System.String[])">
            <summary>
            시리즈 리스트를 구합니다.
            </summary>
            <param name="dataType">데이터 소스 타입</param>
            <param name="IsShowFigures">수치표시 여부</param>
            <param name="name">x축을 나타내는 컬럼 이름</param>
            <param name="values">y축을 나타내는 컬럼 이름</param>
            <returns></returns>
        </member>
        <member name="M:Hippo.HippoEngine.GetSeriesList(System.Data.DataTable,System.String,System.String[])">
            <summary>
            시리즈 리스트를 구합니다. (main) 
            </summary>
            <remarks>기본형 메소드로 가장 권장되는 메소드. 실제 데이터를 DataTable 형식으로 구성한 후에 히포엔진으로 넘기는 방식입니다. </remarks>
            <param name="source">데이터소스</param>
            <param name="name">이름 컬럼</param>
            <param name="values">값 컬럼들</param>
            <returns></returns>
        </member>
        <member name="M:Hippo.HippoEngine.GetSeriesList(System.Data.DataTable,Hippo.AxisDataType,System.String,System.String[])">
            <summary>
            시리즈 리스트를 구합니다. (x축 데이터타입을 지정할 수 있는 방식입니다)
            </summary>
            <param name="source">데이터소스</param>
            <param name="datatype">x축 데이터 타입</param>
            <param name="name">x축 컬럼</param>
            <param name="values">y축 컬럼들</param>
            <returns></returns>
        </member>
        <member name="M:Hippo.HippoEngine.GetSeriesList(System.Data.DataTable,System.Boolean,System.String,System.String[])">
            <summary>
            시리즈 리스트를 구합니다.  (수치 표현 여부를 설정할 수 있는 방식입니다)
            </summary>
            <param name="source">데이터소스</param>
            <param name="IsShowFigures">수치표시 여부</param>
            <param name="name">이름 컬럼</param>
            <param name="values">값 컬럼들</param>
            <returns></returns>
        </member>
        <member name="M:Hippo.HippoEngine.GetSeriesList(System.Data.DataTable,System.Boolean,Hippo.AxisDataType,System.String,System.String[])">
            <summary>
            시리즈 리스트를 구합니다. (수치표현, 데이터타입을 모두 설정할 수 있는 방식입니다)
            </summary>
            <param name="source">데이터소스</param>
            <param name="IsShowFigures">수치표시 여부</param>
            <param name="datatype">x축 데이터 타입</param>
            <param name="name">이름 컬럼</param>
            <param name="values">값 컬럼들</param>
            <returns></returns>
        </member>
        <member name="M:Hippo.HippoEngine.GetSeriesList(System.String[])">
            <summary>
            시리즈 리스트를 구합니다. (값 배열 만으로 간단한 시리즈리스트를 구성합니다)
            </summary>
            <param name="values">y축 이름 리스트</param>
            <returns></returns>
        </member>
        <member name="M:Hippo.HippoEngine.GetSeriesList(System.String[],System.Boolean)">
            <summary>
            시리즈 리스트를 구합니다.
            </summary>
            <param name="IsShowFigures">수치표시 여부</param>
            <param name="values">y축 이름 리스트</param>
            <returns></returns>
        </member>
        <member name="M:Hippo.HippoEngine.GetSeriesList(System.String[],System.String[])">
            <summary>
            시리즈 리스트를 구합니다. (이름 배열, 값 배열을 통해 시리즈리스트를 구성합니다)
            </summary>
            <param name="names">x축 이름 리스트</param>
            <param name="values">y축 이름 리스트</param>
            <returns></returns>
        </member>
        <member name="M:Hippo.HippoEngine.GetSeriesList(System.Double[],System.Double[])">
            <summary>
            시리즈 리스트를 구합니다. (x축이 숫자형일 경우에 이름배열, 값 배열로 구성합니다)
            </summary>
            <param name="xvalues"></param>
            <param name="yvalues"></param>
            <returns></returns>
        </member>
        <member name="M:Hippo.HippoEngine.GetSeriesList(System.String[],System.String[],System.Boolean)">
            <summary>
            시리즈 리스트를 구합니다.
            </summary>
            <param name="names">x축 이름 리스트</param>
            <param name="values">y축 이름 리스트</param>
            <param name="IsShowFigures">수치표시 여부</param>
            <returns></returns>
        </member>
        <member name="M:Hippo.HippoEngine.GetSeriesListOfGantt(Hippo.AxisDataType,System.String,System.String[])">
            <summary>
            시리즈 리스트를 구합니다.(간트차트)
            </summary> 
            <param name="dataFormat">데이터 포맷(숫자, 날짜)</param>
            <param name="name">x축을 나타내는 컬럼 이름</param>
            <param name="values">y축을 나타내는 컬럼 이름</param>
            <returns></returns>
        </member>
        <member name="M:Hippo.HippoEngine.GetSeriesListOfGantt(Hippo.DataSourceType,Hippo.AxisDataType,System.String,System.String[])">
            <summary>
            시리즈 리스트를 구합니다.(간트차트)
            </summary>
            <param name="dataType">데이터 소스 타입</param>
            <param name="dataFormat">데이터 포맷(숫자, 날짜)</param>
            <param name="name">x축을 나타내는 컬럼 이름</param>
            <param name="values">y축을 나타내는 컬럼 이름</param>
            <returns></returns>
        </member>
        <member name="M:Hippo.HippoEngine.GetSeriesListOfGantt(System.Data.DataTable,Hippo.AxisDataType,System.String,System.String[])">
            <summary>
            시리즈 리스트를 구합니다.(간트차트)
            </summary>
            <param name="source">데이터 소스</param> 
            <param name="dataFormat">간트 데이터 타입(숫자형식, 날짜형식)</param>
            <param name="name">이름 항목들</param>
            <param name="values">값 항목들(2개씩 짝수로 넘겨야되며, 홀수 인덱스 값이 시작기준이고 짝수 인덱스 값이 종료기준입니다.)</param>
            <returns></returns>
        </member>
        <member name="M:Hippo.HippoEngine.GetSeriesListOfGantt(System.Data.DataTable,System.Boolean,Hippo.AxisDataType,System.String,System.String[])">
            <summary>
            시리즈 리스트를 구합니다.(간트차트)
            </summary>
            <param name="source">데이터 소스</param>
            <param name="IsShowFigures">수치표시 여부</param>
            <param name="dataFormat">간트 데이터 타입(숫자형식, 날짜형식)</param>
            <param name="name">이름 항목들</param>
            <param name="values">값 항목들(2개씩 짝수로 넘겨야되며, 홀수 인덱스 값이 시작기준이고 짝수 인덱스 값이 종료기준입니다.)</param>
            <returns></returns>
        </member>
        <member name="M:Hippo.HippoEngine.GetSeriesListOfStock(Hippo.DataSourceType,System.String,System.String[])">
            <summary>
            주식차트 시리즈 리스트를 구합니다. (values 파라미터 넘기는 순서는 시가, 종가, 저가, 고가 순입니다. )
            </summary>
            <param name="dataType"></param>
            <param name="name"></param>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:Hippo.HippoEngine.GetSeriesListOfStock(Hippo.DataSourceType,System.Boolean,System.String,System.String[])">
            <summary>
            주식차트 시리즈 리스트를 구합니다. (values 파라미터 넘기는 순서는 시가, 종가, 저가, 고가 순입니다. )
            </summary>
            <param name="dataType"></param>
            <param name="isDateTime">X축이 날짜형인가 여부</param>
            <param name="name"></param>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:Hippo.HippoEngine.GetSeriesListOfStock(System.Data.DataTable,System.String,System.String[])">
            <summary>
            주식차트 시리즈 리스트를 구합니다. (values 파라미터 넘기는 순서는 시가, 종가, 저가, 고가 순입니다. )
            </summary>
            <param name="source"></param>
            <param name="name"></param>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:Hippo.HippoEngine.GetSeriesListOfStock(System.Data.DataTable,System.Boolean,System.String,System.String[])">
            <summary>
            주식차트 시리즈 리스트를 구합니다. (values 파라미터 넘기는 순서는 시가, 종가, 저가, 고가 순입니다. )
            2015.4.20 일 추가됨
            </summary>
            <param name="source"></param>
            <param name="isDateTime">X축이 날짜형인가 여부</param>
            <param name="name"></param>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:Hippo.HippoEngine.GetSeriesListOfBoxPlot(Hippo.DataSourceType,System.String,System.String)">
            <summary>
            GetSeriesListOfBoxPlot
            </summary>
            <param name="dataType"></param>
            <param name="groupName"></param>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:Hippo.HippoEngine.GetSeriesListOfBoxPlot(System.Data.DataTable,System.String,System.String)">
            <summary>
            GetSeriesListOfBoxPlot
            </summary>
            <param name="source"></param>
            <param name="groupName"></param>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:Hippo.HippoEngine.GetSeriesListOfVector(Hippo.DataSourceType,System.String,System.String,System.String,System.String)">
            <summary>
            GetSeriesListOfVector
            </summary>
            <param name="dataType"></param>
            <param name="name"></param>
            <param name="forceColumn"></param>
            <param name="directionColumn"></param>
            <returns></returns>
        </member>
        <member name="M:Hippo.HippoEngine.GetSeriesListOfVector(System.Data.DataTable,System.String,System.String,System.String,System.String)">
            <summary>
            GetSeriesListOfVector
            </summary>
            <param name="source"></param>
            <param name="name"></param>
            <param name="forceColumn"></param>
            <param name="directionColumn"></param>
            <returns></returns>
        </member>
        <member name="P:Hippo.HippoEngine.ConnectionString">
            <summary>
            연결 문자열을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.HippoEngine.Query">
            <summary>
            쿼리 문자열을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.HippoEngine.DataType">
            <summary>
            데이터소스 타입을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.HippoEngine.XmlPath">
            <summary>
            Xml 파일의 경로를 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.HippoEngine.ErrorMessage">
            <summary>
            에러 메세지
            </summary>
        </member>
        <member name="M:Hippo.BallonoDrawer.#ctor(Hippo.Balloon)">
            <summary>
            풍선 도움말 인스턴스를 생성합니다.
            </summary>
            <param name="balloon"></param>
        </member>
        <member name="M:Hippo.BallonoDrawer.DrawBalloon(System.Drawing.Graphics)">
            <summary>
            풍선 도움말을 그립니다.
            </summary>
            <param name="graphic"></param>
            <returns></returns>
        </member>
        <member name="T:Hippo.LegendBoxDrawer">
            <summary>
            범례 그리는 클래스
            </summary>
        </member>
        <member name="M:Hippo.LegendBoxDrawer.#ctor">
            <summary>
            LegendBoxDrawer 인스턴스를 생성합니다.
            </summary>
        </member>
        <member name="M:Hippo.LegendBoxDrawer.DrawHeader(System.Drawing.RectangleF)">
            <summary>
            범례 헤더를 그립니다.
            </summary>
            <param name="HeaderRectangle"></param>
        </member>
        <member name="M:Hippo.LegendBoxDrawer.DrawLegendBox(System.Drawing.Graphics,Hippo.LegendBox,System.Drawing.PointF,Hippo.PaletteType[])">
            <summary>
            범례를 그립니다.
            </summary>
            <param name="graphic">원본 그래픽 객체</param>
            <param name="legendbox">범례 설정 객체</param>
            <param name="StartPoints">범례의 시작 포인트</param>
            <param name="paletteType">팔레트 타입</param>
        </member>
        <member name="M:Hippo.LegendBoxDrawer.DrawLegendBoxItem(Hippo.LegendBoxItem,System.Boolean,Hippo.PaletteType)">
            <summary>
            DrawLegendBoxItem
            </summary>
            <param name="boxitem"></param>
            <param name="IsDivideLine"></param>
            <param name="paletteTYPE"></param>
        </member>
        <member name="M:Hippo.LegendBoxDrawer.DrawLegendItem(Hippo.LegendRow,Hippo.PaletteType)">
            <summary>
            DrawLegendItem
            </summary>
            <param name="row"></param>
            <param name="paletteType"></param>
        </member>
        <member name="M:Hippo.LegendBoxDrawer.DrawIcon(Hippo.LegendItem,System.Drawing.RectangleF)">
            <summary>
            DrawIcon
            </summary>
            <param name="item"></param>
            <param name="REgend1"></param>
        </member>
        <member name="M:Hippo.LegendBoxDrawer.DrawPoint(Hippo.Points,System.Drawing.RectangleF)">
            <summary>
            라인류의 차트의 포인트를 그립니다.
            </summary>
            <param name="pointsobj"></param>
            <param name="PointREc"></param>
        </member>
        <member name="M:Hippo.LegendBoxDrawer.Dispose">
            <summary>
            Dispose
            </summary>
        </member>
        <member name="T:Hippo.ChartType">
            <summary>
            차트의 종류
            </summary>
            <remarks>히포차트에서 지원하는 차트타입을 나타내는 열거형</remarks>
        </member>
        <member name="F:Hippo.ChartType.Line">
            <summary>
            라인차트
            </summary>
        </member>
        <member name="F:Hippo.ChartType.Spline">
            <summary>
            스플라인차트
            </summary>
        </member>
        <member name="F:Hippo.ChartType.Column">
            <summary>
            컬럼 차트
            </summary>
        </member>
        <member name="F:Hippo.ChartType.ImageBar">
            <summary>
            이미지 바 차트 - 특정 이미지를 막대 차트와 같은 형식으로 작성합니다. 
            </summary>
        </member>
        <member name="F:Hippo.ChartType.Pie">
            <summary>
            파이차트
            </summary>
        </member>
        <member name="F:Hippo.ChartType.Bar">
            <summary>
            바차트
            </summary>
        </member>
        <member name="F:Hippo.ChartType.Gantt">
            <summary>
            간트차트
            </summary>
        </member>
        <member name="F:Hippo.ChartType.Circular">
            <summary>
            원기둥차트
            </summary>
        </member>
        <member name="F:Hippo.ChartType.Cone">
            <summary>
            콘 차트
            </summary>
        </member>
        <member name="F:Hippo.ChartType.PylamidColumn">
            <summary>
            피라미드형 컬럼 차트
            </summary>
        </member>
        <member name="F:Hippo.ChartType.Radar">
            <summary>
            레이더차트 방사형차트
            </summary> 
        </member>
        <member name="F:Hippo.ChartType.Stepline">
            <summary>
            스텝라인 차트
            </summary>
        </member>
        <member name="F:Hippo.ChartType.Pylamid">
            <summary>
            피라미드차트
            </summary>
        </member>
        <member name="F:Hippo.ChartType.Scatter">
            <summary>
            스케터 플롯차트 (분산형차트)
            </summary>
        </member>
        <member name="F:Hippo.ChartType.Doughnut">
            <summary>
            도우넛 차트
            </summary>
        </member>
        <member name="F:Hippo.ChartType.Gauge">
            <summary>
            게이지 차트
            </summary>
        </member>
        <member name="F:Hippo.ChartType.Gauge2">
            <summary>
            계기판형 차트
            </summary>
        </member>
        <member name="F:Hippo.ChartType.CandleStick">
            <summary>
            주식 차트 (캔들차트)
            </summary>
        </member>
        <member name="F:Hippo.ChartType.StackedColumn">
            <summary>
            스택형 컬럼 차트
            </summary>
        </member>
        <member name="F:Hippo.ChartType.StackedCircular">
            <summary>
            스택형 원기둥 차트
            </summary>
        </member>
        <member name="F:Hippo.ChartType.StackedLine">
            <summary>
            스택형 라인 차트
            </summary>
        </member>
        <member name="F:Hippo.ChartType.StackedSpline">
            <summary>
            스택형 스플라인 차트
            </summary>
        </member>
        <member name="F:Hippo.ChartType.StackedBar">
            <summary>
            스택형 바 차트
            </summary>
        </member>
        <member name="F:Hippo.ChartType.ErrorBar">
            <summary>
            에러바 차트
            </summary>
        </member>
        <member name="F:Hippo.ChartType.BarLine">
            <summary>
            가로 라인 차트 (일반 라인 차트에서 x, y축이 역전된 모양의 차트)
            </summary>
        </member>
        <member name="F:Hippo.ChartType.Funnel">
            <summary>
            Funnel 차트
            </summary>
        </member>
        <member name="F:Hippo.ChartType.Surface">
            <summary>
            Surface 차트 (4.3 에서 지원하지 않습니다)
            </summary>
        </member>
        <member name="F:Hippo.ChartType.AreaLine">
            <summary>
            영역형 차트
            </summary>
        </member>
        <member name="F:Hippo.ChartType.BoxPlot">
            <summary>
            박스플롯 차트
            </summary>
        </member>
        <member name="F:Hippo.ChartType.Vector">
            <summary>
            벡터 차트 (커스터마이징 차트)
            </summary>
        </member>
        <member name="F:Hippo.ChartType.ColorMap">
            <summary>
            Color Map (커스터마이징 차트)
            </summary>
        </member>
        <member name="F:Hippo.ChartType.Contour">
            <summary>
            Contour (커스터마이징 차트)
            </summary>
        </member>
        <member name="F:Hippo.ChartType.Organization">
            <summary>
            Organization (커스터마이징 차트)
            </summary>
        </member>
        <member name="F:Hippo.ChartType.None">
            <summary>
            None - 그래프를 그리지 않습니다. 코드 작성 시 비교, 널 체크 등에만 활용됩니다. 
            </summary>
        </member>
        <member name="T:Hippo.PaletteType">
            <summary>
            팔레트 타입
            </summary>
            <remarks>히포차트에서 지정하는 다양한 색상 팔레트 세트를 제공합니다. </remarks>
        </member>
        <member name="F:Hippo.PaletteType.Default">
            <summary>
            기본 팔레트 셋
            </summary>
        </member>
        <member name="F:Hippo.PaletteType.Sky">
            <summary>
            Sky형 팔레트 셋
            </summary>
        </member>
        <member name="F:Hippo.PaletteType.Soft">
            <summary>
            Soft형 팔레트 셋
            </summary>
        </member>
        <member name="F:Hippo.PaletteType.Classic">
            <summary>
            Classic형 팔레트 셋
            </summary>
        </member>
        <member name="F:Hippo.PaletteType.Sky2">
            <summary>
            Sky2형 팔레트 셋
            </summary>
        </member>
        <member name="F:Hippo.PaletteType.Shadow">
            <summary>
            Default2형 팔레트 셋
            </summary>
        </member>
        <member name="F:Hippo.PaletteType.Cool">
            <summary>
            Cool형 팔레트 셋
            </summary>
        </member>
        <member name="F:Hippo.PaletteType.Bright">
            <summary>
            Bright형 팔레트 셋
            </summary>
        </member>
        <member name="F:Hippo.PaletteType.Dark">
            <summary>
            Dark형 팔레트 셋
            </summary>
        </member>
        <member name="F:Hippo.PaletteType.Green">
            <summary>
            Green형 팔레트 셋
            </summary>
        </member>
        <member name="F:Hippo.PaletteType.Lover">
            <summary>
            Lover형 팔레트 셋
            </summary>
        </member>
        <member name="F:Hippo.PaletteType.Nature">
            <summary>
            Nature형 팔레트 셋
            </summary>
        </member>
        <member name="F:Hippo.PaletteType.None">
            <summary>
            None
            </summary>
        </member>
        <member name="T:Hippo.CoordinateType">
            <summary>
            좌표 성질 타입
            </summary>
        </member>
        <member name="F:Hippo.CoordinateType.Coordinate">
            <summary>
            좌표 성질의 타입
            </summary>
        </member>
        <member name="F:Hippo.CoordinateType.UnCoordinate">
            <summary>
            좌표 성질이 없는 타입
            </summary>
        </member>
        <member name="F:Hippo.CoordinateType.Coordinate3D">
            <summary>
            3D 좌표 성질의 타입
            </summary>
        </member>
        <member name="T:Hippo.CoordinativeDirection">
            <summary>
            그래프의 축의 방향
            </summary>
            <remarks>컬럼 차트류는 Vertical, 바 차트류 Horizontal</remarks>
        </member>
        <member name="F:Hippo.CoordinativeDirection.Vertical">
            <summary>
            다른 일반적인 세로 방향의 축을 나타냄
            </summary> 
        </member>
        <member name="F:Hippo.CoordinativeDirection.Horizontal">
            <summary>
            가로 방향의 축을 나타냄(바 차트)
            </summary>
        </member>
        <member name="F:Hippo.CoordinativeDirection.None">
            <summary>
            좌표 축이 없음
            </summary>
        </member>
        <member name="T:Hippo.AnalysisCategory">
            <summary>
            통계분석 표시할 항목
            </summary>
        </member>
        <member name="F:Hippo.AnalysisCategory.Max">
            <summary>
            최대값
            </summary>
            <remarks>최대값</remarks>
        </member>
        <member name="F:Hippo.AnalysisCategory.Min">
            <summary>
            최소값
            </summary>
            <remarks>최소값</remarks>
        </member>
        <member name="F:Hippo.AnalysisCategory.Average">
            <summary>
            평균
            </summary>
        </member>
        <member name="F:Hippo.AnalysisCategory.Sum">
            <summary>
            총합계
            </summary>
        </member>
        <member name="F:Hippo.AnalysisCategory.Variance">
            <summary>
            분산
            </summary>
        </member>
        <member name="F:Hippo.AnalysisCategory.StandardDeviation">
            <summary>
            표준편차
            </summary>
        </member>
        <member name="F:Hippo.AnalysisCategory.StandardError">
            <summary>
            표준오차
            </summary>
        </member>
        <member name="F:Hippo.AnalysisCategory.Median">
            <summary>
            중앙값
            </summary>
        </member>
        <member name="T:Hippo.ErrorBarType">
            <summary>
            에러바차트 종류
            </summary>
        </member>
        <member name="F:Hippo.ErrorBarType.StandardError">
            <summary>
            표준오차
            </summary>
        </member>
        <member name="F:Hippo.ErrorBarType.StandardDeviation">
            <summary>
            표준편차
            </summary>
        </member>
        <member name="F:Hippo.ErrorBarType.Percentage">
            <summary>
            백분율
            </summary>
        </member>
        <member name="T:Hippo.ColumnRangeType">
            <summary>
            컬럼 차트의 Range 타입
            </summary>
        </member>
        <member name="F:Hippo.ColumnRangeType.Default">
            <summary>
            기본형 컬럼
            </summary>
        </member>
        <member name="F:Hippo.ColumnRangeType.Range">
            <summary>
            Range 타입의 컬럼
            </summary>
        </member>
        <member name="T:Hippo.KagiType">
            <summary>
            KagiType 
            </summary>
        </member>
        <member name="F:Hippo.KagiType.Default">
            <summary>
            일반 단계차트타입(기본값)
            </summary>
        </member>
        <member name="F:Hippo.KagiType.Kagi">
            <summary>
            카기 타입
            </summary>
        </member>
        <member name="T:Hippo.GraphColorType">
            <summary>
            그래프 그리는 색상 타입
            </summary>
        </member>
        <member name="F:Hippo.GraphColorType.Default">
            <summary>
            기본색 타입
            </summary>
        </member>
        <member name="F:Hippo.GraphColorType.Shadow">
            <summary>
            그림자색 타입
            </summary>
        </member>
        <member name="F:Hippo.GraphColorType.OutLine">
            <summary>
            외곽라인색 타입
            </summary>
        </member>
        <member name="T:Hippo.PointType">
            <summary>
            포인트 모양
            </summary>
        </member>
        <member name="F:Hippo.PointType.None">
            <summary>
            포인트 없음
            </summary>
        </member>
        <member name="F:Hippo.PointType.Circle">
            <summary>
            원
            </summary>
        </member>
        <member name="F:Hippo.PointType.Rectangle">
            <summary>
            사각형
            </summary>
        </member>
        <member name="F:Hippo.PointType.Triangle">
            <summary>
            삼각형
            </summary>
        </member>
        <member name="F:Hippo.PointType.Star">
            <summary>
            별모양
            </summary>
        </member>
        <member name="F:Hippo.PointType.Image">
            <summary>
            이미지
            </summary>
        </member>
        <member name="F:Hippo.PointType.FillCircle">
            <summary>
            원
            </summary>
        </member>
        <member name="F:Hippo.PointType.FillRectangle">
            <summary>
            사각형
            </summary>
        </member>
        <member name="F:Hippo.PointType.FillTriangle">
            <summary>
            삼각형
            </summary>
        </member>
        <member name="F:Hippo.PointType.String">
            <summary>
            문자열 포인트
            </summary>
        </member>
        <member name="T:Hippo.PieType">
            <summary>
            PieType
            </summary>
        </member>
        <member name="F:Hippo.PieType.Normal">
            <summary>
            일반 형태
            </summary>
        </member>
        <member name="F:Hippo.PieType.TwoDemention">
            <summary>
            2D 형태
            </summary>
        </member>
        <member name="F:Hippo.PieType.Slice">
            <summary>
            각 파이가 쪼개진 형태
            </summary>
        </member>
        <member name="T:Hippo.AxisDisplayItemType">
            <summary>
            좌표 차트 수치표시시 표시되는 내용
            </summary>
        </member>
        <member name="F:Hippo.AxisDisplayItemType.Figure">
            <summary>
            수치
            </summary>
        </member>
        <member name="F:Hippo.AxisDisplayItemType.Name">
            <summary>
            이름
            </summary>
        </member>
        <member name="F:Hippo.AxisDisplayItemType.Figure_Name">
            <summary>
            수치(이름)
            </summary>
        </member>
        <member name="T:Hippo.UnAxisFigureTextLocation">
            <summary>
            비좌표 차트의 수치 텍스트가 그려지는 영역을 나타냄
            </summary>
        </member>
        <member name="F:Hippo.UnAxisFigureTextLocation.Auto">
            <summary>
            자동으로 계산해서 표시
            </summary>
        </member>
        <member name="F:Hippo.UnAxisFigureTextLocation.Inner">
            <summary>
            그래프 안쪽에 표시
            </summary>
        </member>
        <member name="F:Hippo.UnAxisFigureTextLocation.Outer">
            <summary>
            그래프 바깥으로 라인과 연결해서 표시
            </summary>
        </member>
        <member name="F:Hippo.UnAxisFigureTextLocation.Outer2">
            <summary>
            그래프 바깥으로 라인과 연결해서 지그재그로 표시
            </summary>
        </member>
        <member name="T:Hippo.UnAxisDisplayItemType">
            <summary>
            파이 등 비좌표 차트에 표시할 내용
            </summary>
        </member>
        <member name="F:Hippo.UnAxisDisplayItemType.Percent">
            <summary>
            퍼센트
            </summary>
        </member>
        <member name="F:Hippo.UnAxisDisplayItemType.Figure">
            <summary>
            수치
            </summary>
        </member>
        <member name="F:Hippo.UnAxisDisplayItemType.Name">
            <summary>
            이름
            </summary>
        </member>
        <member name="F:Hippo.UnAxisDisplayItemType.Angle">
            <summary>
            각도
            </summary>
        </member>
        <member name="F:Hippo.UnAxisDisplayItemType.Figure_Percent">
            <summary>
            수치(퍼센트)
            </summary>
        </member>
        <member name="F:Hippo.UnAxisDisplayItemType.Percent_Name">
            <summary>
            퍼센트(이름)
            </summary>
        </member>
        <member name="F:Hippo.UnAxisDisplayItemType.Figure_Name">
            <summary>
            수치(이름)
            </summary>
        </member>
        <member name="F:Hippo.UnAxisDisplayItemType.Angle_Name">
            <summary>
            각도(이름)ㄴ
            </summary>
        </member>
        <member name="T:Hippo.AxisDataType">
            <summary>
            좌표의 데이터 타입
            </summary>
        </member>
        <member name="F:Hippo.AxisDataType.Number">
            <summary>
            숫자 타입(Y축 기본값)
            </summary>
        </member>
        <member name="F:Hippo.AxisDataType.DateTime">
            <summary>
            날짜 타입
            </summary>
        </member>
        <member name="F:Hippo.AxisDataType.String">
            <summary>
            문자열 타입(X축 기본값)
            </summary>
        </member>
        <member name="T:Hippo.ChartDesignType">
            <summary>
            차트 디자인 타입(차트의 배경 디자인)
            </summary>
        </member>
        <member name="F:Hippo.ChartDesignType.Main">
            <summary>
            히포차트 4 메인 디자인타입
            </summary>
        </member>
        <member name="F:Hippo.ChartDesignType.Flat">
            <summary>
            배경에서 도화지 부분을 뺀 타입
            </summary>
        </member>
        <member name="F:Hippo.ChartDesignType.Simple">
            <summary>
            배경디자인을 최소화한 심플한 형태
            </summary>
        </member>
        <member name="F:Hippo.ChartDesignType.Simple2">
            <summary>
            배경디자인을 최소화한 심플한 형태 얇은 라인
            </summary>
        </member>
        <member name="F:Hippo.ChartDesignType.None">
            <summary>
            어떤 배경 디자인도 없는 타입
            </summary>
        </member>
        <member name="T:Hippo.StackType">
            <summary>
            스택차트 타입 
            </summary>
        </member>
        <member name="F:Hippo.StackType.None">
            <summary>
            기본값(일반형)
            </summary>
        </member>
        <member name="F:Hippo.StackType.Stacked">
            <summary>
            스택형
            </summary>
        </member>
        <member name="F:Hippo.StackType.FullStacked">
            <summary>
            100% 스택형
            </summary>
        </member>
        <member name="T:Hippo.AreaType">
            <summary>
            영역 차트 타입
            </summary>
        </member>
        <member name="F:Hippo.AreaType.None">
            <summary>
            기본값(일반형)
            </summary>
        </member>
        <member name="F:Hippo.AreaType.LineArea">
            <summary>
            라인 영역형
            </summary>
        </member>
        <member name="F:Hippo.AreaType.CurvedArea">
            <summary>
            스플라인 영역형
            </summary>
        </member>
        <member name="T:Hippo.GraphAreaLocation">
            <summary>
            그래프 영역이 2개 이상일때 나누어지는 방향
            </summary>
        </member>
        <member name="F:Hippo.GraphAreaLocation.Vertical">
            <summary>
            수직으로 표시
            </summary>
        </member>
        <member name="F:Hippo.GraphAreaLocation.Horizontal">
            <summary>
            수평으로 표시
            </summary>
        </member>
        <member name="T:Hippo.AxisDirection">
            <summary>
            축의 방향
            </summary>
        </member>
        <member name="F:Hippo.AxisDirection.Left">
            <summary>
            왼쪽
            </summary>
        </member>
        <member name="F:Hippo.AxisDirection.Right">
            <summary>
            오른쪽 
            </summary>
        </member>
        <member name="F:Hippo.AxisDirection.Top">
            <summary>
            위
            </summary>
        </member>
        <member name="F:Hippo.AxisDirection.Bottom">
            <summary>
            아래
            </summary>
        </member>
        <member name="F:Hippo.AxisDirection.None">
            <summary>
            해당사항 없음
            </summary>
        </member>
        <member name="T:Hippo.AxisOrientation">
            <summary>
            축의 8방향 (4.3 버전 이후로 사용되지 않음)
            </summary>
        </member>
        <member name="F:Hippo.AxisOrientation.None">
            <summary>
            None
            </summary>
        </member>
        <member name="F:Hippo.AxisOrientation.BottomLeft">
            <summary>
            BottomLeft
            </summary>
        </member>
        <member name="F:Hippo.AxisOrientation.TopLeft">
            <summary>
            TopLeft
            </summary>
        </member>
        <member name="F:Hippo.AxisOrientation.BottomRight">
            <summary>
            BottomRight
            </summary>
        </member>
        <member name="F:Hippo.AxisOrientation.TopRight">
            <summary>
            TopRight
            </summary>
        </member>
        <member name="F:Hippo.AxisOrientation.LeftTop">
            <summary>
            LeftTop
            </summary>
        </member>
        <member name="F:Hippo.AxisOrientation.LeftBottom">
            <summary>
            LeftBottom
            </summary>
        </member>
        <member name="F:Hippo.AxisOrientation.RightTop">
            <summary>
            RightTop
            </summary>
        </member>
        <member name="F:Hippo.AxisOrientation.RightBottom">
            <summary>
            RightBottom
            </summary>
        </member>
        <member name="T:Hippo.AxisType">
            <summary>
            축의 종류
            </summary>
        </member>
        <member name="F:Hippo.AxisType.Xtype">
            <summary>
            x축 타입
            </summary>
        </member>
        <member name="F:Hippo.AxisType.Ytype">
            <summary>
            y축 타입
            </summary>
        </member>
        <member name="T:Hippo.ColumnWidthType">
            <summary>
            컬럼의 굵기 타입
            </summary>
        </member>
        <member name="F:Hippo.ColumnWidthType.Default">
            <summary>
            기본형
            </summary>
        </member>
        <member name="F:Hippo.ColumnWidthType.Dynamic">
            <summary>
            동적 변화형
            </summary>
        </member>
        <member name="F:Hippo.ColumnWidthType.Tight">
            <summary>
            꽉찬형
            </summary>
        </member>
        <member name="F:Hippo.ColumnWidthType.Custom">
            <summary>
            사용자 지정
            </summary>
        </member>
        <member name="T:Hippo.AreaDesignType">
            <summary>
            면적 디자인 타입
            </summary>
        </member>
        <member name="F:Hippo.AreaDesignType.Default">
            <summary>
            기본형
            </summary>
        </member>
        <member name="F:Hippo.AreaDesignType.Gradation">
            <summary>
            그라데이션
            </summary>
        </member>
        <member name="F:Hippo.AreaDesignType.Dark">
            <summary>
            짙은 색상
            </summary>
        </member>
        <member name="F:Hippo.AreaDesignType.Shadow">
            <summary>
            그림자효과
            </summary>
        </member>
        <member name="T:Hippo.GridDirection">
            <summary>
            좌표 그리드 방향
            </summary>
        </member>
        <member name="F:Hippo.GridDirection.Both">
            <summary>
            양쪽(기본값)
            </summary>
        </member>
        <member name="F:Hippo.GridDirection.Horizontal">
            <summary>
            가로방향
            </summary>
        </member>
        <member name="F:Hippo.GridDirection.Vertical">
            <summary>
            세로방향
            </summary>
        </member>
        <member name="F:Hippo.GridDirection.None">
            <summary>
            그리드 없음
            </summary>
        </member>
        <member name="T:Hippo.FigureFormat">
            <summary>
            숫자 포맷
            </summary>
        </member>
        <member name="F:Hippo.FigureFormat.None">
            <summary>
            없음
            </summary>
        </member>
        <member name="F:Hippo.FigureFormat.Number">
            <summary>
            숫자형태
            </summary>
        </member>
        <member name="F:Hippo.FigureFormat.Percent">
            <summary>
            퍼센트형태
            </summary>
        </member>
        <member name="F:Hippo.FigureFormat.Currency">
            <summary>
            통화형태
            </summary>
        </member>
        <member name="F:Hippo.FigureFormat.FixedPoint">
            <summary>
            소수점형태
            </summary>
        </member>
        <member name="F:Hippo.FigureFormat.Exponential">
            <summary>
            지수형태
            </summary>
        </member>
        <member name="F:Hippo.FigureFormat.Custom">
            <summary>
            사용자지정
            </summary>
        </member>
        <member name="T:Hippo.HeightType">
            <summary>
            높낮이
            </summary>
        </member>
        <member name="F:Hippo.HeightType.Top">
            <summary>
            위
            </summary>
        </member>
        <member name="F:Hippo.HeightType.Center">
            <summary>
            가운데
            </summary>
        </member>
        <member name="F:Hippo.HeightType.Bottom">
            <summary>
            아래
            </summary>
        </member>
        <member name="T:Hippo.FigureTextLocation">
            <summary>
            좌표형 차트의 수치 표시 위치
            </summary>
        </member>
        <member name="F:Hippo.FigureTextLocation.Default">
            <summary>
            기본값
            </summary>
        </member>
        <member name="F:Hippo.FigureTextLocation.Top">
            <summary>
            기본값 보다 위
            </summary>
        </member>
        <member name="F:Hippo.FigureTextLocation.Bottom">
            <summary>
            기본값 보다 아래
            </summary>
        </member>
        <member name="F:Hippo.FigureTextLocation.Left">
            <summary>
            기본값 보다 왼쪽
            </summary>
        </member>
        <member name="F:Hippo.FigureTextLocation.Right">
            <summary>
            기본값 보다 오른쪽
            </summary>
        </member>
        <member name="F:Hippo.FigureTextLocation.Center">
            <summary>
            컬럼류 차트일 경우 면적의 한 가운데
            </summary>
        </member>
        <member name="T:Hippo.LineNullType">
            <summary>
            라인류 차트의 데이터가 널일 경우 표시하는 종류
            </summary>
        </member>
        <member name="F:Hippo.LineNullType.Default">
            <summary>
            아무것도 표시하지 않음
            </summary>
        </member>
        <member name="F:Hippo.LineNullType.Dash">
            <summary>
            데쉬선 형태
            </summary>
        </member>
        <member name="F:Hippo.LineNullType.Dot">
            <summary>
            점선 형태
            </summary>
        </member>
        <member name="F:Hippo.LineNullType.DashDot">
            <summary>
            점선과 데쉬형의 조합
            </summary>
        </member>
        <member name="T:Hippo.ScaleBreakType">
            <summary>
            스케일 브레이크의 모양
            </summary>
        </member>
        <member name="F:Hippo.ScaleBreakType.Wave">
            <summary>
            물결 모양
            </summary>
        </member>
        <member name="F:Hippo.ScaleBreakType.Line">
            <summary>
            라인 모양
            </summary>
        </member>
        <member name="F:Hippo.ScaleBreakType.WaveLine">
            <summary>
            뾰족한 라인 모양
            </summary>
        </member>
        <member name="T:Hippo.DateTimeLabelType">
            <summary>
            날짜형 축의 라벨리스트를 기간으로 정의. 히포차트 4.3 버전에서 추가된 열거형입니다.
            </summary>
        </member>
        <member name="F:Hippo.DateTimeLabelType.None">
            <summary>
            (기본 축 계산 법을 따릅니다)
            </summary>
        </member>
        <member name="F:Hippo.DateTimeLabelType.Day">
            <summary>
            일
            </summary>
        </member>
        <member name="F:Hippo.DateTimeLabelType.Week">
            <summary>
            주 (기간)
            </summary>
        </member>
        <member name="F:Hippo.DateTimeLabelType.Month">
            <summary>
            월
            </summary>
        </member>
        <member name="F:Hippo.DateTimeLabelType.Year">
            <summary>
            년
            </summary>
        </member>
        <member name="F:Hippo.DateTimeLabelType.DayOfWeek">
            <summary>
            요일을 나타냄 (월, 화 수, 목, 금.. )
            </summary>
        </member>
        <member name="F:Hippo.DateTimeLabelType.WeekOfYear">
            <summary>
            주 (실제 몇째주 인가)
            </summary>
        </member>
        <member name="F:Hippo.DateTimeLabelType.Quarter">
            <summary>
            분기
            </summary>
        </member>
        <member name="T:Hippo.DrawerFactory">
            <summary>
            DrawerFactory
            </summary>
        </member>
        <member name="T:Hippo.BoxPlotsAttributes">
            <summary>
            박스 플롯 설정 클래스 (사용자 호출 대상)
            </summary>
            <remarks>
                BoxPlot Chart 를 작성하기 위한 외부 설정 클래스입니다. 
            </remarks>
        </member>
        <member name="M:Hippo.BoxPlotsAttributes.#ctor">
            <summary>
            박스플롯 설정 클래스 생성자
            </summary>
        </member>
        <member name="P:Hippo.BoxPlotsAttributes.Label">
            <summary>
            박스플롯 각 수치 라벨을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.BoxPlotsAttributes.IsShowFigureText">
            <summary>
            박스플롯 중요 값들의 수치를 보일 것인지 여부를 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.BoxPlotsAttributes.OutlierPointLabel">
            <summary>
            이상치 표현 텍스트를 설정하고 가져옵니다. 
            </summary>
        </member>
        <member name="P:Hippo.BoxPlotsAttributes.MaxPercentage">
            <summary>
            최대값 퍼센트 지정값을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.BoxPlotsAttributes.MinPercentage">
            <summary>
            최소값 퍼센트 지정값을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="T:Hippo.BoxPlots">
            <summary>
            박스 플롯 클래스 (사용자 호출 대상이 아닙니다)
            </summary>
        </member>
        <member name="M:Hippo.BoxPlots.#ctor">
            <summary>
            박스플롯 생성자
            </summary>
        </member>
        <member name="P:Hippo.BoxPlots.Label">
            <summary>
            박스플롯 각 수치 라벨을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.BoxPlots.IsShowFigureText">
            <summary>
            박스플롯 중요 값들의 수치를 보일 것인지 여부를 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.BoxPlots.MaxPercentage">
            <summary>
            최대값 퍼센트 지정값을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.BoxPlots.MinPercentage">
            <summary>
            최소값 퍼센트 지정값을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.BoxPlots.BoxWidth">
            <summary>
            박스의 넓이를 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.BoxPlots.BoxColor">
            <summary>
            개별 박스플롯 색상을 설정하고 가져옵니다. 
            </summary>
        </member>
        <member name="P:Hippo.BoxPlots.FigurePoint">
            <summary>
            박스플롯 데이터 수치 포인트 위치를 설정하고 가져옵니다. 
            </summary> 
        </member>
        <member name="P:Hippo.BoxPlots.Column">
            <summary>
            박스플롯 박스 컬럼을 설정하고 가져옵니다. 
            </summary>
        </member>
        <member name="P:Hippo.BoxPlots.Items">
            <summary>
            그룹에 포함된 시리즈아이템을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.BoxPlots.GroupName">
            <summary>
            박스플롯 그룹 이름
            </summary>
        </member>
        <member name="P:Hippo.BoxPlots.IsShowAvg">
            <summary>
            평균을 그래프에 보여줄 것인가 여부를 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.BoxPlots.Sum">
            <summary>
            총 합을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.BoxPlots.Max">
            <summary>
            최대값을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.BoxPlots.Min">
            <summary>
            최소값을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.BoxPlots.Q1">
            <summary>
            1 분위수를 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.BoxPlots.Q2_Median">
            <summary>
            2분위수 (중앙값) 을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.BoxPlots.Q3">
            <summary>
            3분위수를 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.BoxPlots.Avg">
            <summary>
            평균을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.BoxPlots.IQR">
            <summary>
            interquartile range를 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.BoxPlots.WhiskerLine">
            <summary>
            아래 Whisker를 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.BoxPlots.Outliers">
            <summary>
            이상치 데이터 리스트를 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="T:Hippo.BoxPlotList">
            <summary>
            박스플롯 리스트
            </summary>
        </member>
        <member name="T:Hippo.Outlier">
            <summary>
            박스플롯 이상치 객체
             - 이상치 데이터는, 현재 CHART에서 제공하는 SeriesItem 객체와 유사한 객체의 배열로 데이터를 등록할 수 있도록 함
            </summary>
        </member>
        <member name="M:Hippo.Outlier.#ctor">
            <summary>
            생성자
            </summary>
        </member>
        <member name="P:Hippo.Outlier.FigurPoint">
            <summary>
            이상치 포인트를 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.Outlier.Font">
            <summary>
            이상치 폰트를 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.Outlier.ForeColor">
            <summary>
            이상치 표시 색상을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.Outlier.PointText">
            <summary>
            이상치 표현 문자
            </summary>
        </member>
        <member name="P:Hippo.Outlier.Value">
            <summary>
            이상치 값
            </summary>
        </member>
        <member name="P:Hippo.Outlier.Points">
            <summary>
            이상치 포인트 객체
            </summary>
        </member>
        <member name="T:Hippo.OutlierList">
            <summary>
            박스플롯 이상치 리스트
            </summary>
        </member>
        <member name="T:Hippo.ChartDesigner">
            <summary>
            차트 디자이너 클래스
            </summary>
        </member>
        <member name="M:Hippo.ChartDesigner.#ctor">
            <summary>
            ChartDesigner 생성자
            </summary>
        </member>
        <member name="P:Hippo.ChartDesigner.BackColor">
            <summary>
            차트 배경색을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.ChartDesigner.InnerBackColor">
            <summary>
            차트 내부 배경색을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.ChartDesigner.IsShowBorder">
            <summary>
            차트 배경라인을 그릴것인가 여부을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.ChartDesigner.IsGradation">
            <summary>
            차트 배경색을 그라데이션 처리할것인가 여부을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.ChartDesigner.BackLineColor">
            <summary>
            보더 라인 색상을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="T:Hippo.ColorMap">
            <summary>
            칼라맵 차트의 특징을 정의합니다.
            </summary>
        </member>
        <member name="M:Hippo.ColorMap.#ctor">
            <summary>
            생성자
            </summary>
        </member>
        <member name="P:Hippo.ColorMap.MaxColorValue">
            <summary>
            색상 값의 최대값을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.ColorMap.MinColorValue">
            <summary>
            색상 값의 최소값을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.ColorMap.IsAutoColorSet">
            <summary>
            색상셋을 자동으로 설정할 것인지 여부를 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.ColorMap.ColorSet">
            <summary>
            색상셋을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.ColorMap.ColorSet2">
            <summary>
            색상셋을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.ColorMap.ColorSetArray">
            <summary>
            색상셋 배열을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.ColorMap.DecimalPoint">
            <summary>
            소수점을 설정하고 가져옵니다. 
            </summary>
        </member>
        <member name="T:Hippo.Column">
            <summary>
            Column 클래스
            </summary>
            <remarks>히포차트 내에서 막대 모양을 의미하는 코어 클래스입니다. Column chart 에서 굵기 설정 등에 사용됩니다. </remarks>
        </member>
        <member name="M:Hippo.Column.#ctor">
            <summary>
            Column 객체의 인스턴스를 생성합니다.
            </summary>
        </member>
        <member name="P:Hippo.Column.Line">
            <summary>
            컬럼의 외곽 라인 디자인을 설정하고 가져옵니다. 
            </summary>
        </member>
        <member name="P:Hippo.Column.Width">
            <summary>
            컬럼 넓이를 가져오고 설정합니다. 컬럼의 넓이는 기본적으로 ColumnWidthType 열거형으로 지정을 할 수 있으며 custom 으로 설정할 경우 디테일한 값으로 설정 가능합니다. 
            </summary>
        </member>
        <member name="P:Hippo.Column.WidthType">
            <summary>
            컬럼의 넓이를 가져오고 설정합니다.
            </summary>
        </member>
        <member name="P:Hippo.Column.DesignType">
            <summary>
            컬럼 디자인 종류를 가져오고 설정합니다.
            </summary>
        </member>
        <member name="P:Hippo.Column.ImagesBarPath">
            <summary>
            컬럼 바 이미지를 가져오고 설정합니다.
            </summary>
        </member>
        <member name="T:Hippo.CultureInfo">
            <summary>
            문화권 정보 클래스
            </summary>
            <example>
            <code>
                slist.CultureInfo.Name = "en-US";
            </code>
            </example>
            <remarks>
            차트에 표시되는 날짜, 화페 등의 표시를 문화권 정보에 맞게 표시할 수 있습니다. 
            (Name 속성의 기본값은 "ko-KR" 입니다.)
            </remarks>
        </member>
        <member name="M:Hippo.CultureInfo.#ctor">
            <summary>
            CultureInfo 의 인스턴스를 생성합니다.
            </summary>
        </member>
        <member name="P:Hippo.CultureInfo.Name">
            <summary>
            문화권 정보 이름을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="T:Hippo.DateType">
            <summary>
            날짜형 간트차트의 날짜 형태
            </summary>
        </member>
        <member name="F:Hippo.DateType.Day">
            <summary>
            일
            </summary>
        </member>
        <member name="F:Hippo.DateType.Minute">
            <summary>
            분
            </summary>
        </member>
        <member name="F:Hippo.DateType.Second">
            <summary>
            초
            </summary>
        </member>
        <member name="F:Hippo.DateType.MilliSecond">
            <summary>
            밀리세컨드
            </summary>
        </member>
        <member name="T:Hippo.Gantt">
            <summary>
            Gantt 차트의 특성을 정의하는 클래스입니다.
            </summary>
        </member>
        <member name="M:Hippo.Gantt.#ctor">
            <summary>
            간트 객체의 인스턴스를 생성합니다.
            </summary>
        </member>
        <member name="P:Hippo.Gantt.Suffix">
            <summary>
            간트 차트의 수치 부분 끝에 붙여질 접미사를 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.Gantt.DateType">
            <summary>
            날짜형 간트차트일 경우 날짜의 형태를 설정하고 가져옵니다. (일, 시간) -  이 속성은 더이상 사용되지 않습니다.
            </summary>
        </member>
        <member name="T:Hippo.GaugeType">
            <summary>
            게이치 타입
            </summary>
        </member>
        <member name="F:Hippo.GaugeType.Horizontal">
            <summary>
            수평형 게이지
            </summary>
        </member>
        <member name="F:Hippo.GaugeType.Vertical">
            <summary>
            수직형 게이지
            </summary>
        </member>
        <member name="T:Hippo.ShapeType">
            <summary>
            온도계 모양
            </summary>
        </member>
        <member name="F:Hippo.ShapeType.Default">
            <summary>
            기본형
            </summary>
        </member>
        <member name="F:Hippo.ShapeType.Blend">
            <summary>
            원기둥 형
            </summary>
        </member>
        <member name="F:Hippo.ShapeType.Thermometer">
            <summary>
            온도계형
            </summary>
        </member>
        <member name="F:Hippo.ShapeType.Thermometer2">
            <summary>
            온도계형2
            </summary>
        </member>
        <member name="F:Hippo.ShapeType.Horizontal">
            <summary>
            가로형
            </summary>
        </member>
        <member name="T:Hippo.ShapeType2">
            <summary>
            게이지 모양
            </summary>
        </member>
        <member name="F:Hippo.ShapeType2.Gauge1">
            <summary>
            Gauge1 타입
            </summary>
        </member>
        <member name="F:Hippo.ShapeType2.Gauge2">
            <summary>
            Gauge2 타입
            </summary>
        </member>
        <member name="F:Hippo.ShapeType2.Gauge3">
            <summary>
            Gauge3 타입
            </summary>
        </member>
        <member name="F:Hippo.ShapeType2.Gauge4">
            <summary>
            Gauge4 타입
            </summary>
        </member>
        <member name="F:Hippo.ShapeType2.Gauge5">
            <summary>
            Gauge5 타입
            </summary>
        </member>
        <member name="F:Hippo.ShapeType2.Gauge6">
            <summary>
            Gauge5 타입
            </summary>
        </member>
        <member name="F:Hippo.ShapeType2.Gauge7">
            <summary>
            Gauge5 타입
            </summary>
        </member>
        <member name="T:Hippo.ArrowType">
            <summary>
            ArrowType
            </summary>
        </member>
        <member name="F:Hippo.ArrowType.Arrow">
            <summary>
            뽀족한 모양
            </summary>
        </member>
        <member name="F:Hippo.ArrowType.Line">
            <summary>
            라인 모양
            </summary>
        </member>
        <member name="T:Hippo.Gauge">
            <summary>
            게이지, 계기판형 차트의 속성을 관리하는 클래스입니다. 
            </summary>
        </member>
        <member name="F:Hippo.Gauge._Label">
            <summary>
            2015.4.22 추가
            </summary>
        </member>
        <member name="M:Hippo.Gauge.#ctor">
            <summary>
            게이지 속성 클래스의 인스턴스를 생성합니다.
            </summary>
        </member>
        <member name="P:Hippo.Gauge.Label">
            <summary>
            게이지차트의 라벨을 설정하고 가져옵니다. 4.3 버전에서 추가되었습니다. 
            </summary>
        </member>
        <member name="P:Hippo.Gauge.ForeColor">
            <summary>
            계기판형 게이지 차트의 축 글자색상을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.Gauge.IsShowSmallTick">
            <summary>
            작은 눈금을 보일 것인가 여부를 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.Gauge.ArrowLine">
            <summary>
            게이지 표시 화살표가 라인일경우 라인 객체를 설정하고 가져옵니다. 
            </summary>
        </member>
        <member name="P:Hippo.Gauge.ArrowType">
            <summary>
            게이지 화살표, 라인 타입을 설정하고 가져옵니다. 
            </summary>
        </member>
        <member name="P:Hippo.Gauge.ArrowColor">
            <summary>
            게이지 화살표, 라인 색상을 설정하고 가져옵니다. 
            </summary>
        </member>
        <member name="P:Hippo.Gauge.TickColor">
            <summary>
            게이지 눈금 색상을 설정하고 가져옵니다. 
            </summary>
        </member>
        <member name="P:Hippo.Gauge.SmallTickCount">
            <summary>
            게이지차트의 작은 눈금 수를 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.Gauge.BorderColor">
            <summary>
            게이지 외곽 라인 색상을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.Gauge.Font">
            <summary>
            게이지 수치 폰트를 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.Gauge.IsFillGrid">
            <summary>
            게이지 그리드를 색칠할 것인가 여부를 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.Gauge.IsShowBorderLine">
            <summary>
            게이지의 외곽라인을 그릴 것인지 여부를 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.Gauge.Grid">
            <summary>
            게이지 그리드를 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.Gauge.Margin">
            <summary>
            게이지 마진을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.Gauge.BackColor">
            <summary>
            게이지 배경색을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.Gauge.BackColor2">
            <summary>
            게이지차트 2 배경색을 설정하고 가져옵니다. 
            </summary>
        </member>
        <member name="P:Hippo.Gauge.InnerBackColor">
            <summary>
            게이지 내부 그리드 배경색을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.Gauge.GaugeType">
            <summary>
            게이지 타입을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.Gauge.ShapeType">
            <summary>
            게이지 모양 종류를 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.Gauge.ShapeType2">
            <summary>
            계기판형 게이지 차트의 모양 종류를 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.Gauge.Gauge2BackgroundImage">
            <summary>
            계기판형 게이지차트의 타입의 실제 이미지를 가져옵니다.
            </summary>
        </member>
        <member name="T:Hippo.Kagi">
            <summary>
            Kagi 차트의 특성을 정의하는 클래스입니다.
            </summary>
        </member>
        <member name="M:Hippo.Kagi.#ctor">
            <summary>
            카기 특성 객체의 인스턴스를 생성합니다.
            </summary>
        </member>
        <member name="P:Hippo.Kagi.KagiType">
            <summary>
            카기 타입을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="T:Hippo.Label">
            <summary>
            라벨 클래스
            </summary>
            <remarks>히포차트 내의 모든 텍스트를 표현하는 코어 클래스입니다. 예를 들어 수치표현, 축의 라벨 등 거의 모든 곳에 사용됩니다. </remarks>
        </member>
        <member name="M:Hippo.Label.#ctor">
            <summary>
            라벨 인스턴스를 생성합니다.
            </summary>
        </member>
        <member name="M:Hippo.Label.#ctor(System.String)">
            <summary>
            라벨 인스턴스를 생성합니다.
            </summary>
            <param name="Text">라벨 텍스트</param>
        </member>
        <member name="P:Hippo.Label.Text">
            <summary>
            라벨 텍스트
            </summary>
        </member>
        <member name="P:Hippo.Label.Font">
            <summary>
            라벨 폰트
            </summary>
        </member>
        <member name="P:Hippo.Label.ForeColor">
            <summary>
            글자 색
            </summary>
        </member>
        <member name="T:Hippo.LabelList">
            <summary>
            라벨 컬렉션 클래스
            </summary>
        </member>
        <member name="T:Hippo.Line">
            <summary>
            각종 라인의 속성을 관리합니다.
            </summary>
            <remarks>히포차트내의 라인에 관련된 코어 클래스입니다. 라인차트, 마커, 틱 그리드라인 등 거의 모든 곳에 사용됩니다. </remarks>
        </member>
        <member name="M:Hippo.Line.#ctor">
            <summary>
            라인 객체의 인스턴스를 생성합니다.
            </summary>
        </member>
        <member name="P:Hippo.Line.LineWidth">
            <summary>
            라인 굵기을 가져오고 설정합니다.
            </summary>
        </member>
        <member name="P:Hippo.Line.LineColor">
            <summary>
            라인 색상을 가져오고 설정합니다.
            </summary>
        </member>
        <member name="P:Hippo.Line.LineAreaColors">
            <summary>
            라인 영역 배경색을 가져오고 설정합니다.
            </summary>
        </member>
        <member name="P:Hippo.Line.StartCap">
            <summary>
            라인 StartCap을 가져오고 설정합니다.
            </summary>
        </member>
        <member name="P:Hippo.Line.EndCap">
            <summary>
            라인 EndCap을 가져오고 설정합니다.
            </summary>
        </member>
        <member name="P:Hippo.Line.DashStyle">
            <summary>
            라인 DashStyle을 가져오고 설정합니다.
            </summary>
        </member>
        <member name="P:Hippo.Line.DashCap">
            <summary>
            라인 DashCap을 가져오고 설정합니다.
            </summary>
        </member>
        <member name="P:Hippo.Line.AreaDesignType">
            <summary>
            라인 면적 디자인 타입을 가져오고 설정합니다.
            </summary>
        </member>
        <member name="T:Hippo.OrganizationType">
            <summary>
            조직원 타입
            </summary>
        </member>
        <member name="F:Hippo.OrganizationType.President">
            <summary>
            사장
            </summary>
        </member>
        <member name="F:Hippo.OrganizationType.Inspection">
            <summary>
            검사실
            </summary>
        </member>
        <member name="F:Hippo.OrganizationType.Group">
            <summary>
            그룹, 팁장
            </summary>
        </member>
        <member name="F:Hippo.OrganizationType.Employee">
            <summary>
            사원급
            </summary>
        </member>
        <member name="T:Hippo.OrganizationElement">
            <summary>
            조직도 구성원 클래스
            </summary>
        </member>
        <member name="M:Hippo.OrganizationElement.#ctor">
            <summary>
            OrganizationElement
            </summary>
        </member>
        <member name="M:Hippo.OrganizationElement.#ctor(System.String)">
            <summary>
            OrganizationElement
            </summary>
            <param name="OrganizationName"></param>
        </member>
        <member name="M:Hippo.OrganizationElement.#ctor(System.String,System.Int32)">
            <summary>
            OrganizationElement
            </summary>
            <param name="OrganizationName"></param>
            <param name="Parent"></param>
        </member>
        <member name="M:Hippo.OrganizationElement.#ctor(System.String,System.Int32,System.Drawing.Image)">
            <summary>
            OrganizationElement
            </summary>
            <param name="OrganizationName"></param>
            <param name="Parent"></param>
            <param name="Picture"></param>
        </member>
        <member name="P:Hippo.OrganizationElement.Name">
            <summary>
            조직원의 이름을 설정하고 가져옵니다. 
            </summary>
        </member>
        <member name="P:Hippo.OrganizationElement.Memo">
            <summary>
            조직원에 대한 설명을 설정하고 가져욉니다. 
            </summary>
        </member>
        <member name="P:Hippo.OrganizationElement.Parent">
            <summary>
            조직원의 직속 부모 조직원을 설정하고 가져옵니다. 
            </summary>
        </member>
        <member name="P:Hippo.OrganizationElement.Picture">
            <summary>
            조직원의 사진 이미지 객체를 설정하고 가져옵니다. 
            </summary>
        </member>
        <member name="P:Hippo.OrganizationElement.Position">
            <summary>
            조직원의 직위를 설정하고 가져옵니다. 
            </summary>
        </member>
        <member name="P:Hippo.OrganizationElement.Step">
            <summary>
            조직원의 단계를 설정하고 가져옵니다. 단계란, 조직도에서의 층을 의미하며 0부터 시작합니다. 
            </summary>
        </member>
        <member name="P:Hippo.OrganizationElement.GroupName">
            <summary>
            조직원이 속한 그룹 이름을 설정하고 가져옵니다. 
            </summary>
        </member>
        <member name="P:Hippo.OrganizationElement.ForeColor">
            <summary>
            조직원 객체에 사용할 글자색을 설정하고 가져옵니다. 
            </summary>
        </member>
        <member name="P:Hippo.OrganizationElement.BackColor">
            <summary>
            조직원 객체에 사용되는 배경색을 설정하고 가져옵니다. 배경색은 상단 타이틀 영역에 표시됩니다. 
            </summary>
        </member>
        <member name="P:Hippo.OrganizationElement.OutLineColor">
            <summary>
            조직원 객체에 사용되는 외곽 라인 색상을 설정하고 가져옵니다. 
            </summary>
        </member>
        <member name="P:Hippo.OrganizationElement.AccessKey">
            <summary>
            조직원에 엑세스할 수 있는 키 값을 설정하고 가져옵니다. (자동 설정)
            </summary>
        </member>
        <member name="P:Hippo.OrganizationElement.Location">
            <summary>
            조직원 객체의 위치를 설정하고 가져옵니다. 
            </summary>
        </member>
        <member name="P:Hippo.OrganizationElement.Size">
            <summary>
            조직원 객체의 크기를 설정하고 가져옵니다. 
            </summary>
        </member>
        <member name="P:Hippo.OrganizationElement.NameFont">
            <summary>
            조직원의 이름 부분의 폰트를 설정하고 가져옵니다. 
            </summary>
        </member>
        <member name="P:Hippo.OrganizationElement.MemoFont">
            <summary>
            조직원의 하단 설명 부분의 폰트를 설정하고 가져옵니다. 
            </summary>
        </member>
        <member name="P:Hippo.OrganizationElement.TitleForeColor">
            <summary>
            조직원의 타이틀 부분의 글자색을 설정하고 가져옵니다. 
            </summary>
        </member>
        <member name="P:Hippo.OrganizationElement.IsImageView">
            <summary>
            조직원의 사진을 보여줄 것인지 여부를 설정하고 가져옵니다. 
            </summary>
        </member>
        <member name="P:Hippo.OrganizationElement.IsAutoSize">
            <summary>
            조직원 객체의 사격형의 크기를 자동 설정할지 여부를 설정하고 가져옵니다. 
            </summary>
        </member>
        <member name="P:Hippo.OrganizationElement.Type">
            <summary>
            조직원의 타입을 설정하고 가져옵니다. 
            </summary>
        </member>
        <member name="T:Hippo.Points">
            <summary>
            점(포인트)를 나타내는 클래스
            </summary>
            <remarks>히포차트내의 포인트를 나타내는 코어 클래스 </remarks>
        </member>
        <member name="M:Hippo.Points.#ctor">
            <summary>
            포인트 인스턴스를 생성합니다.
            </summary>
        </member>
        <member name="M:Hippo.Points.#ctor(Hippo.PointType)">
            <summary>
            포인트 인스턴스를 생성합니다.
            </summary>
            <param name="pointtype">포인트 타입</param>
        </member>
        <member name="P:Hippo.Points.StringPoint">
            <summary>
            포인트를 텍스트 혹은 특수 문자로 설정하는 값을 설정하고 가져옵니다. (예를들어, * )
            </summary>
        </member>
        <member name="P:Hippo.Points.PointType">
            <summary>
            포인트 타입을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.Points.PointImage">
            <summary>
            포인트 이미지을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.Points.Color">
            <summary>
            포인트 색상을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.Points.Width">
            <summary>
            포인트 넓이를 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="T:Hippo.GanttProcess">
            <summary>
            간트프로세스
            </summary>
            <remarks>
                간트차트에서 진행율과 내부 표현양식에 대한 설정들을 관리하는 클래스입니다. 
            </remarks>
        </member>
        <member name="M:Hippo.GanttProcess.#ctor">
            <summary>
            GanttProcess()
            </summary>
        </member>
        <member name="P:Hippo.GanttProcess.IsShowPercent">
            <summary>
            진행율 퍼센트 글자를 표시할지 여부를 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.GanttProcess.TextLocation">
            <summary>
            라벨 텍스트 위치를 설정합니다.
            </summary>
        </member>
        <member name="P:Hippo.GanttProcess.Label">
            <summary>
            진행율 라벨을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.GanttProcess.Percent">
            <summary>
            일정의 진행율을 설정하고 가져옵니다. 간트차트일 경우 설정하며 퍼센트 값으로 소수로 설정합니다. 
            </summary>
        </member>
        <member name="P:Hippo.GanttProcess.ProcessColor">
            <summary>
            간트차트의 진행율 부분의 색상을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="T:Hippo.RadarPointType">
            <summary>
            방사형 차트 타입
            </summary>
        </member>
        <member name="F:Hippo.RadarPointType.Point">
            <summary>
            포인트
            </summary>
        </member>
        <member name="F:Hippo.RadarPointType.Line">
            <summary>
            포인트와 그 연결선
            </summary>
        </member>
        <member name="F:Hippo.RadarPointType.Area">
            <summary>
            포인트와 그 면적
            </summary>
        </member>
        <member name="F:Hippo.RadarPointType.Pie">
            <summary>
            파이형의 영역
            </summary>
        </member>
        <member name="T:Hippo.RadarShapeType">
            <summary>
            방사형 차트의 외곽 모양
            </summary>
        </member>
        <member name="F:Hippo.RadarShapeType.Circle">
            <summary>
            원모양
            </summary>
        </member>
        <member name="F:Hippo.RadarShapeType.Polygon1">
            <summary>
            다각형모양1
            </summary>
        </member>
        <member name="F:Hippo.RadarShapeType.Polygon2">
            <summary>
            다각형모양2
            </summary>
        </member>
        <member name="T:Hippo.Radar">
            <summary>
            방사형 차트의 특성을 정의합니다.
            </summary>
        </member>
        <member name="M:Hippo.Radar.#ctor">
            <summary>
            방사형 차트 특성 클래스의 인스턴스를 생성합니다.
            </summary>
        </member>
        <member name="P:Hippo.Radar.IsShowItemNames">
            <summary>
            각 항목 이름들을 보일 것인가 여부를 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.Radar.ShapeType">
            <summary>
            방사형 차트의 외곽 모양을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.Radar.BackColor">
            <summary>
            원의 내부 배경색을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.Radar.FillBackground">
            <summary>
            방사형 차트의 내부를 채울 것인가 여부를 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="T:Hippo.Vector">
            <summary>
            벡터 클래스
            </summary>
        </member>
        <member name="M:Hippo.Vector.#ctor">
            <summary>
            벡터 인스턴스를 생성합니다.
            </summary>
        </member>
        <member name="M:Hippo.Vector.#ctor(System.Double,System.Double)">
            <summary>
            벡터 인스턴스를 생성합니다. 
            </summary>
            <param name="direction">방향</param>
            <param name="force">크기</param>
        </member>
        <member name="P:Hippo.Vector.Force">
            <summary>
            크기
            </summary>
        </member>
        <member name="P:Hippo.Vector.Direction">
            <summary>
            방향
            </summary>
        </member>
        <member name="P:Hippo.Vector.Stair">
            <summary>
            수층
            </summary>
        </member>
        <member name="P:Hippo.Vector.VertorLine">
            <summary>
            벡터라인
            </summary> 
        </member>
        <member name="T:Hippo.VectorList">
            <summary>
            벡터 컬렉션 클래스
            </summary>
        </member>
        <member name="T:Hippo.PropertyEditorFormCore">
            <summary>
            PropertyEditorFormCore
            </summary>
            <summary>
            PropertyEditorFormCore
            </summary>
        </member>
        <member name="M:Hippo.PropertyEditorFormCore.#ctor(System.Object)">
            <summary>
            PropertyEditorFormCore 인스턴스를 생성합니다.
            </summary>
            <param name="property"></param>
        </member>
        <member name="M:Hippo.PropertyEditorFormCore.btnOK_Click(System.Object,System.EventArgs)">
            <summary>
            btnOK_Click
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Hippo.PropertyEditorFormCore.btnCancel_Click(System.Object,System.EventArgs)">
            <summary>
            btnCancel_Click
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="F:Hippo.PropertyEditorFormCore.components">
            <summary>
            필수 디자이너 변수입니다.
            </summary>
        </member>
        <member name="M:Hippo.PropertyEditorFormCore.Dispose(System.Boolean)">
            <summary>
            사용 중인 모든 리소스를 정리합니다.
            </summary>
            <param name="disposing">관리되는 리소스를 삭제해야 하면 true이고, 그렇지 않으면 false입니다.</param>
        </member>
        <member name="M:Hippo.PropertyEditorFormCore.InitializeComponent">
            <summary>
            디자이너 지원에 필요한 메서드입니다.
            이 메서드의 내용을 코드 편집기로 수정하지 마십시오.
            </summary>
        </member>
        <member name="T:Hippo.HippoChart">
            <summary>
            히포차트를 나타내는 대표 클래스
            </summary> 
        </member>
        <member name="M:Hippo.HippoChart.#ctor">
            <summary>
            HippoChart 기본 생성자
            </summary>
        </member>
        <member name="M:Hippo.HippoChart.#ctor(System.Single,System.Single)">
            <summary>
            HippoChart
            </summary>
            <param name="width">차트 가로길이</param>
            <param name="height">차트 세로길이</param>
        </member>
        <member name="M:Hippo.HippoChart.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            HippoChart
            </summary>
            <param name="width"></param>
            <param name="height"></param>
            <param name="width2"></param>
            <param name="height2"></param>
        </member>
        <member name="M:Hippo.HippoChart.InitChart">
            <summary>
            초기화 
            </summary>
        </member>
        <member name="M:Hippo.HippoChart.DrawDefault">
            <summary>
            기본 바탕 차트를 그립니다.
            </summary>
        </member>
        <member name="M:Hippo.HippoChart.DrawDefault2">
            <summary>
            기본 바탕 차트를 그립니다.
            </summary>
        </member>
        <member name="M:Hippo.HippoChart.DrawFullRectangle(System.Drawing.Graphics)">
            <summary>
            차트 전체 사각형 그리기
            </summary>
        </member>
        <member name="M:Hippo.HippoChart.DrawInnerRectangle(System.Drawing.Graphics)">
            <summary>
            그래프 영역을 그립니다(내부사각형, 범례 추가-조정)
                    2
            0                1
                    3
            </summary>
        </member>
        <member name="M:Hippo.HippoChart.DrawTitle(System.Drawing.Graphics)">
            <summary>
            타이틀 텍스트를 그립니다. 
            </summary>
        </member>
        <member name="M:Hippo.HippoChart.DrawLogo(System.Drawing.Graphics)">
            <summary>
            로고를 그립니다
            </summary>
        </member>
        <member name="M:Hippo.HippoChart.GetTitleHeightRate(System.Drawing.Graphics)">
            <summary>
            타이틀 높이를 동적으로 결정한다.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Hippo.HippoChart.CheckValidation">
            <summary>
            올바른 차트를 그리기위한 유효성을 체크합니다.
            </summary>
            <returns>유효성 유무</returns>
        </member>
        <member name="M:Hippo.HippoChart.ProcessValidation(System.String)">
            <summary>
            유효성 체크 로직 실제 처리
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Hippo.HippoChart.DrawChart">
            <summary>
            DrawChart (Call Method)
            </summary>
        </member>
        <member name="M:Hippo.HippoChart.DrawChart(Hippo.SeriesList)">
            <summary>
            DrawChart
            </summary>
            <param name="chartsource">SeriesList</param>
        </member>
        <member name="M:Hippo.HippoChart.DrawChart(Hippo.SeriesListDictionary)">
            <summary>
            DrawChart
            </summary>
            <param name="chartsources">SeriesListDictionary</param>
        </member>
        <member name="M:Hippo.HippoChart.DrawCoreChart">
            <summary>
            실질적으로 각종 객체들을 연결하여 차트그리기를 지휘하는 메소드입니다.
            </summary>
        </member>
        <member name="M:Hippo.HippoChart.SetGraphAreas">
            <summary>
            그래프 영역을 구합니다.
            </summary>
        </member>
        <member name="M:Hippo.HippoChart.DrawGraphArea(System.Drawing.RectangleF,System.Drawing.Color,System.Drawing.Color,System.String)">
            <summary>
            그래프 영역 그리기 - 더이상 사용되지 않습니다
            </summary>
            <param name="GraphZone"></param>
            <param name="backcolor"></param>
            <param name="backlinecolor"></param>
            <param name="backImages"></param>
        </member>
        <member name="M:Hippo.HippoChart.GetBackColor(System.Drawing.SolidBrush)">
            <summary>
            차트 배경의 그라데이션 여부를 판단하여 브러쉬 객체를 리턴한다.
            </summary>
            <returns>그라데이션 브러쉬</returns>
        </member>
        <member name="M:Hippo.HippoChart.GetBackLineArray(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            사각형 배경라인을 위한 포인터배열 리턴
            </summary>
            <param name="Left"></param>
            <param name="Top"></param>
            <param name="Width"></param>
            <param name="Height"></param>
            <returns></returns>
        </member>
        <member name="M:Hippo.HippoChart.GetBackRoundLineArray(System.Single,System.Single,System.Single,System.Single,System.Int32)">
            <summary>
            GetBackRoundLineArray - 둥그스레한 모양으로 차트 배경 라인을 그리기 위한 포인터 8개를 구합니다.
            </summary>
            <param name="Left"></param>
            <param name="Top"></param>
            <param name="Width"></param>
            <param name="Height"></param>
            <param name="CurvedSPan"></param>
            <returns></returns>
        </member>
        <member name="M:Hippo.HippoChart.GetBackRoundDesingLineArray(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            GetBackRoundLineArray - 찢어진 효과를 내는 포인터배열을 반환한다.
            </summary>
            <param name="Left"></param>
            <param name="Top"></param>
            <param name="Width"></param>
            <param name="Height"></param>
            <param name="CurvedSPan"></param>
            <param name="CurvedSPan2"></param>
            <param name="FolderAgree"></param>
            <returns></returns>
        </member>
        <member name="M:Hippo.HippoChart.DrawLegendBox(System.Drawing.Graphics)">
            <summary>
            DrawLegendBox
            </summary>
        </member>
        <member name="M:Hippo.HippoChart.ReportError(System.Exception)">
            <summary>
            에러 처리
            </summary>
            <param name="ex"></param>
        </member>
        <member name="M:Hippo.HippoChart.ReportError(System.String)">
            <summary>
            ReportError
            </summary>
            <param name="message">message</param>
        </member>
        <member name="M:Hippo.HippoChart.MakeWorflowMessages(System.String)">
            <summary>
            MakeWorflowMessages
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Hippo.HippoChart.Dispose">
            <summary>
            리소스 해제
            </summary>
        </member>
        <member name="M:Hippo.HippoChart.DisposeResource">
            <summary>
            각종 펜, 브러쉬 객체들을 리소스 헤제합니다. 
            </summary>
        </member>
        <member name="P:Hippo.HippoChart.IsAuthentications">
            <summary>
            인증에 성공하였는지 여부를 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.HippoChart.AuthenErrorMessage">
            <summary>
            인증 결과 메세지
            </summary>
        </member>
        <member name="P:Hippo.HippoChart.IsEmptyanalysis">
            <summary>
            공간 분석을 할 것인지 여부를 설정하고 가져옵니다. 
            </summary>
        </member>
        <member name="P:Hippo.HippoChart.IsScroll">
            <summary>
            차트 스크롤을 사용하는지 여부를 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.HippoChart.WorkFlowStepIndex">
            <summary>
            차트 생성 워크 플로우 단계 인덱스
            </summary>
        </member>
        <member name="P:Hippo.HippoChart.WorkFlowMessage">
            <summary>
            차트가 생성되는 진행 상황을 모니터링합니다.
            </summary>
        </member>
        <member name="P:Hippo.HippoChart.ChartSource">
            <summary>
            차트 데이터 소스를 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.HippoChart.NameColumn">
            <summary>
            차트 이름 컬럼를을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.HippoChart.ValueColumns">
            <summary>
            차트 값 컬럼들을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.HippoChart.IsDisposable">
            <summary>
            리소스를 자동 해제할 것인가 여부를 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.HippoChart.IsComplete">
            <summary>
            차트 생성의 완료 여부를 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.HippoChart.ErrorMessage">
            <summary>
            에러메세지를 가져옵니다.
            </summary>
        </member>
        <member name="T:Hippo.IChart">
            <summary>
            차트가 가져야할 가장 기본적인 특징을 정의합니다.
            </summary>
        </member>
        <member name="P:Hippo.IChart.ChartID">
            <summary>
            차트 고유 아이디
            </summary>
        </member>
        <member name="P:Hippo.IChart.Width2">
            <summary>
            차트 넓이
            </summary>
        </member>
        <member name="P:Hippo.IChart.Height2">
            <summary>
            차트 높이
            </summary>
        </member>
        <member name="P:Hippo.IChart.Left">
            <summary>
            차트 Left
            </summary>
        </member>
        <member name="P:Hippo.IChart.Top">
            <summary>
            차트 Top
            </summary>
        </member>
        <member name="P:Hippo.IChart.ChartImage">
            <summary>
            차트 이미지
            </summary>
        </member>
        <member name="P:Hippo.IChart.ChartGraphic">
            <summary>
            차트 그래픽
            </summary>
        </member>
        <member name="P:Hippo.IChart.ChartRectangle">
            <summary>
            차트 렉텡글
            </summary>
        </member>
        <member name="P:Hippo.IChart.Layout">
            <summary>
            차트 레이아웃
            </summary>
        </member>
        <member name="P:Hippo.IChart.Designer">
            <summary>
            차트 디자이너
            </summary>
        </member>
        <member name="P:Hippo.IChart.Titles">
            <summary>
            타이틀
            </summary>
        </member>
        <member name="P:Hippo.IChart.LegendBox">
            <summary>
            범례
            </summary>
        </member>
        <member name="P:Hippo.IChart.Logo">
            <summary>
            로고
            </summary>
        </member>
        <member name="P:Hippo.IChart.SeriesListDictionary">
            <summary>
            시리즈 리스트 컬렉션
            </summary>
        </member>
        <member name="P:Hippo.IChart.DesignType">
            <summary>
            디자인 타입
            </summary>
        </member>
        <member name="P:Hippo.IChart.Direction">
            <summary>
            시리즈 리스트 방향
            </summary>
        </member>
        <member name="P:Hippo.IChart.PaletteType">
            <summary>
            팔레트 타입
            </summary>
        </member>
        <member name="M:Hippo.IChart.DrawDefault">
            <summary>
            바탕 차트를 그립니다.
            </summary>
        </member>
        <member name="M:Hippo.IChart.DrawChart">
            <summary>
            차트를 그립니다.
            </summary>
        </member>
        <member name="M:Hippo.IChart.DrawChart(Hippo.SeriesList)">
            <summary>
            차트를 그립니다.
            </summary>
            <param name="SeriesList">시리즈 리스트</param>
        </member>
        <member name="M:Hippo.IChart.DrawChart(Hippo.SeriesListDictionary)">
            <summary>
            차트를 그립니다.
            </summary>
            <param name="SeriesList">시리즈 리스트 컬렉션</param>
        </member>
        <member name="T:Hippo.ICoordinatable">
            <summary>
            좌표성을 판단할 수 있는 인터페이스 - BaseGraph 클래스에서 이를 구현하고 각 그래프 클래스에서 override 해서 구현한다.
            </summary>
        </member>
        <member name="M:Hippo.ICoordinatable.GetCoordinateType">
            <summary>
            GetCoordinateType - 좌표 클래스인지 아닌지
            </summary>
            <returns></returns>
        </member>
        <member name="M:Hippo.ICoordinatable.GetCoordinateDirection">
            <summary>
            GetCoordinateDirection - 좌표축의 방향
            </summary>
            <returns></returns>
        </member>
        <member name="T:Hippo.IDrawer">
            <summary>
            IDrawer
            </summary>
        </member>
        <member name="T:Hippo.ILegendEntry">
            <summary>
            범례에 표시되어야 하는 객체들이 구현합니다.
            </summary>
        </member>
        <member name="P:Hippo.ILegendEntry.LegendVisible">
            <summary>
            LegendVisible
            </summary>
        </member>
        <member name="T:Hippo.BalloonType">
            <summary>
            풍선 도움말 모양
            </summary>
        </member>
        <member name="F:Hippo.BalloonType.Default">
            <summary>
            기본형(아이보리색의 둥근형)
            </summary>
        </member>
        <member name="F:Hippo.BalloonType.Rectangle">
            <summary>
            사각형
            </summary>
        </member>
        <member name="T:Hippo.Balloon">
            <summary>
            풍선 도움말 클래스
            </summary>
            <remarks>
                좌표평면에 특정 시리즈아이템에 소속된 객체로 풍선 모양의 말풍선을 표시합니다. 
                이 아이템의 visible 속성을 활용하여 마우스무브이벤트로 수치를 보이는 액션을 구현할 수 있습니다. 본 객체는 기본 값이 null 이므로 반드시 인스턴스를 생성한 후 사용해야합니다. 
            </remarks>
            <example>
                <code>
                    SeriesItem item = new SeriesItem();
                    item.Name = "item" + x.ToString(); 
                    
                    item.Balloon = new Balloon();
                    item.Balloon.Label.Text = "수치정보!"; 
                </code>
            </example>
        </member>
        <member name="M:Hippo.Balloon.#ctor">
            <summary>
            풍선 도움말 인스턴스를 생성합니다.
            </summary>
        </member>
        <member name="P:Hippo.Balloon.TextLocation">
            <summary>
            풍선 내부 글자의 정렬을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.Balloon.HeightType">
            <summary>
            풍선 도움말을 표시할 위치를 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.Balloon.BalloonType">
            <summary>
            풍선 도움말 모양을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.Balloon.Label">
            <summary>
            풍선 라벨을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.Balloon.Line">
            <summary>
            풍선 라인을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.Balloon.Width">
            <summary>
            풍선의 가로길이을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.Balloon.Height">
            <summary>
            풍선의 세로길이을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.Balloon.X">
            <summary>
            풍선의  Left위치을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.Balloon.Y">
            <summary>
            풍선의 top 위치을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.Balloon.BackColor">
            <summary>
            풍선의 배경색을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.Balloon.IsShadow">
            <summary>
            풍선의 그림자를 표시할것인가 여부를 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.Balloon.Visible">
            <summary>
            풍선을 보이게 할 것인가 여부를 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="T:Hippo.Descriptions">
            <summary>
            Description(설명) 클래스
            </summary>
            <remarks>
                좌표평면을 4등분하여 특정 공간에 차트에 대한 설명 문구를 삽입할 수 있습니다. 
            </remarks>
            <example>
                <code>
                    sList.Description.Label.Text = "차트에대한 설명";
                </code>
            </example>
        </member>
        <member name="M:Hippo.Descriptions.#ctor">
            <summary>
            Descriptions 인스턴스를 생성합니다.
            </summary>
        </member>
        <member name="P:Hippo.Descriptions.Left">
            <summary>
            Description 의 사용자정의 위치 Left 를 설정하고 가져옵니다. 
            </summary>
        </member>
        <member name="P:Hippo.Descriptions.Top">
            <summary>
            Description 의 사용자정의 위치 Top 를 설정하고 가져옵니다. 
            </summary>
        </member>
        <member name="P:Hippo.Descriptions.Label">
            <summary>
            Description 의 Label을 가져오고 설정합니다.
            </summary>
        </member>
        <member name="P:Hippo.Descriptions.XDirection">
            <summary>
            Description의 좌우 위치를 가져오고 설정합니다.
            </summary>
        </member>
        <member name="P:Hippo.Descriptions.YDirection">
            <summary>
            Description의 아래 위 위치를 가져오고 설정합니다.
            </summary>
        </member>
        <member name="T:Hippo.GraphArea">
            <summary>
            그래프 영역 
            </summary>
            <remarks>
                축요소(AxisFactors) 가 관장하는 양축 영역과 별게로 그래프가 그려지는 영역의 관리를 담당합니다. 그리드와 그래프영역 배경색 등의 설정이 가능합니다. 
            </remarks>
        </member>
        <member name="M:Hippo.GraphArea.#ctor">
            <summary>
            GraphArea 인스턴스를 생성합니다.
            </summary>
        </member>
        <member name="P:Hippo.GraphArea.GraphRectangle">
            <summary>
            이너사각형 안쪽 그래프 그려지는 영역을 가져오고 설정합니다.
            </summary>
        </member>
        <member name="P:Hippo.GraphArea.BackColor">
            <summary>
            그래프 영역의 배경색을 가져오고 설정합니다.
            </summary>
        </member>
        <member name="P:Hippo.GraphArea.BorderColor">
            <summary>
            그래프 영역의 배경라인 색을 가져오고 설정합니다.
            </summary>
        </member>
        <member name="P:Hippo.GraphArea.BackgroundImage">
            <summary>
            그래프 영역의 백그라운드 이미지 경로를 가져오고 설정합니다.
            </summary>
        </member>
        <member name="P:Hippo.GraphArea.TopAxisRectangle">
            <summary>
            상단 축 영역을 가져오고 설정합니다.
            </summary>
        </member>
        <member name="P:Hippo.GraphArea.BottomAxisRectangle">
            <summary>
            하단 축 영역을 가져오고 설정합니다.
            </summary>
        </member>
        <member name="P:Hippo.GraphArea.LeftAxisRectangle">
            <summary>
            좌측 축 영역을 가져오고 설정합니다.
            </summary>
        </member>
        <member name="P:Hippo.GraphArea.RightAxisRectangle">
            <summary>
            우측 축 영역을 가져오고 설정합니다.
            </summary>
        </member>
        <member name="P:Hippo.GraphArea.Grid">
            <summary>
            그리드 특성을 가져오고 설정합니다.
            </summary>
        </member>
        <member name="T:Hippo.Grid">
            <summary>
            그리드 클래스
            </summary>
            <remarks>
                좌표평면에 표시되는 가로, 세로줄 그리드 객체로 시리즈리스트 > GraphArea 가 소유하여 관리합니다. 
                축과 관련된 속성이지만 양 축을 제외한 그래프 영역만을 표시하는 부분으로 시리즈리스트에 포함되어 별도로 관리됩니다. 그리드의 두가지 배경색 등을 설정할 수 있습니다. 
            </remarks>
            <example>
                <code>sList.GraphArea.Grid.GridDirection = GridDirection.Horizontal;</code>
            </example>
        </member>
        <member name="M:Hippo.Grid.#ctor">
            <summary>
            Grid 인스턴스를 생성합니다.
            </summary>
        </member>
        <member name="P:Hippo.Grid.GridBackColor1">
            <summary>
            그리드 배경색 1 을 설정하고 가져옵니다. 
            </summary>
        </member>
        <member name="P:Hippo.Grid.GridBackColor2">
            <summary>
            그리드 배경색 2 를 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.Grid.IsBackGridColor">
            <summary>
            좌표 그리드의 지그재그 배경색을 넣을 것인가 여부를 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.Grid.GridLine">
            <summary>
            그리드 라인을 가져오고 설정합니다.
            </summary>
        </member>
        <member name="P:Hippo.Grid.ScaleBreakLine">
            <summary>
            스케일 브레이크 라인을 가져오고 설정합니다.
            </summary>
        </member>
        <member name="P:Hippo.Grid.ZeroLineColor">
            <summary>
            제로라인의 색상을 가져오고 설정합니다.
            </summary>
        </member>
        <member name="P:Hippo.Grid.GridDirection">
            <summary>
            그리드 방향을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.Grid.Interval">
            <summary>
            그리드 간격수(x축)를 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="T:Hippo.Layout">
            <summary>
            레이아웃 클래스 - 타이틀영역, 로고영역, 범례영역, 내부차트영역의 사각형을 관리합니다. 
            </summary>
        </member>
        <member name="M:Hippo.Layout.#ctor">
            <summary>
            Layout 객체의 인스턴스를 생성합니다.
            </summary>
        </member>
        <member name="P:Hippo.Layout.TitleRectangle">
            <summary>
            타이틀 그려지는 영역
            </summary>
        </member>
        <member name="P:Hippo.Layout.LogoRectangle">
            <summary>
            로고 그려지는 영역
            </summary>
        </member>
        <member name="P:Hippo.Layout.LegendRectangle">
            <summary>
            범례 그려지는 영역
            </summary>
        </member>
        <member name="P:Hippo.Layout.InnerRectangle">
            <summary>
            그래프들이 배치되는 영역
            </summary>
        </member>
        <member name="T:Hippo.LegendLocation">
            <summary>
            범례 박스 위치
            </summary>
        </member>
        <member name="F:Hippo.LegendLocation.Default">
            <summary>
            기본방향 범례(오른쪽)
            </summary>
        </member>
        <member name="F:Hippo.LegendLocation.Left">
            <summary>
            왼쪽
            </summary>
        </member>
        <member name="F:Hippo.LegendLocation.Top">
            <summary>
            위 방향 범례
            </summary>
        </member>
        <member name="F:Hippo.LegendLocation.Bottom">
            <summary>
            아래방향 범례
            </summary>
        </member>
        <member name="T:Hippo.LegendFormat">
            <summary>
            범례 포맷
            </summary>
        </member>
        <member name="F:Hippo.LegendFormat.Icon_Name">
            <summary>
            아이콘 + 이름
            </summary>
        </member>
        <member name="F:Hippo.LegendFormat.Value_Icon_Name">
            <summary>
            합(값) + 아이콘 + 이름
            </summary>
        </member>
        <member name="F:Hippo.LegendFormat.Value_Percent_Icon_Name">
            <summary>
            합(값) + 퍼센트값 + 아이콘 + 이름
            </summary>
        </member>
        <member name="F:Hippo.LegendFormat.Percent_Icon_Name">
            <summary>
            퍼센트값 + 아이콘 + 이름
            </summary>
        </member>
        <member name="T:Hippo.LegendHeaderCellType">
            <summary>
            범례 헤더의 셀 타입
            </summary>
        </member>
        <member name="F:Hippo.LegendHeaderCellType.Value">
            <summary>
            값
            </summary>
        </member>
        <member name="F:Hippo.LegendHeaderCellType.Percent">
            <summary>
            퍼센트
            </summary>
        </member>
        <member name="F:Hippo.LegendHeaderCellType.Icon">
            <summary>
            아이콘
            </summary>
        </member>
        <member name="F:Hippo.LegendHeaderCellType.Name">
            <summary>
            이름
            </summary>
        </member>
        <member name="T:Hippo.LegendValueType">
            <summary>
            범례 value 부분에 표시할 값의 타입
            </summary>
        </member>
        <member name="F:Hippo.LegendValueType.Sum">
            <summary>
            합계
            </summary>
        </member>
        <member name="F:Hippo.LegendValueType.Average">
            <summary>
            평균
            </summary>
        </member>
        <member name="T:Hippo.LegendBox">
            <summary>
            범례 클래스
            </summary>
            <remarks>
                하나의 범례를 의미합니다. 범례는 차트 레벨과 시리즈리스트 레벨 두 군데 설정요소를 가지고 있습니다. 
            </remarks>
        </member>
        <member name="M:Hippo.LegendBox.#ctor">
            <summary>
            LegendBox 인스턴스를 생성합니다.
            </summary>
        </member>
        <member name="P:Hippo.LegendBox.BackColor">
            <summary>
            범례의 배경색을 설정하고 가져옵니다. 4.3 버전에서 추가되었습니다.
            </summary>
        </member>
        <member name="P:Hippo.LegendBox.Label">
            <summary>
            범례 폰트를 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.LegendBox.TopMargin">
            <summary>
            범례가 그려지는 위치의 Top 마진 값을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.LegendBox.LeftMargin">
            <summary>
            범례가 그려지는 위치의 Left 마진 값을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.LegendBox.IsAutoSetting">
            <summary>
            범례를 수동으로 설정할것인지 여부를 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.LegendBox.PercentDecimalPoint">
            <summary>
            퍼센트를 표시할 소수 자리수를 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.LegendBox.ValueDecimalPoint">
            <summary>
            value 에 표시할 소수 자리수를 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.LegendBox.Header">
            <summary>
            범례 헤더를 가져오고 설정합니다.
            </summary> 
        </member>
        <member name="P:Hippo.LegendBox.IsShowHeader">
            <summary>
            범례 헤더를 보여줄 것인지 여부를 가져오고 설정합니다.
            </summary>
        </member>
        <member name="P:Hippo.LegendBox.LegendBoxItems">
            <summary>
            범례 아이템 박스 컬렉션를 가져오고 설정합니다.
            </summary> 
        </member>
        <member name="P:Hippo.LegendBox.Visible">
            <summary>
            범례를 표시할 것인가 여부를 가져오고 설정합니다.
            </summary>
        </member>
        <member name="P:Hippo.LegendBox.FigureFormat">
            <summary>
            값(value)을 표시할 수치 형식을 가져오고 설정합니다.
            </summary>
        </member>
        <member name="P:Hippo.LegendBox.Location">
            <summary>
            범례 위치를 가져오고 설정합니다.
            </summary>
        </member>
        <member name="P:Hippo.LegendBox.LegendFormat">
            <summary>
            범례 포맷을 가져오고 설정합니다.
            </summary>
        </member>
        <member name="P:Hippo.LegendBox.ValueType">
            <summary>
            범례 값(value) 표시영역의 타입을 가져오고 설정합니다.
            </summary>
        </member>
        <member name="P:Hippo.LegendBox.Width">
            <summary>
            범례 가로길이를 가져오고 설정합니다.
            </summary>
        </member>
        <member name="P:Hippo.LegendBox.Height">
            <summary>
            범례 세로 길이를 가져오고 설정합니다.
            </summary>
        </member>
        <member name="P:Hippo.LegendBox.IsDivideLine">
            <summary>
            구분선을 표시할 것인가 여부를 가져오고 설정합니다.
            </summary>
        </member>
        <member name="P:Hippo.LegendBox.IsVerticalLine">
            <summary>
            세로 구분선을 표시할 것인가 여부를 가져오고 설정합니다.
            </summary>
        </member>
        <member name="P:Hippo.LegendBox.DivideLineColor">
            <summary>
            구분선 라인 색상를 가져오고 설정합니다.
            </summary>
        </member>
        <member name="P:Hippo.LegendBox.VerticalLineColor">
            <summary>
            세로 구분선 라인 색상을 가져오고 설정합니다.
            </summary>
        </member>
        <member name="P:Hippo.LegendBox.LegendItemSetCount">
            <summary>
            가로로 그려지는 총 아이템 세트 수
            </summary>
        </member>
        <member name="P:Hippo.LegendBox.TotalLegendItemStairCount">
            <summary>
            범례 아이템이 아래로 그려지는 총 층 개수
            </summary>
        </member>
        <member name="P:Hippo.LegendBox.SeriesListMaxArray">
            <summary>
            각 시리즈 리스트가 가지고 있는 총 범례 아이템 수
            </summary>
        </member>
        <member name="P:Hippo.LegendBox.IsGrouping">
            <summary>
            범례를 그룹핑 할것인지 여부
            </summary>
        </member>
        <member name="T:Hippo.LegendHeader">
            <summary>
            범례 헤더 클래스
            </summary>
            <remarks>범례에서 헤더 부분을 관리합니다. </remarks>
        </member>
        <member name="M:Hippo.LegendHeader.#ctor">
            <summary>
            LegendHeader 인스턴스를 생성합니다.
            </summary>
        </member>
        <member name="P:Hippo.LegendHeader.Width">
            <summary>
            범례 헤더 가로 길이를 설정하고 가져옵니다.
            </summary> 
        </member>
        <member name="P:Hippo.LegendHeader.Height">
            <summary>
            범례 헤더 세로 길이를 설정하고 가져옵니다.
            </summary> 
        </member>
        <member name="P:Hippo.LegendHeader.ValueLabel">
            <summary>
            합(값) 라벨을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.LegendHeader.PercentLabel">
            <summary>
            퍼센트 라벨을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.LegendHeader.IconLabel">
            <summary>
            아이콘 라벨을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.LegendHeader.NameLabel">
            <summary>
            이름 라벨을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.LegendHeader.DivideLineColor">
            <summary>
            헤더 구분선의 색상을 설정하고 가져옵니다.
            </summary> 
        </member>
        <member name="T:Hippo.LegendBoxItemDictionary">
            <summary>
            범례박스아이템 컬렉션 클래스
            </summary>
        </member>
        <member name="T:Hippo.LegendBoxItem">
            <summary>
            범례박스아이템 클래스
            </summary> 
        </member>
        <member name="M:Hippo.LegendBoxItem.#ctor">
            <summary>
            LegendBoxItem 인스턴스를 생성합니다.
            </summary>
        </member>
        <member name="P:Hippo.LegendBoxItem.Rows">
            <summary>
            범례 아이템 박스의 row 컬렉션을 가져오고 설정합니다.
            </summary>
        </member>
        <member name="P:Hippo.LegendBoxItem.BoxRectangle">
            <summary>
            박스아이템 영역 렉텡글을 가져오고 설정합니다.
            </summary>
        </member>
        <member name="T:Hippo.LegendRowDictionary">
            <summary>
            범례박스아이템 로우 컬렉션 클래스
            </summary>
        </member>
        <member name="T:Hippo.LegendRow">
            <summary>
            범례박스아이템 로우 클래스
            </summary>
        </member>
        <member name="M:Hippo.LegendRow.#ctor(Hippo.LegendFormat)">
            <summary>
            LegendRow 인스턴스를 생성합니다.
            </summary>
            <param name="headerType">헤더타입</param>
        </member>
        <!-- "P:Hippo.LegendRow.ItemRectangle" 멤버에 대해 잘못된 형식의 XML 주석은 무시됩니다. -->
        <member name="P:Hippo.LegendRow.Item">
            <summary>
            범례 아이템을 가져오고 설정합니다.(한 로우당 하나의 범례 아이템을 가진다)
            </summary>
        </member>
        <member name="P:Hippo.LegendRow.Cells">
            <summary>
            범례 셀 컬렉션을 가져오고 설정합니다.(헤더의 개수에 따라 달라진다)
            </summary>
        </member>
        <member name="T:Hippo.LegendCellDictionary">
            <summary>
            범례 셀 컬렉션 클래스
            </summary>
        </member>
        <member name="T:Hippo.LegendCell">
            <summary>
            범례 하나의 셀을 나타내는 클래스
            </summary>
        </member>
        <member name="M:Hippo.LegendCell.#ctor">
            <summary>
            LegendCell 인스턴스를 생성합니다.
            </summary>
        </member>
        <member name="P:Hippo.LegendCell.HeaderType">
            <summary>
            범례 헤더의 각 셀의 타입을 가져오고 설정합니다.
            </summary> 
        </member>
        <member name="P:Hippo.LegendCell.CellRectangle">
            <summary>
            범례 셀 렉텡글을 가져오고 설정합니다.
            </summary>
        </member>
        <member name="T:Hippo.LegendItem">
            <summary>
            범례 아이템 클래스
            </summary>
        </member>
        <member name="M:Hippo.LegendItem.#ctor">
            <summary>
            LegendItem 인스턴스를 생성합니다.
            </summary>
        </member>
        <member name="P:Hippo.LegendItem.IsDetailView">
            <summary>
            범례의 값, 퍼센트를 표시할 것인지 여부를 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.LegendItem.SeriesNumber">
            <summary>
            범례 아이템의 세트를 구분하기 위한 시리즈 넘버를 설정하고 가져옵니다.
            </summary> 
        </member>
        <member name="P:Hippo.LegendItem.IsUse3D">
            <summary>
            범례 아이템을 3D로 그릴 것인지 여부를 설정하고 가져옵니다.
            </summary> 
        </member>
        <member name="P:Hippo.LegendItem.Label">
            <summary>
            범례 아이템 라벨을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.LegendItem.IconColor">
            <summary>
            범례 아이템 배경색을 설정하고 가져옵니다.
            </summary> 
        </member>
        <member name="P:Hippo.LegendItem.Line">
            <summary>
            범례 라인을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.LegendItem.Column">
            <summary>
            범례 컬럼을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.LegendItem.Point">
            <summary>
            범례 포인트(점을 나타내는 클래스)를 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.LegendItem.LegendBoxType">
            <summary>
            범례 타입을 설정하고 가져옵니다.
            </summary> 
        </member>
        <member name="P:Hippo.LegendItem.AreaType">
            <summary>
            범례 영역타입을 설정하고 가져옵니다.
            </summary> 
        </member>
        <member name="P:Hippo.LegendItem.IconPath">
            <summary>
            범례 아이템 아이콘 경로를 설정하고 가져옵니다.
            </summary> 
        </member>
        <member name="P:Hippo.LegendItem.Value">
            <summary>
            범례 아이템의 값을 설정하고 가져옵니다.
            </summary> 
        </member>
        <member name="P:Hippo.LegendItem.Percent">
            <summary>
            범례 아이템의 퍼센트 값을 설정하고 가져옵니다.
            </summary> 
        </member>
        <member name="T:Hippo.Logo">
            <summary>
            차트 로고(logo) 요소
            </summary>
            <remarks>차트 하단에 홈페이지 주소, 회사이름, 차트 분류 등을 텍스트 관리할 수 있습니다. </remarks>
        </member>
        <member name="M:Hippo.Logo.#ctor">
            <summary>
            Logo
            </summary>
        </member>
        <member name="P:Hippo.Logo.Label">
            <summary>
            로고 라벨
            </summary>
        </member>
        <member name="P:Hippo.Logo.LogoAlign">
            <summary>
            로고 위치
            </summary>
        </member>
        <member name="T:Hippo.Title">
            <summary>
            차트 타이틀 요소
            </summary>
            <remarks>차트 상단의 차트 제목, 이름 등을 설정할 수 있습니다. </remarks>
        </member>
        <member name="M:Hippo.Title.#ctor">
            <summary>
            Title 인스턴스를 생성합니다.
            </summary>
        </member>
        <member name="P:Hippo.Title.Label">
            <summary>
            타이틀 라벨을 가져오거나 설정합니다.
            </summary>  
        </member>
        <member name="P:Hippo.Title.TitleAlign">
            <summary>
            타이틀 위치을 가져오거나 설정합니다.
            </summary>
        </member>
        <member name="P:Hippo.Title.TitleIconPath">
            <summary>
            타이틀 앞에 위치할 이미지 경로 문자열을 가져오거나 설정합니다.
            </summary>
        </member>
        <member name="T:Hippo.SeriesListDictionary">
            <summary>
            SeriesListDictionary
            </summary>
            <remarks>
                시리즈리스트를 담고 있는 컬렉션으로 히포차트 객체가 소유합니다. 
            </remarks>
        </member>
        <member name="T:Hippo.SeriesList">
            <summary>
            SeriesList (시리즈리스트)
            </summary>
            <remarks>
                하나의 좌표평면을 기준으로하는 시리즈 집합으로 차트가 가지는 중요한 속성들을 관리하는 차트 단위 객체입니다. 
            </remarks>
        </member>
        <member name="E:Hippo.SeriesList.ChartTypeChanged">
            <summary>
            차트 종류가 변경될때 발생합니다.
            </summary>
        </member>
        <member name="E:Hippo.SeriesList.ChartTransParentChanged">
            <summary>
            차트 투명도가 변경될때 발생합니다.
            </summary>
        </member>
        <member name="E:Hippo.SeriesList.ChartMarginChanged">
            <summary>
            차트 마진이 변경될때 발생합니다.
            </summary>
        </member>
        <member name="E:Hippo.SeriesList.Chart3DShowChanged">
            <summary>
            차트 3D 설정이 변경될때 발생합니다.
            </summary>
        </member>
        <member name="M:Hippo.SeriesList.OnChartTypeChanged(System.EventArgs)">
            <summary>
            OnChartTypeChanged 이벤트
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Hippo.SeriesList.OnChartMarginChanged(System.EventArgs)">
            <summary>
            OnChartMarginChanged 이벤트
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Hippo.SeriesList.OnChartTransParentChanged(System.EventArgs)">
            <summary>
            OnChartTransParentChanged 이벤트
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Hippo.SeriesList.OnChart3DShowChanged(System.EventArgs)">
            <summary>
            OnChart3DShowChanged 이벤트
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Hippo.SeriesList.#ctor">
            <summary>
            SeriesList 인스턴스를 생성합니다.
            </summary>
        </member>
        <member name="P:Hippo.SeriesList.IsShowStackedSumFigures">
            <summary>
            스택형 차트의 아이템 합계 수치를 보일 것인가 여부를 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.SeriesList.PaletteType">
            <summary>
            팔레트 타입을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.SeriesList.ScaleBreakType">
            <summary>
            스케일 브레이크의 모양을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.SeriesList.Legend">
            <summary>
            이너 레전드를 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.SeriesList.Radar">
            <summary>
            방사형 차트의 특성을 정의하는 속성을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.SeriesList.Gantt">
            <summary>
            간트차트의 속성들의 정의를 설정하고 가져온다.
            </summary>
        </member>
        <member name="P:Hippo.SeriesList.CoordinativeDirection">
            <summary>
            축의 방향을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.SeriesList.SeriesCollection">
            <summary>
            시리즈 컬렉션을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.SeriesList.GraphArea">
            <summary>
            그래프 그려지는 내부 영역을 설정하고 가져온다.
            </summary>
        </member>
        <member name="P:Hippo.SeriesList.AxisFactor">
            <summary>
            차트 핵심 요소을 설정하고 가져온다.
            </summary>    
        </member>
        <member name="P:Hippo.SeriesList.ChartType">
            <summary>
            대표 차트 타입을 설정하고 가져온다.
            </summary>
        </member>
        <member name="P:Hippo.SeriesList.StackType">
            <summary>
            스택형 타입을 설정하고 가져온다.
            </summary>
        </member>
        <member name="P:Hippo.SeriesList.Margin">
            <summary>
            차트 마진을 설정하고 가져온다.
            </summary>
        </member>
        <member name="P:Hippo.SeriesList.IsShow3D">
            <summary>
            3D 입체로 그릴것인가 여부를 설정하고 가져온다.
            </summary>
        </member>
        <member name="P:Hippo.SeriesList.Transparency">
            <summary>
            투명도(기본값 255)를 설정하고 가져온다.
            </summary>
        </member>
        <member name="P:Hippo.SeriesList.CoorcinateType">
            <summary>
            좌표성질인지 여부를 설정하고 가져온다.
            </summary>
        </member>
        <member name="P:Hippo.SeriesList.Description">
            <summary>
            차트 Description을 설정하고 가져옵니다.
            </summary> 
        </member>
        <member name="P:Hippo.SeriesList.GraphTitle">
            <summary>
            GraphTitle 을 설정하고 가져옵니다.
            </summary> 
        </member>
        <member name="T:Hippo.SeriesCollection">
            <summary>
            SeriesCollection
            </summary>
            <remarks>
                시리즈들을 담고 있는 컬렉션으로 시리즈리스트가 소유합니다.  
            </remarks>
        </member>
        <member name="T:Hippo.Series">
            <summary>
            Series (시리즈)
            </summary>
            <remarks>
                일련의 데이터 집합을 의미하는 클래스. 하나의 차트를 의미하는 것이 시리즈리스트라면 내부에 3개의 라인이 그려진다면 3개의 시리즈가 있다라고 표현합니다. 
            </remarks>
        </member>
        <member name="E:Hippo.Series.ChartTypeChanged">
            <summary>
            차트 종류가 변경될때 발생합니다.
            </summary>
        </member>
        <member name="E:Hippo.Series.ChartTransParentChanged">
            <summary>
            차트 투명도가 변경될때 발생합니다.
            </summary>
        </member>
        <member name="M:Hippo.Series.OnChartTypeChanged(System.EventArgs)">
            <summary>
            OnChartTypeChanged 이벤트
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Hippo.Series.OnChartTransParentChanged(System.EventArgs)">
            <summary>
            OnChartTransParentChanged 이벤트
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Hippo.Series.#ctor">
            <summary>
            Series 생성자
            </summary>
        </member>
        <member name="P:Hippo.Series.IsShowAllFigureText">
            <summary>
            시리즈 전체 데이터수치를 보일 것인지 여부를 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.Series.BoxPlotList">
            <summary>
            박스플롯 아이템 리스트 설정 내용을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.Series.BoxPlotsAttributes">
            <summary>
            박스플롯 속성을 설정하고 가져옵니다. 
            </summary>
        </member>
        <member name="P:Hippo.Series.Description">
            <summary>
            시리즈의 설명을 설정하고 가져옵니다. 
            </summary>
        </member>
        <member name="P:Hippo.Series.ColumnRangeType">
            <summary>
            컬럼류 차트의 막대가 그려지는 범위를 지정하는 타입을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.Series.ErrorPercentage">
            <summary>
            에러바 타입이 백분율일 경우 적용되는 오차 범위의 퍼센트 값을 설정하고 가져옵니다. (기본값 5)
            </summary>
        </member>
        <member name="P:Hippo.Series.ErrorBarType">
            <summary>
            에러바 타입을 설정하고 가져옵니다. 
            </summary>
        </member>
        <member name="P:Hippo.Series.ErrorLine">
            <summary>
            에러바 차트에서의 라인객체를 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.Series.ErrorBarPoint">
            <summary>
            에러바 차트에서 가운데 포인트를 설정하고 가져옵니다. 
            </summary>
        </member>
        <member name="P:Hippo.Series.ErrorOffset">
            <summary>
            에러바 차트에서 표준오차 범위를 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.Series.HasNanData">
            <summary>
            데이터가 Nan 인것을 가지고 있는지 여부를 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.Series.Visible">
            <summary>
            시리즈의 보임 여부를 설정하고 가져온다.
            </summary>
        </member>
        <member name="P:Hippo.Series.SeriesDojiCandleColor">
            <summary>
            주식 차트의 도지(Doji)형의 색상을 설정하고 가져온다.
            </summary>
        </member>
        <member name="P:Hippo.Series.SeriesPlusCandleColor">
            <summary>
            주식차트의 양봉 색상을 설정하고 가져온다.
            </summary>
        </member>
        <member name="P:Hippo.Series.SeriesMinusCandleColor">
            <summary>
            주식차트의 음봉 색상을 설정하고 가져온다.
            </summary>
        </member>
        <member name="P:Hippo.Series.Kagi">
            <summary>
            카기 타입을 설정하고 가져온다.
            </summary>
        </member>
        <member name="P:Hippo.Series.ArrowLine">
            <summary>
            화살표 라인을 설정하고 가져온다.
            </summary>
        </member>
        <member name="P:Hippo.Series.IsLineShadowEffect">
            <summary>
            라인의 그림자 효과를 줄것인지 여부를 설정하고 가져온다. 
            </summary>
        </member>
        <member name="P:Hippo.Series.LineNullType">
            <summary>
            라인류 차트의 데이터가 널일 경우 표시할 라인 형태를 설정하고 가져온다.
            </summary>
        </member>
        <member name="P:Hippo.Series.AreaType">
            <summary>
            영역형 타입을 설정하고 가져온다.
            </summary>
        </member>
        <member name="P:Hippo.Series.AxisIndex">
            <summary>
            시리즈에서 사용할 축의 인덱스를 설정하고 가져온다. 기본값은 0입니다.
            </summary>
        </member>
        <member name="P:Hippo.Series.RadarType">
            <summary>
            방사형 차트의 타입을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.Series.Transparency">
            <summary>
            투명도(기본값 255)를 설정하고 가져온다.
            </summary>
        </member>
        <member name="P:Hippo.Series.Name">
            <summary>
            시리즈 이름(범례)을 설정하고 가져온다.
            </summary>
        </member>
        <member name="P:Hippo.Series.ForeColor">
            <summary>
            시리즈 글자색(범례)을 설정하고 가져온다.
            </summary>
        </member>
        <member name="P:Hippo.Series.LineNullColor">
            <summary>
            라인차트류의 데이터가 널인 부분에 표시할 색상을 설정하고 가져온다.
            </summary>
        </member>
        <member name="P:Hippo.Series.ChartType">
            <summary>
            차트 종류을 설정하고 가져온다.
            </summary>
        </member>
        <member name="P:Hippo.Series.FigureStringFormatFlags">
            <summary>
            수치 글자의 그려지는 가로, 세로 형태를 설정하고 가져온다. 
            </summary>
        </member>
        <member name="P:Hippo.Series.FigureTextLocation">
            <summary>
            수치 표시 
            </summary>
        </member>
        <member name="P:Hippo.Series.Gauge">
            <summary>
            게이지 차트의 특성을 정의하는 속성을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.Series.items">
            <summary>
            시리즈 내의 요소들을 설정하고 가져온다.
            </summary>
        </member>
        <member name="P:Hippo.Series.Line">
            <summary>
            라인 속성을 설정하고 가져온다.
            </summary>
        </member>
        <member name="P:Hippo.Series.Column">
            <summary>
            컬럼 속성을 설정하고 가져온다.
            </summary>
        </member>
        <member name="P:Hippo.Series.SeriesColor">
            <summary>
            시리즈 생상을 설정하고 가져온다.
            </summary>
        </member>
        <member name="P:Hippo.Series.Points">
            <summary>
            포인트을 설정하고 가져온다.
            </summary>
        </member>
        <member name="P:Hippo.Series.Label">
            <summary>
            시리즈 라벨을 설정하고 가져온다.
            </summary>
        </member>
        <member name="P:Hippo.Series.UnAxisFactor">
            <summary>
            비좌표 차트 요소를 설정하고 가져온다.
            </summary>
        </member>
        <member name="P:Hippo.Series.LegendVisible">
            <summary>
            범례에 보여줄 것인지 여부를 가져오고 설정합니다.
            </summary>
        </member>
        <member name="T:Hippo.SeriesItemCollection">
            <summary>
            SeriesItemCollection
            </summary>
            <remarks>
                시리즈아이템을 담고 있는 컬렉션으로 시리즈가 소유합니다.  
            </remarks>
        </member>
        <member name="T:Hippo.SeriesItem">
            <summary>
            SeriesItem
            </summary>
            <remarks>
                한 개의 데이터를 의미합니다. 하나의 포인트일 수도 있고 하나의 막대일 수도 있으며 하나의 주식 캔들일 수도 있습니다.  
            </remarks>
        </member>
        <member name="M:Hippo.SeriesItem.#ctor">
            <summary>
            SeriesItem
            </summary>
        </member>
        <member name="M:Hippo.SeriesItem.#ctor(System.Double)">
            <summary>
            SeriesItem
            </summary>
            <param name="value">아이템 값</param>
        </member>
        <member name="P:Hippo.SeriesItem.YValueReplaceText">
            <summary>
            YValue 값을 대체하여 수치표시하는 텍스트 문구를 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.SeriesItem.GroupName">
            <summary>
            아이템 그룹 이름을 설정하고 가져옵니다
            </summary>
        </member>
        <member name="P:Hippo.SeriesItem.Vector">
            <summary>
            아이템의 벡터 특성을 설정하고 가져온다.
            </summary>
        </member>
        <member name="P:Hippo.SeriesItem.IsGroupBoss">
            <summary>
            간트차트일 경우 일정의 그룹 부모인지 여부를 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.SeriesItem.IsMilestone">
            <summary>
            간트차트일 경우 아이템이 마일스톤인지 여부를 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.SeriesItem.Visible">
            <summary>
            시리즈아이템의 Visible 여부를 설정하고 가져옵니다. 
            </summary>
        </member>
        <member name="P:Hippo.SeriesItem.Enabled">
            <summary>
            시리즈아이템의 Enabled(데이터분석 가용) 여부를 설정하고 가져옵니다. 
            </summary>
        </member>
        <member name="P:Hippo.SeriesItem.Index">
            <summary>
            시리즈아이템의 인덱스 번호를 가져온다.
            </summary>
        </member>
        <member name="P:Hippo.SeriesItem.ParentIndex">
            <summary>
            부모아이템의 인덱스 번호를 설정하고 가져온다. 간트차트일 경우 일정의 부모를 설정합니다. 
            </summary>
        </member>
        <member name="P:Hippo.SeriesItem.IsDojiType">
            <summary>
            주식 차트에서 항목이 시가와 종가같은 도지형인지 여부를 가져온다.
            </summary>
        </member>
        <member name="P:Hippo.SeriesItem.HighValue">
            <summary>
            주식차트에 사용되는 속성으로 고가를 의미하는 값을 설정하고 가져온다.
            </summary>
        </member>
        <member name="P:Hippo.SeriesItem.LowValue">
            <summary>
            주식차트에 사용되는 속성으로 저가를 의미하는 값을 설정하고 가져온다. 
            </summary>
        </member>
        <member name="P:Hippo.SeriesItem.Lengh">
            <summary>
            파이 그래프의 가로 크기를 설정하고 가져온다. 설정 값이 클 수록 부채꼴은 작아집니다. 
            </summary>
        </member>
        <member name="P:Hippo.SeriesItem.GanttName">
            <summary>
            간트차트일 경우 각 항목별 추가 문자열을 삽입할 수 있습니다. 예) 각 일정별 참여하는 사람, 항목별 특이사항 등
            </summary>
        </member>
        <member name="P:Hippo.SeriesItem.FigurePoint">
            <summary>
            각 수치의 실제 포인트 값을 설정하고 가져온다.
            </summary>
            <remarks>해당 속성은 차트내에서 해당 아이템이 위치하는 포인트를 알 수 있습니다. </remarks>
        </member>
        <member name="P:Hippo.SeriesItem.ColumStartPoint">
            <summary>
            막대의 시작(왼쪽 또는 아래) 포인트를 가져온다.
            </summary>
        </member>
        <member name="P:Hippo.SeriesItem.ColumEndPoint">
            <summary>
            막대의 끝(오른쪽 또는 아래) 포인트를 가져온다.
            </summary>
        </member>
        <member name="P:Hippo.SeriesItem.Name">
            <summary>
            아이템 이름을 설정하고 가져온다.
            </summary>
            <remarks>x축이 문자형일 경우에 해당 속성이 필요합니다.  </remarks>
        </member>
        <member name="P:Hippo.SeriesItem.ArrowLabel">
            <summary>
            화살표 단계에 표시할 문자열을 설정하고 가져온다.
            </summary>
        </member>
        <member name="P:Hippo.SeriesItem.XValue">
            <summary>
            아이템 값(x)을 설정하고 가져온다.
            </summary>
            <remarks>x축이 숫자형일 경우에 해당 속성의 입력이 필요합니다.  </remarks>
        </member>
        <member name="P:Hippo.SeriesItem.YValue">
            <summary>
            아이템 값(y)을 설정하고 가져온다. (주식차트에서는 종가를 의미합니다)
            </summary>
        </member>
        <member name="P:Hippo.SeriesItem.ZValue">
            <summary>
            아이템 값(Z)을 설정하고 가져온다. 
            </summary>
        </member>
        <member name="P:Hippo.SeriesItem.YStartValue">
            <summary>
            아이템의 시작 값(y)을 설정하고 가져온다. (주식차트에서 시가를 의미합니다)
            </summary>
        </member>
        <member name="P:Hippo.SeriesItem.XDateTimeValue">
            <summary>
            아이템의 날짜형 x값을 설정하고 가져온다.
            </summary>
        </member>
        <member name="P:Hippo.SeriesItem.YDateTimeValue">
            <summary>
            아이템의 날짜형 y값을 설정하고 가져온다.
            </summary>
        </member>
        <member name="P:Hippo.SeriesItem.YStartDateTimeValue">
            <summary>
            아이템의 날짜형 y 시작 값을 설정하고 가져온다.
            </summary>
        </member>
        <member name="P:Hippo.SeriesItem.ItemColor">
            <summary>
            아이템 색상을 설정하고 가져온다.
            </summary>
        </member>
        <member name="P:Hippo.SeriesItem.GanttProcess">
            <summary>
            간트차트의 세부 진행률을 설정하고 가져온다.
            </summary>
        </member>
        <member name="P:Hippo.SeriesItem.ArrowLine">
            <summary>
            화살표 라인을 설정하고 가져온다.
            </summary>
        </member>
        <member name="P:Hippo.SeriesItem.Label">
            <summary>
            아이템 수치 라벨을 설정하고 가져온다.
            </summary>
        </member>
        <member name="P:Hippo.SeriesItem.Column">
            <summary>
            컬럼 속성을 설정하고 가져온다.
            </summary>
        </member>
        <member name="P:Hippo.SeriesItem.Points">
            <summary>
            포인트을 설정하고 가져온다.
            </summary>
        </member>
        <member name="P:Hippo.SeriesItem.Balloon">
            <summary>
            풍선 도움말을 설정하고 가져온다.
            </summary>
        </member>
        <member name="P:Hippo.SeriesItem.IsShowFigureText">
            <summary>
            수치 텍스트를 보일것인지 여부를 설정하고 가져온다.
            </summary>
        </member>
        <member name="P:Hippo.SeriesItem.Element">
            <summary>
            조직도 구성원에 대한 내용을 설정하고 가져옵니다. 
            </summary>
        </member>
        <member name="P:Hippo.SeriesItem.UpperItem">
            <summary>
            상한가 종목인지 여부를 설정하고 가져옵니다. 
            </summary>
        </member>
        <member name="P:Hippo.SeriesItem.LowerItem">
            <summary>
            하한가 종목인지 여부를 설정하고 가져옵니다. 
            </summary>
        </member>
        <member name="M:Hippo.specialcharts.BoxPlotGraph.GetCoordinateType">
            <summary>
            GetCoordinateType
            </summary>
            <returns></returns>
        </member>
        <member name="M:Hippo.specialcharts.BoxPlotGraph.GetCoordinateDirection">
            <summary>
            GetCoordinateDirection
            </summary>
            <returns></returns>
        </member>
        <member name="M:Hippo.specialcharts.BoxPlotGraph.DrawGraph(System.Int32,System.Int32)">
            <summary>
            DrawGraph
            </summary>
            <param name="ColumnIndex"></param>
            <param name="SameColumnIndex"></param>
            <returns></returns>
        </member>
        <member name="M:Hippo.specialcharts.BoxPlotGraph.GetVarWidth(System.Int32,Hippo.Series)">
            <summary>
            GetVarWidth -  컬럼 차트 류의 컬럼 굵기를 결정한다. 
            </summary>
            <param name="valCount"></param>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:Hippo.specialcharts.BoxPlotGraph.Dispose">
            <summary>
            리소스를 헤제합니다.
            </summary>
        </member>
        <member name="M:Hippo.specialcharts.CandleGraph.GetCoordinateType">
            <summary>
            GetCoordinateType
            </summary>
            <returns></returns>
        </member>
        <member name="M:Hippo.specialcharts.CandleGraph.GetCoordinateDirection">
            <summary>
            GetCoordinateDirection
            </summary>
            <returns></returns>
        </member>
        <member name="M:Hippo.specialcharts.CandleGraph.DrawGraph(System.Int32,System.Int32)">
            <summary>
            DrawGraph
            </summary>
            <param name="ColumnIndex"></param>
            <param name="SameColumnIndex"></param>
            <returns></returns>
        </member>
        <member name="M:Hippo.specialcharts.CandleGraph.GetVarWidth(System.Int32,Hippo.SeriesItem)">
            <summary>
            GetVarWidth -  컬럼 차트 류의 컬럼 굵기를 결정한다. 
            </summary>
            <param name="valCount"></param>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:Hippo.specialcharts.CandleGraph.Dispose">
            <summary>
            리소스를 헤제합니다.
            </summary>
        </member>
        <member name="T:Hippo.specialcharts.ContourGraph">
            <summary>
            Contour
            </summary>
        </member>
        <member name="M:Hippo.specialcharts.ContourGraph.GetCoordinateType">
            <summary>
            GetCoordinateType
            </summary>
            <returns></returns>
        </member>
        <member name="M:Hippo.specialcharts.ContourGraph.GetCoordinateDirection">
            <summary>
            GetCoordinateDirection
            </summary>
            <returns></returns>
        </member>
        <member name="M:Hippo.specialcharts.ContourGraph.DrawGraph(System.Int32,System.Int32)">
            <summary>
            DrawGraph
            </summary>
            <param name="ColumnIndex"></param>
            <param name="SameColumnIndex"></param>
            <returns></returns>
        </member>
        <member name="T:Hippo.specialcharts.ColorMapGraph">
            <summary>
            칼라맵 차트
            </summary>
        </member>
        <member name="M:Hippo.specialcharts.ColorMapGraph.GetCoordinateType">
            <summary>
            GetCoordinateType
            </summary>
            <returns></returns>
        </member>
        <member name="M:Hippo.specialcharts.ColorMapGraph.GetCoordinateDirection">
            <summary>
            GetCoordinateDirection
            </summary>
            <returns></returns>
        </member>
        <member name="M:Hippo.specialcharts.ColorMapGraph.DrawGraph(System.Int32,System.Int32)">
            <summary>
            DrawGraph
            </summary>
            <param name="ColumnIndex"></param>
            <param name="SameColumnIndex"></param>
            <returns></returns>
        </member>
        <member name="M:Hippo.specialcharts.ColorMapGraph.Dispose">
            <summary>
            리소스를 헤제합니다.
            </summary>
        </member>
        <member name="M:Hippo.specialcharts.GanttGraph.GetCoordinateType">
            <summary>
            GetCoordinateType
            </summary>
            <returns></returns>
        </member>
        <member name="M:Hippo.specialcharts.GanttGraph.GetCoordinateDirection">
            <summary>
            GetCoordinateDirection
            </summary>
            <returns></returns>
        </member>
        <member name="M:Hippo.specialcharts.GanttGraph.DrawGraph(System.Int32,System.Int32)">
            <summary>
            DrawGraph
            </summary>
            <param name="ColumnIndex"></param>
            <param name="SameColumnIndex"></param>
            <returns></returns>
        </member>
        <member name="M:Hippo.specialcharts.GanttGraph.GetVarWidth(System.Int32,Hippo.SeriesItem)">
            <summary>
            GetVarWidth -  컬럼 차트 류의 컬럼 굵기를 결정한다. 
            </summary>
            <param name="valCount"></param>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:Hippo.specialcharts.GanttGraph.Dispose">
            <summary>
            리소스를 헤제합니다.
            </summary>
        </member>
        <member name="T:Hippo.specialcharts.Gauge2Graph">
            <summary>
            Gauge (계기판형 차트)
            </summary>
        </member>
        <member name="M:Hippo.specialcharts.Gauge2Graph.GetCoordinateType">
            <summary>
            GetCoordinateType
            </summary>
            <returns></returns>
        </member>
        <member name="M:Hippo.specialcharts.Gauge2Graph.GetCoordinateDirection">
            <summary>
            GetCoordinateDirection
            </summary>
            <returns></returns>
        </member>
        <member name="M:Hippo.specialcharts.Gauge2Graph.DrawGraph(System.Int32,System.Int32)">
            <summary>
            DrawGraph
            </summary>
            <param name="ColumnIndex"></param>
            <param name="SameColumnIndex"></param>
            <returns></returns>
        </member>
        <member name="M:Hippo.specialcharts.Gauge2Graph.DrawYAxis(Hippo.Axis,System.Drawing.RectangleF,System.Drawing.RectangleF)">
            <summary>
            DrawYAxis2
            </summary>
        </member>
        <member name="M:Hippo.specialcharts.Gauge2Graph.GetBackRoundLineArray(System.Single,System.Single,System.Single,System.Single,System.Int32)">
            <summary>
            GetBackRoundLineArray
            </summary>
            <param name="Left"></param>
            <param name="Top"></param>
            <param name="Width"></param>
            <param name="Height"></param>
            <param name="CurvedSPan"></param>
            <returns></returns>
        </member>
        <member name="M:Hippo.specialcharts.Gauge2Graph.GetDynamicRectangle(System.Drawing.RectangleF,System.Int32,System.Int32)">
            <summary>
            SetRecommendSize
            </summary>
        </member>
        <member name="M:Hippo.specialcharts.Gauge2Graph.SetRecommendSize1(System.Drawing.RectangleF)">
            <summary>
            SetRecommendSize
            </summary>
        </member>
        <member name="M:Hippo.specialcharts.Gauge2Graph.SetRecommendSize5(System.Drawing.RectangleF)">
            <summary>
            푸른 반원 게이지
            </summary>
            <param name="InnerRectangle"></param>
        </member>
        <member name="M:Hippo.specialcharts.GaugeGraph.GetCoordinateType">
            <summary>
            GetCoordinateType
            </summary>
            <returns></returns>
        </member>
        <member name="M:Hippo.specialcharts.GaugeGraph.GetCoordinateDirection">
            <summary>
            GetCoordinateDirection
            </summary>
            <returns></returns>
        </member>
        <member name="M:Hippo.specialcharts.GaugeGraph.DrawGraph(System.Int32,System.Int32)">
            <summary>
            DrawGraph
            </summary>
            <param name="ColumnIndex"></param>
            <param name="SameColumnIndex"></param>
            <returns></returns>
        </member>
        <member name="M:Hippo.specialcharts.GaugeGraph.DrawYAxis(Hippo.Axis,System.Drawing.RectangleF,System.Drawing.RectangleF)">
            <summary>
            DrawYAxis2
            </summary>
        </member>
        <member name="M:Hippo.specialcharts.GaugeGraph.DrawYAxis2(Hippo.Axis,System.Drawing.RectangleF,System.Drawing.RectangleF)">
            <summary>
            DrawYAxis2
            </summary>
        </member>
        <member name="M:Hippo.specialcharts.GaugeGraph.GetBackRoundLineArray(System.Single,System.Single,System.Single,System.Single,System.Int32)">
            <summary>
            GetBackRoundLineArray
            </summary>
            <param name="Left"></param>
            <param name="Top"></param>
            <param name="Width"></param>
            <param name="Height"></param>
            <param name="CurvedSPan"></param>
            <returns></returns>
        </member>
        <member name="M:Hippo.specialcharts.GaugeGraph.GetDynamicRectangle(System.Drawing.RectangleF,System.Int32)">
            <summary>
            SetRecommendSize
            </summary>
        </member>
        <member name="M:Hippo.specialcharts.GaugeGraph.GetDynamicRectangle2(System.Drawing.RectangleF,System.Int32,System.Int32)">
            <summary>
            SetRecommendSize
            </summary>
        </member>
        <member name="M:Hippo.specialcharts.GaugeGraph.SetRecommendSize(System.Drawing.RectangleF)">
            <summary>
            SetRecommendSize
            </summary>
        </member>
        <member name="M:Hippo.specialcharts.GaugeGraph.SetRecommendSize1(System.Drawing.RectangleF)">
            <summary>
            SetRecommendSize
            </summary>
        </member>
        <member name="M:Hippo.specialcharts.OrganizationGraph.GetCoordinateType">
            <summary>
            GetCoordinateType
            </summary>
            <returns></returns>
        </member>
        <member name="M:Hippo.specialcharts.OrganizationGraph.GetCoordinateDirection">
            <summary>
            GetCoordinateDirection
            </summary>
            <returns></returns>
        </member>
        <member name="M:Hippo.specialcharts.OrganizationGraph.DrawGraph(System.Int32,System.Int32)">
            <summary>
            DrawGraph
            </summary>
            <param name="ColumnIndex"></param>
            <param name="SameColumnIndex"></param>
            <returns></returns>
        </member>
        <member name="M:Hippo.specialcharts.OrganizationGraph.SetRecommendSize(System.Drawing.RectangleF)">
            <summary>
            SetRecommendSize
            </summary>
            <param name="InnerRectangle"></param>
        </member>
        <member name="M:Hippo.specialcharts.OrganizationGraph.GetDynamicRectangle(System.Int32,System.Single)">
            <summary>
            GetDynamicRectangle
            </summary>
            <param name="depth"></param>
            <param name="SumAngle"></param>
            <returns></returns>
        </member>
        <member name="M:Hippo.specialcharts.SurfaceGraph.GetCoordinateType">
            <summary>
            GetCoordinateType
            </summary>
            <returns></returns>
        </member>
        <member name="M:Hippo.specialcharts.SurfaceGraph.GetCoordinateDirection">
            <summary>
            GetCoordinateDirection
            </summary>
            <returns></returns>
        </member>
        <member name="M:Hippo.specialcharts.SurfaceGraph.Project(System.Double,System.Double,System.Double)">
            <summary>
            Performs projection. Calculates screen coordinates for 3D point.
            </summary>
            <param name="x">Point's x coordinate.</param>
            <param name="y">Point's y coordinate.</param>
            <param name="z">Point's z coordinate.</param>
            <returns>Point in 2D space of the screen.</returns>
        </member>
        <member name="P:Hippo.specialcharts.SurfaceGraph.Density">
            <summary>
            Surface spanning net density
            </summary>
        </member>
        <member name="P:Hippo.specialcharts.SurfaceGraph.PenColor">
            <summary>
            Quadrilateral pen color
            </summary>
        </member>
        <member name="T:Hippo.specialcharts.VectorGraph">
            <summary>
            VectorGraph
            </summary>
        </member>
        <member name="M:Hippo.specialcharts.VectorGraph.GetCoordinateType">
            <summary>
            GetCoordinateType
            </summary>
            <returns></returns>
        </member>
        <member name="M:Hippo.specialcharts.VectorGraph.GetCoordinateDirection">
            <summary>
            GetCoordinateDirection
            </summary>
            <returns></returns>
        </member>
        <member name="M:Hippo.specialcharts.VectorGraph.DrawGraph(System.Int32,System.Int32)">
            <summary>
            DrawGraph
            </summary>
            <param name="ColumnIndex"></param>
            <param name="SameColumnIndex"></param>
            <returns></returns>
        </member>
        <member name="M:Hippo.specialcharts.VectorGraph.GetVarWidth(System.Int32)">
            <summary>
            GetVarWidth -  컬럼 차트 류의 컬럼 굵기를 결정한다. 
            </summary>
            <param name="valCount"></param>
            <returns></returns>
        </member>
        <member name="M:Hippo.specialcharts.VectorGraph.Dispose">
            <summary>
            Dispose
            </summary>
        </member>
        <member name="T:Hippo.UnAxisCalculator">
            <summary>
            비좌표 차트 계산 로직
            </summary>
            <remarks>호출 대상이 아닙니다.</remarks>
        </member>
        <member name="M:Hippo.UnAxisCalculator.AnalysisDataSource(Hippo.SeriesList,System.Int32)">
            <summary>
            AnalysisDataSource
            </summary>
            <param name="_serieslist"></param>
            <param name="seriesIndex"></param>
            <returns></returns>
        </member>
        <member name="M:Hippo.UnAxisCalculator.AnalysisDataSource">
            <summary>
            데이터 소스 분석   - 최대, 최소, 평균, 중앙값, 분산, 표준편차, YAxis.itemCount를 구한다.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Hippo.UnAxisCalculator.GetUnitValue(Hippo.SeriesList)">
            <summary>
            GetUnitValue - 눈금의 기준값을 구한다. (MaxUnitValue, MinUnitValue, YInterVal)
            </summary>
            <returns></returns>
        </member>
        <member name="M:Hippo.UnAxisCalculator.SetAxises(Hippo.SeriesList)">
            <summary>
            축 라벨리스트를 구합니다.
            </summary>
            <param name="serieslist"></param>
        </member>
        <member name="T:Hippo.UnAxisDrawer">
            <summary>
            좌표 성질이 없는 차트의 기본 환경을 그린다.
            </summary>
            <remarks>호출 대상이 아닙니다.</remarks>
        </member>
        <member name="M:Hippo.UnAxisDrawer.#ctor(System.Drawing.Graphics)">
            <summary>
            UnAxisDrawer 인스턴스를 생성합니다.
            </summary>
            <param name="graphic"></param>
        </member>
        <member name="M:Hippo.UnAxisDrawer.DrawStartChart(Hippo.SeriesList,Hippo.LegendLocation,Hippo.PaletteType)">
            <summary>
            DrawStartChart
            </summary>
            <param name="seriesList"></param>
            <param name="legendLocation"></param>
            <param name="paletteType"></param>
            <returns></returns>
        </member>
        <member name="M:Hippo.UnAxisDrawer.DrawDescription">
            <summary>
            DrawDescription - 설명을 그립니다.
            </summary>
        </member>
        <member name="M:Hippo.UnAxisDrawer.DrawInnerLegendBox">
            <summary>
            이너 레전드를 그립니다.
            </summary>
        </member>
        <member name="M:Hippo.UnAxisDrawer.MakeEmptys(System.Int32,System.Int32)">
            <summary>
            차트가 여러개일 경우 길이가 긴쪽을 나누어 적당한 공간을 마련한다.
            </summary>
            <param name="ObjectCount"></param>
            <param name="thisCount"></param>
            <returns></returns>
        </member>
        <member name="M:Hippo.UnAxisDrawer.DrawEndChart(Hippo.SeriesList)">
            <summary>
            DrawEndChart
            </summary>
            <param name="seriesList"></param>
            <returns></returns>
        </member>
        <member name="M:Hippo.UnAxisDrawer.DrawGraphArea(System.Drawing.RectangleF,System.Drawing.Color,System.Drawing.Color,System.String)">
            <summary>
            그래프 영역 그리기
            2015.4.29 새롭게 추가됨
            </summary>
            <param name="GraphZone"></param>
            <param name="backcolor"></param>
            <param name="backlinecolor"></param>
            <param name="backImages"></param>
        </member>
        <member name="M:Hippo.UnAxisDrawer.Dispose">
            <summary>
            Dispose
            </summary>
        </member>
        <member name="P:Hippo.UnAxisDrawer.DebugString">
            <summary>
            디버그를 위한 문자열
            </summary>
        </member>
        <member name="T:Hippo.UnAxisFactors">
            <summary>
            비좌표 특징요소 클래스
            </summary>
            <remarks>
            파이, 게이지, 방사형, 피라미드 등 비좌표 차트들의 중요 속성을 관리합니다. 게이지 차트의 축 설정과 파이 그래프의 3D height 등의 설정이 가능합니다. 
            또한, 비좌표차트내에 있는 미니 축(Axis)를 관리합니다. 
            </remarks>
        </member>
        <member name="M:Hippo.UnAxisFactors.#ctor">
            <summary>
            UnAxisFactors 인스턴스를 생성합니다.
            </summary>
        </member>
        <member name="P:Hippo.UnAxisFactors.BackColor">
            <summary>
            비좌표형 차트의 배경색을 설정하고 가져옵니다. 4.3 버전에서 추가되었습니다.
            </summary>
        </member>
        <member name="P:Hippo.UnAxisFactors.IsShadow">
            <summary>
            파이, 도넷 차트 그림자 효과를 줄지 여부를 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.UnAxisFactors.IsFigureTextLine">
            <summary>
            비좌표 차트의 수치 텍스트를 그래프 외부에 표시할 경우 연결 라인을 표시할 것인지 여부를 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.UnAxisFactors.Axis">
            <summary>
            게이지 축을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.UnAxisFactors.PercentLineDisplayValue">
            <summary>
            수치글자를 자동으로 표시할 경우 라인이 그려지는 퍼센트 한계값을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.UnAxisFactors.TextLocation">
            <summary>
            파이, 피라미드 등 비좌표 차트의 수치 표시 영역을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.UnAxisFactors.Decimalpoint">
            <summary>
            수치를 소수점 몇째자리 까지 보여줄 것인가 여부를 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.UnAxisFactors.PieTypes">
            <summary>
            파이 타입를 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.UnAxisFactors.UnAxisDisplayItemType">
            <summary>
            파이 등 비좌표 차트에 표시할 수치의 여러 타입을 설정하고 가져옵니다. 기본값은 퍼센트만 표시합니다.
            </summary>
        </member>
        <member name="P:Hippo.UnAxisFactors.Pie3DDepth">
            <summary>
            파이 깊이를 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.UnAxisFactors.Percentages">
            <summary>
            퍼센트 정보를 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.UnAxisFactors.Angles">
            <summary>
            각 정보를 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.UnAxisFactors.PieFigures">
            <summary>
            수치 정보를 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.UnAxisFactors.ItemNames">
            <summary>
            아이템 이름 정보를 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.UnAxisFactors.InnerRectangles">
            <summary>
            차트들이 그려질 공간을 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="P:Hippo.UnAxisFactors.IsEmptyAutoSetting">
            <summary>
            비좌표차트의 공간을 자동으로 설정할 것인가 여부를 설정하고 가져옵니다.
            </summary>
        </member>
        <member name="T:Hippo.Percentages">
            <summary>
            비좌표 차트(파이차트 등)의 각 시리즈아이템들의 퍼센트값 컬렉션을 관리하는 클래스
            </summary> 
        </member>
        <member name="T:Hippo.Angles">
            <summary>
            비좌표 차트(파이차트 등)의 각 시리즈아이템들의 각도값 컬렉션을 관리하는 클래스
            </summary>
        </member>
        <member name="T:Hippo.PieFigures">
            <summary>
            비좌표 차트(파이차트 등)의 각 시리즈아이템들의 실제값 컬렉션을 관리하는 클래스
            </summary>
        </member>
        <member name="T:Hippo.ItemNames">
            <summary>
            비좌표 차트(파이차트 등)의 각 시리즈아이템들의 이름 컬렉션을 관리하는 클래스
            </summary>
        </member>
    </members>
</doc>
